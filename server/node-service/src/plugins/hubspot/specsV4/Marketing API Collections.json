openapi: 3.0.0
info:
  title: Marketing API Collections
  description: >-
    **Transactional Email API: I**f you have the [transactional email
    add-on](https://www.hubspot.com/products/email/transactional-email), you can
    send emails over a dedicated IP address for commerce receipts, account
    updates, terms of service changes, and other essential business
    transactions.


    Transactional emails are for relationship-based interactions, unlike
    [marketing
    emails](https://developers.hubspot.com/docs/api/marketing/marketing-emails),
    which are typically used to promote content.  

    **Subscriptions Preferences API:** Subscriptions types represent the legal
    basis to communicate with your contacts through email. Contacts can [manage
    their email
    preferences](https://knowledge.hubspot.com/articles/kcs_article/email/how-to-send-contacts-an-email-with-an-opt-out-link-so-they-can-manage-their-preferences)
    so that they're only opted into the emails they want to receive.  

    **Marketing Emails API:** The Marketing Emails API can be used to
    programmatically create, update, and get details about marketing emails. You
    can also query details about the post-send statistics of a specific email or
    set of emails. These statistics should match what you can access in the app
    on the _Details_ section of a particular email and will be returned under
    the stats object in your JSON response. The Marketing Email API cannot be
    used to create or retrieve data for sales emails that are created and sent
    via the contact record. To get details for sales emails, use the Engagements
    API.


    **Marketing Events API:** A marketing event is a CRM object, similar to
    contacts and companies, that enables you to track and associate marketing
    events, such as a webinar, with other HubSpot CRM objects.


    **Single-Send Email API:** The single-send API allows you to send template
    emails created in the HubSpot marketing email tool using a JSON-formatted
    POST request.


    **Fork the collections using Run in Postman:**


    [<img src="https://run.pstmn.io/button.svg" alt="Run In
    Postman">](https://app.getpostman.com/run-collection/26126890-feae66ed-9a0d-4354-8f57-51b856b57ff4?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D26126890-feae66ed-9a0d-4354-8f57-51b856b57ff4%26entityType%3Dcollection%26workspaceId%3Dd7645f33-539d-49c6-9e0c-efa6faae355d)
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    oauth2Auth:
      type: http
      scheme: oauth2
    apikeyAuth:
      type: http
      scheme: apikey
tags:
  - name: Transactional Email API
    description: "If you have the\_[transactional email add-on](https://www.hubspot.com/products/email/transactional-email),\_you can send emails over\_a dedicated IP address for commerce receipts, account updates, terms of service changes, and other essential business transactions.\n\nTransactional emails are for relationship-based interactions, unlike\_[marketing emails](https://developers.hubspot.com/docs/api/marketing/marketing-emails), which are typically used to promote content.\n\n## Methods for sending transactional email\n\nThere are\_three ways\_to implement transactional email:\n\n- [Set up transactional email in-app](https://knowledge.hubspot.com/email/how-to-use-transactional-email-in-hubspot?_ga=2.45076132.1868562849.1588606909-500942594.1573763828)\n    \n- [SMTP API](https://developers.hubspot.com/docs/api/marketing/transactional-emails#smtp-api)\n    \n- [Single-send API](https://developers.hubspot.com/docs/api/marketing/transactional-emails#single-send-api)\n    \n\n| **METHOD** | **OVERVIEW** | **EXAMPLE USE CASE** |\n| --- | --- | --- |\n| **In-app transactional Email** | Create transactional emails using HubSpot's email editor.  <br>  <br>This provides the same benefits of standard HubSpot emails, such as smart content, personalization and templates.  <br>  <br>Learn more about\_[setting up transactional emails in-app](https://knowledge.hubspot.com/email/how-to-use-transactional-email-in-hubspot). | Send a\_policy update\_email to your customers with a link to a new policy page. This is a service update, not a marketing email, so you don't need to include subscription links (e.g CAN-SPAM links).\_You don't need to use any custom properties or info from external systems. |\n| **SMTP API** | Send transactional email through your own site or app while also tracking email performance and create contact information within HubSpot. The optional ability to create contact information is based on the smtp token creation.  <br>  <br>Learn more in\_[<b>&nbsp;SMTP API section below&nbsp;</b>](https://developers.hubspot.com/docs/api/marketing/transactional-emails#smtp-api) | Send an\_account signup confirmation\_email from a\_separate transactional email system, while also tracking email performance and creating contacts in HubSpot. |\n| **Single-send API** | A combination of in-app transactional email and SMTP API.  <br>  <br>Create transactional emails using HubSpot's email editor, and add custom external tokens to your email which you can send to HubSpot via the API.  <br>  <br>Learn more in the\_[<b>single-send API below&nbsp;</b>](https://developers.hubspot.com/docs/api/marketing/transactional-emails#single-send) | Send a\_purchase receipt\_email to your customer using HubSpot. The email is triggered when the purchase is made, and passes custom values from another system\_(e.g.\_purchased item and purchase total). In addition, track the performance of this email in HubSpot. |\n\n**Please note:**\_any contacts who are CC'd on a transactional email will not be tracked and the email will not appear on the record timeline of the CC'd contact.\n\n## SMTP API\n\nTransactional email sent using the SMTP API is automatically triggered by specific criteria, like making a purchase on an e-commerce website. This API integrates with any internal or third-party systems to both trigger the email and incorporate data stored outside of HubSpot (e.g. shipping info or purchase price). The email is sent from your system, but is wrapped with HubSpot tracking codes that allow full\_[engagement tracking and measurement](https://knowledge.hubspot.com/email/analyze-your-marketing-email-campaign-performance).\n\nTo send an email using the SMTP API, you need to use an SMTP API token to get login credentials for the HubSpot SMTP server. Once you log in to the server, you can send the email over SMTP.\_If you haven't created any SMTP API tokens, you'll first need to\_[generate a new token](https://developers.hubspot.com/docs/api/marketing/transactional-emails#create-a-new-smtp-api-token). If you've already created SMTP API tokens, learn about the\_[different methods for getting your tokens through the API](https://developers.hubspot.com/docs/api/marketing/transactional-emails#get-existing-smtp-api-tokens). After getting your token, learn about how to\_[log in to HubSpot's SMTP server](https://developers.hubspot.com/docs/api/marketing/transactional-emails#log-in).\n\nAny domains you use as the\__From Address_\_of your emails must be connected as an\_[email sending domain](https://knowledge.hubspot.com/domains-and-urls/connect-your-email-sending-domain)\_in HubSpot. You will encounter an error if you send transactional emails through the SMTP API using a domain that isn't authorized to send on behalf of your HubSpot account.\n\n**Please note**: all methods in the SMTP API require an\_[OAuth token](https://developers.hubspot.com/docs/api/oauth-quickstart-guide)\_for authentication.\n\nIf you prefer, all of the methods below for creating, retrieving, deleting, and resetting passwords for SMTP API tokens can be done\_[within your HubSpot account](https://knowledge.hubspot.com/email/how-to-use-transactional-email-in-hubspot#send-a-transactional-email-using-the-smtp-api), rather than the API.\n\n### Create a new SMTP API token\n\nTo create a new SMTP API token, make a\_`POST`\_request to\_`/marketing/v3/transactional/smtp-tokens/`.\n\nThe request body must be a JSON-formatted object with the following properties:\n\n- **`createContact`**:\_indicates whether a contact should be created for email recipients.\n    \n- **`campaignName`**:\_a\_name for the campaign associated with the SMTP API token.\n    \n\nThe response includes an SMTP token object,\_which contains:\n\n- **`id`**: username to log into the HubSpot SMTP server.\n    \n- **`createdBy`**: email address of the user that sent the token creation request.\n    \n- **`password`**: the password for logging in to the HubSpot SMTP server.\n    \n- **`emailCampaignId`**: identifier assigned to the campaign provided in the token creation request.\n    \n- **`createdAt`**: timestamp generated when a token is created.\n    \n- **`createContact`**: indicates whether a contact should be created for email recipients.\n    \n- **`campaignName`**: the name of the campaign associated with the token.\n    \n\nWith your token created, you can\_[log in to HubSpot's SMTP server&nbsp;](https://developers.hubspot.com/docs/api/marketing/transactional-emails#log-in)\_using the\_`id`\_and\_`password`\_values.\n\nA token's password can only be retrieved at the time of creation. If you lose the password, or want to set a new password, you'll need to\_[reset the token's password](https://developers.hubspot.com/docs/api/marketing/transactional-emails#manage-existing-tokens).\_\n\n**Please note:**\_SMTP API tokens generated through the public API expire after 12 months. Once expired, they're automatically deleted. Tokens created directly\_[within your HubSpot account](https://knowledge.hubspot.com/email/how-to-use-transactional-email-in-hubspot#send-a-transactional-email-using-the-smtp-api)\_do\_not\_expire automatically.\n\n### Retrieving SMTP tokens\n\nBelow are the available methods of getting token data using the API.\n\n#### List SMTP API tokens by campaign\n\nTo get either a list of tokens by campaign name, or get a single token by campaign ID, make a\_`GET`\_request to\_`/marketing/v3/transactional/smtp-tokens`.\n\nYou'll also need to include either a\_`campaignName`\_or\_`emailCampaignId`\_parameter with the request. You can find all request details in the Endpoints tab at the top of this article.\n\n**Response details**\n\nThe response contains\_`results`\_and\_`paging`\_as its top-level fields:\n\n- `results`: a collection of\_`SmtpApiTokenView`\_containing:\n    \n    - **`id`**: username to log into the HubSpot SMTP server.\n        \n    - **`createdBy`**: email address of the user that sent the token creation request.\n        \n    - **`emailCampaignId`**: identifier assigned to the campaign provided in the token creation request.\n        \n    - **`createdAt`**: timestamp generated when a token is created.\n        \n    - **`createContact`**: indicates whether a contact should be created for email recipients.\n        \n    - **`campaignName`**: the name of the campaign associated with the token.\n        \n- `paging`: contains a\_`next.after`\_field that can be used to request more results.\n    \n\n#### Query a single SMTP API token\n\nTo query a single SMTP API token by ID, make a\_`GET`\_request to\_`/marketing/v3/transactional/smtp-tokens/{tokenId}`.\n\n##### **Response details**\n\nThe response includes\_`SmtpApiTokenView`, which contains:\n\n- **`id`**: username to log into the HubSpot SMTP server.\n    \n- **`createdBy`**: email address of the user that sent the token creation request.\n    \n- **`emailCampaignId`**: identifier assigned to the campaign provided in the token creation request.\n    \n- **`createdAt`**: timestamp generated when a token is created.\n    \n- **`createContact`**: indicates whether a contact should be created for email recipients.\n    \n- **`campaignName`**: the name of the campaign associated with the token.\n    \n\n### Manage existing tokens\n\nAfter creating tokens, you can reset a password or delete the token using the API.\n\n#### Reset password\n\nTo reset a token password, make a POST request to\_`/marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset`.\n\nThe response includes\_`SmtpApiTokenView`, which contains:\n\n- **`id`**: username to log into the HubSpot SMTP server.\n    \n- **`createdBy`**: email address of the user that sent the token creation request.\n    \n- **`emailCampaignId`**: identifier assigned to the campaign provided in the token creation request.\n    \n- **`createdAt`**: timestamp generated when a token is created.\n    \n- **`createContact`**: indicates whether a contact should be created for email recipients.\n    \n- **`campaignName`**: the name of the campaign associated with the token.\n    \n\n#### Delete a token\n\nTo delete a single SMTP API token, make a DELETE request to\_\_`/marketing/v3/transactional/smtp-tokens/{tokenId}`.\_\n\nThe response does not include any content.\n\n### Log in to HubSpot's SMTP server\n\nBelow are the details for logging in to HubSpot's SMTP server, using the username (`id`) and password provided by your token.\n\n- **SMTP Hostname:**\n    \n    - If you're not based in the EU, use\_`smtp.hubapi.com`\_for the hostname.\n        \n    - If you're based in the EU, use\_`smtp-eu1.hubapi.com`\_for the hostname.\n        \n- **SMTP Port:**\n    \n    - For STARTTLS, you can use port 25 or 587.\n        \n    - For direct TLS, use port 465.\n        \n- **SMTP User Name:**\_provided in the ID field\n    \n- **SMTP Password:**\_provided in the password field\n    \n\n## Single-send API\n\nThe\_Single-Send API\_sends\_template emails created in the HubSpot email tool using a JSON-formatted\_`POST`\_request. Any emails sent through this API will be automatically associated with contact records based on email address. If there's no contact with a matching email address, a new contact with that email will be created. If you want to send emails without creating contacts, use the\_[SMTP API](https://developers.hubspot.com/docs/api/marketing/transactional-emails#SMTP-API).\n\n### Create and publish your email template\n\nThe\_Single-Send API\_sends\_template emails created in the HubSpot email tool using a JSON-formatted\_`POST`\_request. Any emails sent through this API will be automatically associated with contact records based on email address. If there's no contact with a matching email address, a new contact with that email will be created. If you want to send emails without creating contacts, use the\_[SMTP API](https://developers.hubspot.com/docs/api/marketing/transactional-emails#SMTP-API).\n\nFirst,\_[set up your email in HubSpot](https://knowledge.hubspot.com/email/how-to-use-transactional-email-in-hubspot). After you create the email, you can set the recipient details, including any contact or custom properties set up in the email template, in the body of the API request. Before you can make the API request, you'll need the ID of the email:\n\n- If you leave the email drafted without publishing it, you can get the email ID from the URL when you're in the email editor. The ID is the final numeric value before the final slash character (`/`) in the URL (e.g.,\_`https://app.hubspot.com/email/{PORTAL_ID}/edit/{EMAIL_ID}/settings`).\n    \n\n<img src=\"https://developers.hubspot.com/hs-fs/hubfs/Knowledge_Base_2023/email-id-for-drafted-single-send-api-email.png?width=800&amp;height=133&amp;name=email-id-for-drafted-single-send-api-email.png\" alt=\"\">\n\n- If you publish your email, you can copy the email ID from the email details page.\n    \n\n<img src=\"https://developers.hubspot.com/hs-fs/hubfs/Screen Shot 2020-04-15 at 1.00.37 PM.png?width=872&amp;name=Screen Shot 2020-04-15 at 1.00.37 PM.png\" alt=\"\">\n\n**Please note:**\_HubSpot does not save the HTML/JSON sent through this API. You can review the email template from the recipient contact's timeline, but if you want to keep a record of the email's contents, it's recommended to add a BCC to the email.\n\n### Send your email using the single-send API\n\nTo send an email with the Single-Send API, make a\_`POST`\_request to\_`/marketing/v3/transactional/single-email/send`.\n\nThe response contains the following fields:\n\n- `requestedAt`: the timestamp of when the send was requested.\n    \n- `statusId`: an identifier that can be used to\_[query the status of the send](https://developers.hubspot.com/docs/api/marketing/transactional-emails#query-the-status-of-an-email-send).\n    \n- `status`: the status of the send request. Includes\_`PENDING`,\_`PROCESSING`,\_`CANCELED`, and\_`COMPLETE`.\n    \n\n### Request properties\n\nThe request body must be a JSON-formatted object with the following properties:\n\n- `emailId`\n    \n- `message`\n    \n- `contactProperties`\n    \n- `customProperties`\n    \n\n#### emailId\n\nThe\_`emailId`\_field contains the transactional email's content ID, which can be found in HubSpot's email tool.\n\n#### message\n\nThe message field is a JSON object containing anything that you want to override. At the minimum, you must include the\_`to`\_field.\n\nMessage object fields:\n\n- `to`: the recipient of the email\n    \n- `from`: the \"From\" header for the email. You can define a from name with the following format:\_`\"from\":\"Sender Name \"`\n    \n- `sendId`: the ID of a particular send. Only one email with a given\_`sendId`\_will be sent per account, so you can include this field to prevent duplicate email sends.\n    \n- `replyTo`:\_ a JSON list of \"Reply-To\" header values for the email.\n    \n- `cc`: a JSON list of email addresses to send as Cc.\n    \n- `bcc`: a JSON list of email addresses to send as Bcc.\n    \n\n#### contactProperties\n\nThe\_`contactProperties`\_field is a JSON map of contact property values. Each contact property value contains a\_`name`\_and\_`value`. Each property will be set on the contact record and will be visible in the template under:\n\n<img src=\"https://developers.hubspot.com/hs-fs/hubfs/Knowledge_Base_2021/Developer/name-token-in-template-for-transactional-email.png?width=88&amp;height=29&amp;name=name-token-in-template-for-transactional-email.png\" alt=\"\">\n\nUse these properties when you want to set a contact property while you’re sending the email. For example, when sending a receipt you may want to set a\_`last_paid_date`\_property, as the sending of the receipt will have information about the last payment.\n\nJSON\n\n```\n{\n  \"emailId\": 4126643121,\n  \"message\": {\n    \"to\": \"jdoe@hubspot.com\"\n    \"sendId\": \"6\"\n  },\n  \"contactProperties\": {\n    \"last_paid_date\": \"2022-03-01\",\n    \"firstname\": \"jane\"\n  } \n}\n\n ```\n\n#### customProperties\n\nThe\_`customProperties`\_field is a JSON map of key-value properties. These properties are generally related to the email itself, not the contact receiving the email. They will not appear in the\_[web page version of the email](https://knowledge.hubspot.com/email/create-a-web-version-of-your-marketing-email), or in the view of the email from the contact's timeline. These properties are also not stored in HubSpot and will only be included in the sent email.\n\nEach key in the\_`customProperties`\_field can be referenced in the template using a\_[HubL expression](https://developers.hubspot.com/docs/cms/hubl)\_for fields contained within the\_`custom`\_variable (e.g.,\_`{{custom.NAME_OF_PROPERTY}}`\_).\n\nFor example, if your email template references two properties,\_`purchaseUrl`\_and\_`productName`, you could provide the associated values for these properties with the following request body:\n\nJSON\n\n```\n{\n  \"emailId\": 4126643121,\n  \"message\": {\n    \"to\": \"jdoe@hubspot.com\"\n    \"sendId\": \"6\"\n  },\n  \"customProperties\": {\n    \"purchaseUrl\": \"https://example.com/link-to-product\",\n    \"productName\": \"vanilla\"\n  } \n}\n\n ```\n\nYou can then reference these properties in your email template:\n\nHubL\n\n```\n\n<html>\n  <p>\n    Congrats on purchasing some of the best ice cream around.\n  </p>\n  <a href={{custom.purchaseUrl}}>{{custom.productName}}</a>\n</html>\n\n ```\n\nThe\_`customProperties`\_field only supports arrays when used with\_[programmable email content](https://developers.hubspot.com/docs/cms/guides/email/hubdb-crm-objects). In your email template, you can reference the items defined in your\_`customProperties`\_field by using a\_[HubL expression](https://developers.hubspot.com/docs/cms/hubl)\_(e.g., using a\_[for loop](https://developers.hubspot.com/docs/cms/hubl/for-loops)\_to render each item in a list).\_For example, if the\_`customProperties`\_you included in your request body was structured like the following JSON snippet below:\n\nJSON\n\n```\n{\n  \"emailId\": 4126643122,\n  \"message\": {\n    \"to\": \"jdoe@hubspot.com\"\n    \"sendId\": \"7\"\n  },\n  \"customProperties\": {\n    \"exampleArray\": [\n      {\"firstKey\": \"someValue\", \"secondKey\": \"anotherValue\"},\n      {\"firstKey\": \"value1\", \"secondKey\": \"value2\" }\n    ]\n  } \n}\n\n ```\n\nYou could then reference the values for each item in\_`exampleArray`\_with the following HubL code:\n\nHubL\n\n```\n\n<html>\n  <p>\n    Thanks for your recent purchase! Here are the details of the items you'll be receiving:\n  </p>\n  <ul>\n    {% for item in custom.exampleArray %}\n      <li>First key: {{ item.firstKey }}, Second key: {{item.secondKey}}</li>\n    {% endfor %}  \n  </ul>\n</html>\n\n ```\n\nOnce sent, the transactional email would render the contents of the associated programmable email template as follows:\n\n<img src=\"https://developers.hubspot.com/hs-fs/hubfs/Knowledge_Base_2021/Developer/example-transactional-email-with-customProperties-array.png?width=568&amp;height=114&amp;name=example-transactional-email-with-customProperties-array.png\" alt=\"\">\n\n### Query the status of an email send\n\nTo get the status of the email send, make a\_`GET`\_request to\_`https://api.hubapi.com/marketing/v3/email/send-statuses/{statusId}`.\_\n\nThe response contains the following fields:\n\n- `sendResult`: an enumeration that represents the email's send status. The possible values are\_[listed below](https://developers.hubspot.com/docs/api/marketing/transactional-emails#sendresult-values).\n    \n- `requestedAt`: the timestamp from when the send was requested.\n    \n- `startedAt`: the timestamp when the send began processing.\n    \n- `completedAt`: the timestamp when the send completed.\n    \n- `statusId`: an identifier that can be used to query the status of the send.\n    \n- `status`: the status of the send request. Includes\_`PENDING`,\_`PROCESSING`,\_`CANCELED`, and\_`COMPLETE`.\n    \n- `eventId`: if sent, the ID and created timestamp of the sent event.\n    \n\n#### sendResult\n\nThe\_`sendResult`\_is an enumeration that reflects the result of an email send attempt. Its possible values are:\n\n- `SENT`: the email was sent successfully.\n    \n- `QUEUED`: the email was queued and will send as the queue gets processed.\n    \n- `PORTAL_SUSPENDED`: due to\_[Acceptable Use Policy](https://legal.hubspot.com/acceptable-use)\_violations, the HubSpot customer's email has been suspended.\n    \n- `INVALID_TO_ADDRESS`: the recipient address is invalid. This error will also occur if you attempt to send an email with any of the following role-based prefixes in the email address:\_`abuse`,\_`no-reply`,\_`noreply`,\_`root`,\_`spam`,\_`security`,\_`undisclosed-recipients`,\_`unsubscribe`,\_`inoc`,\_`postmaster`, or\_`privacy`.\n    \n- `BLOCKED_DOMAIN`: the domain cannot receive emails from HubSpot at this time.\n    \n- `PREVIOUSLY_BOUNCED`: the recipient has previously bounced, and the sending logic resulted in no send.\n    \n- `PREVIOUS_SPAM`: the recipient has previously marked similar email as spam.\n    \n- `INVALID_FROM_ADDRESS`: the\__From_\_address is invalid.\n    \n- `MISSING_CONTENT`: the\_`emailId`\_is invalid, or the\_`emailId`\_corresponds to an email that wasn't set up for Single-Send.\n    \n- `MISSING_TEMPLATE_PROPERTIES`: there are properties set up in the template that have not been included in the\_`customProperties`\_sent in the request."
  - name: Transactional Email API > Public_Smtp_Tokens
  - name: Transactional Email API > Single_Send
  - name: Subscription Preferences API
    description: "Subscriptions types represent the legal basis to communicate with your contacts through email.\_Contacts can\_[manage their email preferences](https://knowledge.hubspot.com/articles/kcs_article/email/how-to-send-contacts-an-email-with-an-opt-out-link-so-they-can-manage-their-preferences)\_so that they're only opted into the emails they want to receive.\n\n**Please note:**\_the subscription preferences API does\_not\_currently support retrieving or updating\_[WhatsApp](https://knowledge.hubspot.com/inbox/collect-consent-for-whatsapp-conversations)\_subscription information for a contact.\n\n## **Get contact subscription status**\n\nThe contact subscription status endpoint allows users to retrieve the subscription statuses for an email address in an account.\n\nThis endpoint is ideal for when you have an external preferences center or integration and need to know the subscription statuses for any given email address in your account.\n\n---\n\n## **Subscribe contact**\n\nThe subscribe contact endpoint allows you to subscribe an email address to any given subscription type in an account, but\_**will not allow you to resubscribe contacts who have opted out.**\_\n\n**Example use case:**\_This endpoint is ideal for when you have an integration or external form that needs to opt contacts into a subscription type.\_\n\n**Note**: The subscribe contact endpoint should only be used to honor requests from contacts who have given you permission to subscribe them. Please\_[&nbsp;review applicable laws and regulations](https://knowledge.hubspot.com/contacts/how-do-subscription-preferences-and-types-work)\_before subscribing a contact.\_\n\n---\n\n## **Unsubscribe contact**\n\nThe unsubscribe contact endpoint allows allows you to unsubscribe an email address in an account from any given subscription type.\_\n\n**Example use case:**\_This endpoint is ideal for when you have an integration or external form that needs to opt contacts out of a subscription type.\n\n---\n\n## **Get subscription types**\n\nThe subscription info endpoint allows users to retrieve all subscription types in their account.\n\n**Example use case:**\_This endpoint is ideal for when you have an external preferences center, integration, or form and need to know which subscription types exist in your account so you can update the subscription statuses for your contacts accordingly."
  - name: Subscription Preferences API > Status
  - name: Subscription Preferences API > Subscription_Status
  - name: Subscription Preferences API > Definition
  - name: Marketing Emails API
    description: "**Please note**: This API is currently in beta and is subject to change based on testing and feedback. By using these endpoints you agree to adhere to our\_[Developer Terms](https://legal.hubspot.com/hubspot-developer-terms)&\_[Developer Beta](https://legal.hubspot.com/developerbetaterms?)Terms. You also acknowledge and understand the risk associated with testing an unstable API.\_\n\nIf you have a\__**Marketing Hub**_\__Professional_\_or\__Enterprise_\_account, you can use the Marketing Emails API to programmatically create, update, and get details about marketing emails. You can also query details about the post-send statistics of a specific email or set of emails. These statistics should match what you can access in the app on the\__Details_\_section of a particular email and will be returned under the stats object in your JSON response.\_The Marketing Email API cannot be used to create or retrieve data for\_sales emails that are created and sent via the contact record. To get details for sales emails, use the Engagements API.\n\n**Please note:**\n\n- To programmatically send transactional emails to contacts, use the\_[Single-send API](https://developers.hubspot.com/docs/api/marketing/transactional-emails#single-send-api).\n    \n- To use the\_`/publish`\_and\_`/unpublish`\_endpoints, you must have a\__**Marketing Hub**_\__Enterprise_\_account or the\_[transactional email add-on](https://www.hubspot.com/products/marketing/transactional-email)."
  - name: Marketing Emails API > Statistics
  - name: Marketing Emails API > Marketing Emails
  - name: Marketing Events API
    description: "# [Marketing Events](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#marketing-events)\n\n[Marketing events endpoint reference](https://developers.hubspot.com/beta-docs/reference/api/marketing/marketing-events)\n\nA marketing event is a CRM object, similar to contacts and companies, that enables you to track and associate marketing events, such as a webinar, with other HubSpot CRM objects. Below, learn more about working with the marketing event API to integrate marketing events into an app.\n\n## [In this article](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#in-this-article)\n\n- [Scope requirements](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#scope-requirements)\n    \n- [Differences between internal ID and external ID endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#differences-between-internal-id-and-external-id-endpoints)\n    \n- [Event management endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#create-and-update-events)\n    \n- [Event attendance endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#event-attendance-endpoints)\n    \n- [Participant state endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#participant-state-endpoints)\n    \n- [List association endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#list-association-endpoints)\n    \n- [Configure app settings](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#configure-app-settings)\n    \n    - [Step 1: Create an API in your app](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#step-1-create-an-api-in-your-app)\n        \n    - [Step 2: Provide HubSpot with the URL path to your API](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#step-2-provide-hubspot-with-the-url-path-to-your-api)\n        \n\n## [Scope requirements](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#scope-requirements)\n\nTo make an API request to one of the marketing event endpoints, the following\_[scopes](https://developers.hubspot.com/beta-docs/guides/apps/authentication/working-with-oauth#scopes)\_are required:\n\n- `crm.objects.marketing_events.read`: grants permission to retrieve marketing event and attendance data.\n    \n- `crm.objects.marketing_events.write`: grants permission to create, delete, or make changes to marketing event information.\n    \n\nWhen authenticating calls made by your app, you can either use a\_[private app access token](https://developers.hubspot.com/beta-docs/guides/apps/private-apps/overview)\_or\_[OAuth](https://developers.hubspot.com/beta-docs/guides/api/app-management/oauth-tokens). Learn more about\_[authentication methods](https://developers.hubspot.com/beta-docs/guides/apps/authentication/intro-to-auth). For the full list of endpoints available, check out the\_[reference documentation](https://developers.hubspot.com/beta-docs/reference/api/marketing/marketing-events).\n\n## [Differences between internal ID and external ID endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#differences-between-internal-id-and-external-id-endpoints)\n\nMany endpoints below provide two different ways to identify an event you want to fetch or update. Though the end result for similar endpoints might be the same, they differ mainly in the associated IDs you provide:\n\n- **Endpoints using external IDs:**\_endpoints that require\_`externalEventId`\_and\_`externalAccountId`\_parameters will only work in the same app that originally created the event. For example, if you created two public apps, called\__App A_\_and\__App B_, and you created a marketing event via the authentication and IDs associated with\__App A_, only\__App A_\_can read, update, or add new participants to the event. If you attempt to access the same event with\__App B_\_using the same externalEventId and externalAccountId, a 404 error will result.\n    \n- **Endpoints using an objectId (BETA):**\_endpoints that require an\_`objectId`\_can be used to access an event by any app with the associated scopes listed in the section above, regardless of the app that originally created the event. If\__App A_\_created a marketing event,\__App B_\_can still read, update, or add participants through\_`objectId`\\-based endpoints.\n    \n\n**Please note:**\_the endpoints that require the\_`objectId`\_of an event are currently in beta, and are subject to change based on testing and feedback. By using these endpoints, you agree to adhere to\_[HubSpot's Developer Terms](https://legal.hubspot.com/hubspot-developer-terms)\_&\_[Developer Beta Terms](https://legal.hubspot.com/developerbetaterms). You also acknowledge and understand the risk associated with testing an unstable API.\n\n## [Event management endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#event-management-endpoints)\n\nThe following sections provide context on common event properties, and detail how to use the various event management endpoints to create, read, update, and archive events.\n\n### [Event properties](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#event-properties)\n\nThe following properties are available to fetch and update when using the event management endpoints:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| `eventName` | String | The title of your event. |\n| `eventType` | String | The type of the event (e.g., webinar, tradeshow, etc.). |\n| `eventOrganizer` | String | The individual or organization that's hosting the event. |\n| `eventDescription` | String | A description for your event. |\n| `eventUrl` | String | A URL that users can navigate to where they can learn more details and/or register for your event. |\n| `eventCancelled` | Boolean | Whether or not the event is cancelled. |\n| `eventStartTime` | String | An ISO 8601 formatted timestamp of the event's start time. |\n| `eventEndTime` | String | An ISO 8601 formatted timestamp of the event's start time. |\n\n### [Create an event](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#create-an-event)\n\nTo create a marketing event you can make a\_`POST`\_request to\_`/marketing/v3/marketing-events/events`\_and provide the\_`eventName`,\_`externalEventId`,\_`externalAccountId`, and\_`eventOrganizer`\_in the body of your request. You can optionally provide any additional properties listed in the\_[table above](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#event-properties)\_in your request.\n\nFor example, if the\_`externalAccountId`\_of your app is\_`\"12345\"`, and the\_`externalEventId`\_of your event in your app is\_`\"67890\"`, you could create a new event called\_`\"Winter webinar\"`\_with a request that would resemble the following:\n\nCopy code snippet1\n\n```\n// Example request body for POST request to /marketing/v3/marketing-events\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"externalAccountId\": \"12345\",\n\n ```\n\n4\n\n```\n \_\"externalEventId\": \"67890\",\n\n ```\n\n5\n\n```\n \_\"eventName\": \"Winter webinar\",\n\n ```\n\n6\n\n```\n \_\"eventOrganizer\": \"Snowman Fellowship\",\n\n ```\n\n7\n\n```\n \_\"eventCancelled\": false,\n\n ```\n\n8\n\n```\n \_\"eventUrl\": \"https://example.com/holiday-jam\",\n\n ```\n\n9\n\n```\n \_\"eventDescription\": \"Let's get together to plan for the holidays\",\n\n ```\n\n10\n\n```\n \_\"eventCompleted\": false,\n\n ```\n\n11\n\n```\n \_\"startDateTime\": \"2024-08-07T12:36:59.286Z\",\n\n ```\n\n12\n\n```\n \_\"endDateTime\": \"2024-08-07T12:36:59.286Z\",\n\n ```\n\n13\n\n```\n \_\"customProperties\": [\n\n ```\n\n14\n\n```\n \_  {\n\n ```\n\n15\n\n```\n \_ \_ \_\"eventSeason\": \"winter\"\n\n ```\n\n16\n\n```\n \_  }\n\n ```\n\n17\n\n```\n  ]\n\n ```\n\n18\n\n```\n}\n\n ```\n\n### [Update event properties using external IDs](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#update-event-properties-using-external-ids)\n\nYou can update marketing events by making a\_`POST`\_request to\_`/marketing/v3/marketing-events/events/upsert`\_endpoint. You can include any\_`customProperties`\_along with any other details of your event (including its name, start time, and description).\n\nIf a marketing event already exists with the specified ID in your request, it will be updated. Otherwise, a new event will be created.\n\nFor example, the following request would create an event with an ID of\_`4`\_named \"Virtual cooking class\":\n\nCopy code snippet\n\n1\n\n```\n// Example request body for POST request to /marketing/v3/marketing-events/events/upsert\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"inputs\": [\n\n ```\n\n4\n\n```\n \_  {\n\n ```\n\n5\n\n```\n \_ \_ \_\"customProperties\": [\n\n ```\n\n6\n\n```\n \_ \_ \_  {\n\n ```\n\n7\n\n```\n \_ \_ \_ \_ \_\"name\": \"property1\",\n\n ```\n\n8\n\n```\n \_ \_ \_ \_ \_\"value\": \"1234\"\n\n ```\n\n9\n\n```\n \_ \_ \_  }\n\n ```\n\n10\n\n```\n \_ \_  ],\n\n ```\n\n11\n\n```\n \_ \_ \_\"eventName\": \"Virtual cooking class\",\n\n ```\n\n12\n\n```\n \_ \_ \_\"startDateTime\": \"2023-11-30T17:46:20.461Z\",\n\n ```\n\n13\n\n```\n \_ \_ \_\"eventOrganizer\": \"Chef Joe\",\n\n ```\n\n14\n\n```\n \_ \_ \_\"eventDescription\": \"Join us for a virtual cooking class! Yum.\"\n\n ```\n\n15\n\n```\n \_ \_ \_\"eventCancelled\": false,\n\n ```\n\n16\n\n```\n \_ \_ \_\"externalAccountId\": \"CookingCo\",\n\n ```\n\n17\n\n```\n \_ \_ \_\"externalEventId\": \"4\"\n\n ```\n\n18\n\n```\n \_  }\n\n ```\n\n19\n\n```\n  ]\n\n ```\n\n20\n\n```\n}\n\n ```\n\n### [Update event properties using its objectId](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#update-event-properties-using-its-objectid)\n\nOnce an event is created, you can update its properties by making a\_`PATCH`\_request to\_`/marketing/v3/marketing-events/{objectId}`.\n\n- To get the\_`objectId`\_for a specific marketing event, follow the instructions in\_[this knowledge base article](https://knowledge.hubspot.com/integrations/use-marketing-events#view-and-analyze-marketing-events)\_to view the details for an event in your HubSpot account, then locate the ID under the\__Record ID_\_field. The\_`objectId`\_will also be returned in the response when you successfully create an event.\n    \n- You can also make a\_`GET`\_request to the\_`/marketing/v3/marketing-events`\_endpoint described in the next section.\n    \n- If you have the\_`externalEventId`\_of an event, you can include it as a path when making a\_`GET`\_request to\_`/marketing/v3/marketing-events/{externalEventId}/identifiers`. The response will include all marketing events along with the relevant identifiers for each event (i.e., the event's\_`objectId`, its\_`appInfo`, the\_`marketingEventName`, and the\_`externalAccountId`).\n    \n\n### [Get event details](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#get-event-details)\n\nTo get a list of all marketing events along with their properties, make a\_`GET`\_request to\_`/marketing/v3/marketing-events`.\n\nIf you need to retrieve the details for a specific marketing event by its\__Record ID_\_in HubSpot, you can provide the ID as the objectId in a\_`GET`\_request to\_`/marketing/v3/marketing-events/{objectId}`.\n\nCopy code snippet\n\n1\n\n```\n// Example response for GET request to /marketing/v3/marketing-events/{objectId}\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"eventName\": \"Test Marketing Event\",\n\n ```\n\n4\n\n```\n \_\"eventType\": \"test-type\",\n\n ```\n\n5\n\n```\n \_\"startDateTime\": \"2024-05-22T12:29:50.734Z\",\n\n ```\n\n6\n\n```\n \_\"endDateTime\": \"2024-05-25T12:29:50.734Z\",\n\n ```\n\n7\n\n```\n \_\"eventOrganizer\": \"testEventOrganizer\",\n\n ```\n\n8\n\n```\n \_\"eventDescription\": \"testDescription\",\n\n ```\n\n9\n\n```\n \_\"eventUrl\": \"testURL\",\n\n ```\n\n10\n\n```\n \_\"eventCancelled\": true,\n\n ```\n\n11\n\n```\n \_\"eventCompleted\": false,\n\n ```\n\n12\n\n```\n \_\"customProperties\": [\n\n ```\n\n13\n\n```\n \_  {\n\n ```\n\n14\n\n```\n \_ \_ \_\"name\": \"test_custom_prop\",\n\n ```\n\n15\n\n```\n \_ \_ \_\"value\": \"1\"\n\n ```\n\n16\n\n```\n \_  },\n\n ```\n\n17\n\n```\n \_  {\n\n ```\n\n18\n\n```\n \_ \_ \_\"name\": \"test_prop\",\n\n ```\n\n19\n\n```\n \_ \_ \_\"value\": \"2\"\n\n ```\n\n20\n\n```\n \_  }\n\n ```\n\n21\n\n```\n  ],\n\n ```\n\n22\n\n```\n \_\"objectId\": \"58237132332\",\n\n ```\n\n23\n\n```\n \_\"externalEventId\": null,\n\n ```\n\n24\n\n```\n \_\"eventStatus\": \"CANCELLED\",\n\n ```\n\n25\n\n```\n \_\"appInfo\": {\n\n ```\n\n26\n\n```\n \_ \_\"id\": \"111\",\n\n ```\n\n27\n\n```\n \_ \_\"name\": \"Zoom\"\n\n ```\n\n28\n\n```\n  },\n\n ```\n\n29\n\n```\n \_\"registrants\": 1,\n\n ```\n\n30\n\n```\n \_\"attendees\": 1,\n\n ```\n\n31\n\n```\n \_\"cancellations\": 2,\n\n ```\n\n32\n\n```\n \_\"noShows\": 0,\n\n ```\n\n33\n\n```\n \_\"createdAt\": \"2024-08-07T12:58:40.635Z\",\n\n ```\n\n34\n\n```\n \_\"updatedAt\": \"2024-10-15T13:35:03.353Z\"\n\n ```\n\n35\n\n```\n}\n\n ```\n\n### [Delete an event](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#delete-an-event)\n\nTo delete a marketing event, make a\_`DELETE`\_request to\_`/marketing/v3/marketing-events/{objectId}`\_with the event's associated\_`objectId`.\n\nIf successful, you'll receive a\_`204 No Content`\_response.\n\n### [Update multiple events in bulk](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#update-multiple-events-in-bulk)\n\nTo update multiple marketing events in bulk, you can make a\_`POST`\_request to\_`/marketing-events/v3/marketing-events/batch/update`\_and provide the properties you want to update for each event within the inputs array of the request body.\n\nFor example, if you wanted to update several properties of two marketing events with object IDs of 58237132332 and 54073507364 in a single request, the body of your request would resemble the following:\n\nCopy code snippet\n\n1\n\n```\n// Example request body for batch request to update marketing events\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"inputs\": [\n\n ```\n\n4\n\n```\n \_  {\n\n ```\n\n5\n\n```\n \_ \_ \_\"objectId\": \"58237132332\",\n\n ```\n\n6\n\n```\n \_ \_ \_\"eventCancelled\": true,\n\n ```\n\n7\n\n```\n \_ \_ \_\"eventOrganizer\": \"testEventOrganizer\",\n\n ```\n\n8\n\n```\n \_ \_ \_\"eventUrl\": \"testURL\",\n\n ```\n\n9\n\n```\n \_ \_ \_\"eventDescription\": \"testDescription\",\n\n ```\n\n10\n\n```\n \_ \_ \_\"eventName\": \"Test Marketing Event Update\",\n\n ```\n\n11\n\n```\n \_ \_ \_\"eventType\": \"test-type\"\n\n ```\n\n12\n\n```\n \_  },\n\n ```\n\n13\n\n```\n \_  {\n\n ```\n\n14\n\n```\n \_ \_ \_\"objectId\": \"54073507364\",\n\n ```\n\n15\n\n```\n \_ \_ \_\"eventCancelled\": true,\n\n ```\n\n16\n\n```\n \_ \_ \_\"eventOrganizer\": \"testEventOrganizer\",\n\n ```\n\n17\n\n```\n \_ \_ \_\"eventUrl\": \"testURL\",\n\n ```\n\n18\n\n```\n \_ \_ \_\"eventDescription\": \"testDescription\",\n\n ```\n\n19\n\n```\n \_ \_ \_\"eventName\": \"Test Marketing Event Update 2\",\n\n ```\n\n20\n\n```\n \_ \_ \_\"eventType\": \"test-type\"\n\n ```\n\n21\n\n```\n \_  }\n\n ```\n\n22\n\n```\n  ]\n\n ```\n\n23\n\n```\n}\n\n ```\n\n## [Event attendance endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#event-attendance-endpoints)\n\nThe event attendance state endpoints allow you to record registration activities for a contact, such as whether they registered, attended, or cancelled their registration for your event. For example, you can use this endpoint to record that a HubSpot contact has registered for a marketing event.\n\n### [Update attendance using the event objectId](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#update-attendance-using-the-event-objectid)\n\nIf you want to use the\_`objectId`\_of a marketing event, you can either use the contact ID of the contact you want to record participation state for, or you can use their email address.\n\n- To use a contact's ID, make a POST request to\_`/marketing/v3/marketing-events/{objectId}/attendance/{subscribeState}/create`\_then provide the ID of the contact using the\_`vid`\_field within the\_`inputs`\_array of your request body. For example, the request body below provides an example of updating the attendance data for a contact with an ID of\_`47733471576`\_and specifying when the attendee joined and left the event via the\_`joinedAt`\_and\_`leftAt`\_properties:\n    \n\nCopy code snippet\n\n1\n\n```\n// Example POST request to /marketing/v3/marketing-events/{objectId}/attendance/{subscriberState}/create\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"inputs\": [\n\n ```\n\n4\n\n```\n \_  {\n\n ```\n\n5\n\n```\n \_ \_ \_\"vid\": 47733471576,\n\n ```\n\n6\n\n```\n \_ \_ \_\"properties\": {\n\n ```\n\n7\n\n```\n \_ \_ \_ \_\"joinedAt\": \"2024-05-22T13:38:16.500Z\",\n\n ```\n\n8\n\n```\n \_ \_ \_ \_\"leftAt\": \"2024-05-22T15:40:16.500Z\"\n\n ```\n\n9\n\n```\n \_ \_  },\n\n ```\n\n10\n\n```\n \_ \_ \_\"interactionDateTime\": 1716382579000\n\n ```\n\n11\n\n```\n \_  }\n\n ```\n\n12\n\n```\n  ]\n\n ```\n\n13\n\n```\n}\n\n ```\n\n- To use a contact's email, make a POST request to\_`/marketing/v3/marketing-events/{objectId}/attendance/{subscribeState}/email-create`\_then provide the email of the contact using the\_`email`\_field within the\_`inputs`\_array of your request body.\n    \n    - If you're creating a new contact, you can include the\_`contactProperties`\_field within the\_`inputs`\_array of your request body to set any associated properties on the newly created contact. Otherwise, if the contact already exists,\_`contactProperties`\_provided in the request will\_<u>not</u>\_be updated.\n        \n    - For example, the request body below provides an example of updating the attendance data for a contact with an email address of\_`john@example.com`\_and specifying when the attendee joined and left the event via the\_`joinedAt`\_and\_`leftAt`\_fields within the\_`properties`\_object of your\_`inputs`\_array:\n        \n\nCopy code snippet\n\n1\n\n```\n// Example POST request to /marketing/v3/marketing-events/{objectId}/attendance/{subscriberState}/create\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"inputs\": [\n\n ```\n\n4\n\n```\n \_  {\n\n ```\n\n5\n\n```\n \_ \_ \_\"contactProperties\": {\n\n ```\n\n6\n\n```\n \_ \_ \_ \_\"additionalProp1\": \"string\",\n\n ```\n\n7\n\n```\n \_ \_ \_ \_\"additionalProp2\": \"string\"\n\n ```\n\n8\n\n```\n \_ \_  },\n\n ```\n\n9\n\n```\n \_ \_ \_\"properties\": {\n\n ```\n\n10\n\n```\n \_ \_ \_ \_\"joinedAt\": \"2024-05-22T13:38:16.500Z\",\n\n ```\n\n11\n\n```\n \_ \_ \_ \_\"leftAt\": \"2024-05-22T15:40:16.500Z\"\n\n ```\n\n12\n\n```\n \_ \_  },\n\n ```\n\n13\n\n```\n \_ \_ \_\"email\": \"john@example.com\",\n\n ```\n\n14\n\n```\n \_ \_ \_\"interactionDateTime\": 1716382579000\n\n ```\n\n15\n\n```\n \_  }\n\n ```\n\n16\n\n```\n  ]\n\n ```\n\n17\n\n```\n}\n\n ```\n\nFor either of the approaches above, provide the following values for the corresponding path parameters:\n\n- `objectId`: the\__Record ID_\_of the marketing event in your HubSpot account. Check out the\_[section above](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#differences-between-internal-id-and-external-id-endpoints)\_for more details on using the objectId of an event versus using its external IDs.\n    \n- `subscriberState`: an enumeration that matches the new attendance status of the contact:\n    \n- `REGISTERED`: indicates that the HubSpot contact has registered for the event.\n    \n- `ATTENDED`: indicates that the HubSpot contact has attended the event. If you're updating a contact's status to ATTENDED, you can also include the\_`joinedAt`\_and\_`leftAt`\_timestamps as parameters in the request body, specified in the ISO8601 Instant format.\n    \n- `CANCELLED`: indicates that the HubSpot contact, who had previously registered for the event, has cancelled their registration.\n    \n\n### [Update attendance using the external IDs of the event](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#update-attendance-using-the-external-ids-of-the-event)\n\n**Please note:**\_if you were previously using the\_`/upsert`\_or\_`/email-upsert`\_endpoints to update an attendee's status, you can instead use the alternate endpoints listed below. However, compared to the event attendance endpoints above, using these endpoints will\_<u>not</u>\_provide support for the following:\n\n- Creating a new contact if it doesn't already exist.\n    \n- Showing timeline events on the contact record page.\n    \n- Specifying the\_`joinedAt`\_or\_`leftAt`\_properties.\n    \n- Providing a detailed response upon success.\n    \n\nIf you do use the endpoints that require the\_`externalEventId`\_from your app, you can either use the contact IDs or email address of existing contacts:\n\n- If you want to use the contact IDs of existing contacts:\n    \n    - Make a\_`POST`\_request to\_`/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/create`, using the ID of the event from your external application as the\_`externalEventId`.\n        \n    - In the request body, provide an\_`inputs`\_object that includes the following fields:\n        \n        - `interactionDateTime`: the date and time at which the contact subscribed to the event.\n            \n        - `vid`: the contact ID of an existing contact.\n            \n- If you want to use the email address of one of the event's attendees:\n    \n    - Make a\_`POST`\_request to\_`/marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/email-create`.\n        \n    - In the request body, provide an\_`inputs`\_object that includes the following fields:\n        \n        - `interactionDateTime`: the date and time at which the contact subscribed to the event.\n            \n        - `email`: the email address of the attendee as the value of the email field within an inputs\n            \n    - If the email address you include don't match the address of an existing contact, a new contact will be created.\n        \n\nFor both of the endpoints above, provide the following values for the corresponding path parameters:\n\n- `externalEventId`: the ID of the\_[marketing event](https://knowledge.hubspot.com/integrations/use-marketing-events#view-edit-and-analyze-marketing-events). Check out the\_[section above](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#differences-between-internal-id-and-external-id-endpoints)\_for more details on using the objectId of an event versus using its external IDs.\n    \n- `subscriberState`: an enumeration that matches the new attendance status of the contact:\n    \n- `REGISTERED`: indicates that the HubSpot contact has registered for the event.\n    \n- `ATTENDED`: indicates that the HubSpot contact has attended the event. If you're updating a contact's status to ATTENDED, you can also include the\_`joinedAt`\_and\_`leftAt`\_timestamps as parameters in the request body, specified in the ISO8601 Instant format.\n    \n- `CANCELLED`: indicates that the HubSpot contact, who had previously registered for the event, has cancelled their registration.\n    \n\n**Please note:**\_these APIs are idempotent so long as the ID of the contact and the\_`interactionDateTime`\_value in the event has not changed. This enables you to safely set attendance state multiple times without HubSpot creating duplicate events in the marketing events properties.\n\n## [Participant state endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#participant-state-endpoints)\n\nYou can use the participation endpoints to retrieve event participant data for your marketing events. You can query data such as aggregate metrics for a specific event, as well as participant data for a specific contact or event.\n\nReview the available participation endpoints below. For a full reference of all available parameters for each endpoint, check out the\_[reference documentation](https://developers.hubspot.com/beta-docs/reference/api/marketing/marketing-events).\n\n**Please note:**\_the activity counts in the\_[marketing events page](https://knowledge.hubspot.com/integrations/use-marketing-events)\_in your HubSpot account may differ from the corresponding aggregate metrics from the participation counters API endpoint.\n\nFor example, if a participant registered for an event, then cancelled, then re-registered for the same event, each of those activities will be included in the totals you see in the marketing events UI in your account. If you're using the participant state endpoints below, only the current state of a participant is included in the associated counter for that metric (e.g.,\_`attended`,\_`registered`,\_`cancelled`, or\_`noShows`).\n\n### [Read participations for a specific contact](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#read-participations-for-a-specific-contact)\n\nTo get event participation data for a specific contact, make a\_`GET`\_request to\_`/marketing/v3/marketing-events/participations/contacts/{contactIdentifier}/breakdown`, using's the contact's ID or email address as the\_`contactIdentifier`\_path parameter.\n\nThe response will include a summary of the contact's event participation in the\_`properties`\_field:\n\nCopy code snippet\n\n1\n\n```\n// Example response for GET request for contact participation data\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"results\": [\n\n ```\n\n4\n\n```\n \_  {\n\n ```\n\n5\n\n```\n \_ \_ \_\"associations\": {\n\n ```\n\n6\n\n```\n \_ \_ \_ \_\"marketingEvent\": {\n\n ```\n\n7\n\n```\n \_ \_ \_ \_ \_\"externalAccountId\": \"4\",\n\n ```\n\n8\n\n```\n \_ \_ \_ \_ \_\"marketingEventId\": \"123\",\n\n ```\n\n9\n\n```\n \_ \_ \_ \_ \_\"externalEventId\": \"456\",\n\n ```\n\n10\n\n```\n \_ \_ \_ \_ \_\"name\": \"Virtual baking workshop\"\n\n ```\n\n11\n\n```\n \_ \_ \_  },\n\n ```\n\n12\n\n```\n \_ \_ \_ \_\"contact\": {\n\n ```\n\n13\n\n```\n \_ \_ \_ \_ \_\"firstname\": \"Jane\",\n\n ```\n\n14\n\n```\n \_ \_ \_ \_ \_\"contactId\": \"156792341\",\n\n ```\n\n15\n\n```\n \_ \_ \_ \_ \_\"email\": \"jdoe@example.com\",\n\n ```\n\n16\n\n```\n \_ \_ \_ \_ \_\"lastname\": \"Doe\"\n\n ```\n\n17\n\n```\n \_ \_ \_  }\n\n ```\n\n18\n\n```\n \_ \_  },\n\n ```\n\n19\n\n```\n \_ \_ \_\"createdAt\": \"2024-05-21T18:35:04.838Z\",\n\n ```\n\n20\n\n```\n \_ \_ \_\"id\": \"string\",\n\n ```\n\n21\n\n```\n \_ \_ \_\"properties\": {\n\n ```\n\n22\n\n```\n \_ \_ \_ \_\"occurredAt\": \"2024-05-22T10:35:04.838Z\",\n\n ```\n\n23\n\n```\n \_ \_ \_ \_\"attendancePercentage\": \"string\",\n\n ```\n\n24\n\n```\n \_ \_ \_ \_\"attendanceState\": \"REGISTERED\",\n\n ```\n\n25\n\n```\n \_ \_ \_ \_\"attendanceDurationSeconds\": 3600\n\n ```\n\n26\n\n```\n \_ \_  }\n\n ```\n\n27\n\n```\n \_  }\n\n ```\n\n28\n\n```\n  ]\n\n ```\n\n29\n\n```\n}\n\n ```\n\n### [Read participation breakdown data](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#read-participation-breakdown-data)\n\nTo get a breakdown of participation data for a specific event, use your\_`externalAccountId`\_and the\_`externalEventId`\_of your event to make a\_`GET`\_request to\_`/marketing/v3/marketing-events/participations/{externalAccountId}/{externalEventId}/breakdown`.\n\n### [Read participation counters](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#read-participation-counters)\n\nTo get an aggregate participation summary for an event, use your\_`externalAccountId`\_and the\_`externalEventId`\_of your event to make a\_`GET`\_request to\_`/marketing/v3/marketing-events/participations/{externalAccountId}/{externalEventId}`.\n\nThe response will include the total attendance counts:\n\nCopy code snippet\n\n1\n\n```\n// Example response for GET request for event participation counters\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"attended\": 152,\n\n ```\n\n4\n\n```\n \_\"registered\": 200,\n\n ```\n\n5\n\n```\n \_\"cancelled\": 3,\n\n ```\n\n6\n\n```\n \_\"noShows\": 8\n\n ```\n\n7\n\n```\n}\n\n ```\n\n### [Filtering participation breakdown data](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#filtering-participation-breakdown-data)\n\nWhen fetching breakdown data or event participation data for a specific contact, you can filter the resulting data using the contactIdentifier, state, limit, or after fields as query parameters in your request.\n\n| Query parameter | Type | Description |\n| --- | --- | --- |\n| `contactIdentifier` | string | The email address or ID of a specific contact |\n| `state` | Enumeration | The participation state for the event. The possible participation states are:<br><br>- `REGISTERED`: The contact has registered for the event<br>    <br>- `CANCELLED`: The contact's registration has been cancelled.<br>    <br>- `ATTENDED`: The contact attended the event.<br>    <br>- `NO_SHOW`: The contact registered but did not end up attending the event. |\n| `limit` | Number | Limit the results returned. By default, the limit is set to 10. The valid range is 1-100. |\n| `after` | Number | Used for paging between results in the response. Consult the provided offset in the previous page of response data to determine the next index of results to return. |\n\n## [List association endpoints](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#list-association-endpoints)\n\nYou can use the endpoints described in the sections below to manage associations between lists and your marketing events.\n\nMany of these endpoints require a\_`listId`\_as a path parameter, which you can find on the list details page in your HubSpot account:\n\n- In your HubSpot account, navigate to\_**CRM**\_>\_**Lists**.\n    \n- Click the\_**name**\_of a list.\n    \n- In the top right, click\_**Details**.\n    \n- In the right panel, the list ID will appear under\__List IDs for API integrations_. You can click\_**Copy list ID**\_to copy the ID to the clipboard.\n    \n\n<img src=\"https://www.hubspot.com/hubfs/Knowledge_Base_2023_2024/list-details-panel-list-associations-api.png\" alt=\"list-details-panel-list-associations-api\">\n\nAs you associate lists with your marketing events, they'll appear on the details page for a marketing event in your HubSpot account:\n\n- In your HubSpot account, navigate to\_**CRM**\_>\_**Contacts**.\n    \n- In the upper left, click\_**Contacts**\_and in the dropdown menu, select\_**Marketing events**.\n    \n- Click the\_**name**\_of a marketing event.\n    \n- On the\__Performance_\_tab, click\_**Lists**\_to expand the section, then click the\_**Lists added through associations**\_tab.\n    \n\n<img src=\"https://www.hubspot.com/hubfs/Knowledge_Base_2023_2024/review-list-associations-for-marketing-events-api.png\" alt=\"review-list-associations-for-marketing-events-api\">\n\n### [Create list association with a marketing event ID](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#create-list-association-with-a-marketing-event-id)\n\nTo create a new association between a marketing event and an existing list, make a\_`PUT`\_request to\_`/marketing/v3/marketing-events/associations/{marketingEventId}/lists/{listId}`.\n\nIf successful, you'll receive a\_`204 No content`\_response.\n\n### [Create list association with external event and account IDs](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#create-list-association-with-external-event-and-account-ids)\n\nTo create a new association between a marketing event and an existing list using the external account ID and the external event ID, make a\_`PUT`\_request to\_`/marketing/v3/marketing-events/associations/{externalAccountId}/{externalEventId}/lists/{listId}`.\n\nIf successful, you'll receive a\_`204 No content`\_response.\n\n### [Get lists associated with a marketing event using a marketing event ID](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#get-lists-associated-with-a-marketing-event-using-a-marketing-event-id)\n\nTo get all lists associated with a marketing event, make a\_`GET`\_request to\_`/marketing/v3/marketing-events/associations/{marketingEventId}/lists`.\n\nThe response will resemble the following:\n\nCopy code snippet\n\n1\n\n```\n// Example response for GET request for all associated lists for a marketing event\n\n ```\n\n2\n\n```\n{\n\n ```\n\n3\n\n```\n \_\"total\": 1,\n\n ```\n\n4\n\n```\n \_\"results\": [\n\n ```\n\n5\n\n```\n \_  {\n\n ```\n\n6\n\n```\n \_ \_ \_\"listId\": \"string\",\n\n ```\n\n7\n\n```\n \_ \_ \_\"listVersion\": 0,\n\n ```\n\n8\n\n```\n \_ \_ \_\"createdAt\": \"2024-05-10T08:58:35.769Z\",\n\n ```\n\n9\n\n```\n \_ \_ \_\"updatedAt\": \"2024-05-10T08:58:35.769Z\",\n\n ```\n\n10\n\n```\n \_ \_ \_\"filtersUpdatedAt\": \"2024-05-10T08:58:35.769Z\",\n\n ```\n\n11\n\n```\n \_ \_ \_\"processingStatus\": \"string\",\n\n ```\n\n12\n\n```\n \_ \_ \_\"createdById\": \"string\",\n\n ```\n\n13\n\n```\n \_ \_ \_\"updatedById\": \"string\",\n\n ```\n\n14\n\n```\n \_ \_ \_\"processingType\": \"string\",\n\n ```\n\n15\n\n```\n \_ \_ \_\"objectTypeId\": \"string\",\n\n ```\n\n16\n\n```\n \_ \_ \_\"name\": \"string\",\n\n ```\n\n17\n\n```\n \_ \_ \_\"size\": 0\n\n ```\n\n18\n\n```\n \_  }\n\n ```\n\n19\n\n```\n  ]\n\n ```\n\n20\n\n```\n}\n\n ```\n\n### [Get lists associated with a event using external event and account IDs](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#get-lists-associated-with-a-event-using-external-event-and-account-ids)\n\nYou can also get lists associated with a marketing event using an external account ID and the external event ID, make a\_`GET`\_request to\_`/marketing/v3/marketing-events/associations/{externalAccountId}/{externalEventId}/lists`.\n\n### [Delete list association using a marketing event ID](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#delete-list-association-using-a-marketing-event-id)\n\nTo delete a list association for a marketing event using a marketing event ID, make a\_`DELETE`\_request to\_`/marketing/v3/marketing-events/associations/{marketingEventId}/lists/{listId}`.\n\nIf successful, you'll receive a\_`204 No content`\_response.\n\n### [Delete list association using external event and account IDs](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#delete-list-association-using-external-event-and-account-ids)\n\nTo delete a list association for a marketing event using the external account ID and an external event ID, make a\_`DELETE`\_request to\_`/marketing/v3/marketing-events/associations/{externalAccountId}/{externalEventId}/lists/{listId}`.\n\nIf successful, you'll receive a\_`204 No content`\_response.\n\n## [Configure app settings](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#configure-app-settings)\n\nThere's some setup required to allow marketing events to sync properly with HubSpot.\n\nIf you send HubSpot an attendance state change (e.g., a registration or cancellation), HubSpot will first check to see if a Marketing Event exists for the specified event ID. If it doesn't, HubSpot will call the configured endpoint for your app to retrieve the details of the marketing event, then create the event in HubSpot and then publish the attendance state change.\n\nThis is provided for convenience; however, it's still recommended that you create the Marketing Events yourself via the CRUD methods provided in the\_[reference documentation](https://developers.hubspot.com/beta-docs/reference/api/marketing/marketing-events), and don't rely on this functionality to create your marketing events in HubSpot.\n\n### [Step 1: Create an API in your app](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#step-1-create-an-api-in-your-app)\n\nIn order to support this, HubSpot requires each app that uses Marketing Events to define an API to fetch information about a specific marketing event.\n\nRequirements:\n\n- Accepts:\n    \n    - `externalAccountId`: a query parameter that specifies the accountId of the customer in the external app.\n        \n    - `appId`: a query parameter that specifies the ID of the HubSpot application that is requesting the event details. This will be the ID of your app.\n        \n    - `externalEventId`: a path parameter in the URL of the request that specifies the ID of the event in the external app that HubSpot requires details about.\n        \n- Returns:\n    \n    - A JSON object that provides details for the marketing event, that includes the following fields detailed in the table below:\n        \n\n| Field Name | Required | Type | Field Description |\n| --- | --- | --- | --- |\n| `eventName` | true | string | The name of the marketing event |\n| `eventOrganizer` | true | string | The name of the organizer of the marketing event. |\n| `eventType` | false | string | Describes what type of event this is. For example:\_`WEBINAR`,\_`CONFERENCE`,\_`WORKSHOP` |\n| `startDateTime` | false | string($date-time) | The start date and time of the marketing event. |\n| `endDateTime` | false | string($date-time) | The end date and time of the marketing event. |\n| `eventDescription` | false | string | The description of the marketing event. |\n| `eventUrl` | false | string | A URL in the external event application where the marketing event. |\n| `eventCancelled` | false | bool | Indicates if the marketing event has been cancelled. Defaults to\_`false` |\n\nHubSpot will also send a\_`X-HubSpot-Signature-v3`\_header that you can use to verify that the request came from HubSpot. Read more about\_[request signatures](https://developers.hubspot.com/beta-docs/guides/apps/authentication/validating-requests)\_for additional details on the signature and how to validate it.\n\n### [Step 2: Provide HubSpot with the URL path to your API](https://developers.hubspot.com/beta-docs/guides/api/marketing/marketing-events#step-2-provide-hubspot-with-the-url-path-to-your-api)\n\nNow that you've created the API in your app that will return an object that provides the details of a specific marketing event, you will need to provide HubSpot with the URL path to your API by making a\_`POST`\_request to\_`/marketing/v3/marketing-events/{appId}/settings`. This will allow HubSpot to determine how to make requests to your app to get the details of a marketing event.\n\nIn the body of your\_`POST`\_request, specify your URL using the\_`eventDetailsURL`\_field. The\_`eventDetailsURL`\_must adhere to the following two requirements:\n\n- Contain a\_`%s`\_character sequence, which HubSpot will use to substitute in the ID of the event (`externalEventId`) as a path parameter.\n    \n- It must be the full path to the API resource, including the\_`https://`\_prefix and the domain name (e.g.,\_`my.event.app`).\n    \n\nFor example, if you configure an\_`eventDetailsURL`\_of\_`https://my.event.app/events/%s`, and you need to make a request to fetch details of an event with id\_`1234-event-XYZ`, for the HubSpot app with id\_`app-101`\_and account with id\_`ABC-account-789`, HubSpot will make a\_`GET`\_request to:\n\n`https://my.event.app/events/1234-event-XYZ?appId=app-101&externalAccountId=ABC-account-789`"
  - name: Marketing Events API > Batch
  - name: Marketing Events API > Attendance Subscriber State Changes
  - name: Marketing Events API > Subscriber State Changes
  - name: Marketing Events API > Marketing_Events_External
  - name: Marketing Events API > Basic
  - name: Marketing Events API > Settings
  - name: Marketing Events API > Search
  - name: Single-Send API
    description: "The single-send API allows you to send template emails created in the HubSpot\_[marketing email tool](https://knowledge.hubspot.com/email/create-marketing-emails-in-the-drag-and-drop-email-editor)\_using a JSON-formatted POST request.\n\nAll contacts receiving marketing content must be\_[set as marketing](https://knowledge.hubspot.com/contacts/set-contacts-as-marketing). Any marketing emails sent through the single-send API will automatically be associated with contact records based on their email address, and update non-marketing contacts and set them to marketing contacts . If there's no contact with a matching email address, a new contact record with that email will be created, and the contact will be set as marketing.\n\n## Requirements\n\nTo use the marketing single send API, the following requirements must be met:\n\n- You must have a\__**Marketing Hub**_\__Enterprise_\_account.\n    \n- The\_[private app](https://developers.hubspot.com/docs/api/private-apps)\_or\_[public app](https://developers.hubspot.com/docs/api/creating-an-app)\_you're using to make API requests has been granted the\_`marketing-email`\_scope.\n    \n\n## Create an email and send it via the single-send API\n\nFirst,\_[set up your email in HubSpot](https://knowledge.hubspot.com/email/how-to-use-transactional-email-in-hubspot). After you create the email, you can set the recipient details, including any contact or custom properties set up in the email template, in the body of the API request. Before you can make the API request, you'll need the ID of the email:\n\n- If you leave the email drafted without publishing it, you can get the email ID from the URL when you're in the email editor. The ID is the final numeric value before the final slash character (`/`) in the URL (e.g.,\_`https://app.hubspot.com/email/{PORTAL_ID}/edit/{EMAIL_ID}/settings`).\n    \n\n<img src=\"https://developers.hubspot.com/hs-fs/hubfs/Knowledge_Base_2023/email-id-for-drafted-single-send-api-email.png?width=800&amp;height=133&amp;name=email-id-for-drafted-single-send-api-email.png\" alt=\"\">\n\n- If you publish your email, you can copy the email ID from the email details page.\n    \n\n<img src=\"https://developers.hubspot.com/hs-fs/hubfs/Screen Shot 2020-04-15 at 1.00.37 PM.png?width=872&amp;name=Screen Shot 2020-04-15 at 1.00.37 PM.png\" alt=\"\">\n\n**Please note:**\_HubSpot does not save the HTML/JSON sent through this API. You can review the email template from the recipient contact's timeline, but if you want to keep a record of the email's contents, it's recommended to add a BCC to the email.\n\nTo send an email with the Single-Send API, make a\_`POST`\_request to\_`/marketing/v4/email/single-send`.\n\nThe response contains the following fields:\n\n- `requestedAt`: the timestamp of when the send was requested.\n    \n- `statusId`: an identifier that can be used to\_[query the status of the send](https://developers.hubspot.com/docs/api/marketing/single-send-api#query-the-status-of-an-email-send).\n    \n- `status`: the status of the send request. Includes\_`PENDING`,\_`PROCESSING`,\_`CANCELED`, and\_`COMPLETE`.\n    \n\n### Request properties\n\nThe request body must be a JSON-formatted object with the following properties:\n\n- `emailId`\n    \n- `message`\n    \n- `contactProperties`\n    \n- `customProperties`\n    \n\n#### emailId\n\nThe\_`emailId`\_field contains the email's content ID, which can be found in HubSpot's email tool.\n\n#### message\n\nThe message field is a JSON object containing anything that you want to override. At the minimum, you must include the\_`to`\_field.\n\nMessage object fields:\n\n- `to`: the recipient of the email\n    \n- `from`: the \"From\" header for the email. You can define a from name with the following format:\_`\"from\":\"Sender Name \"`\n    \n- `sendId`: the ID of a particular send. Only one email with a given\_`sendId`\_will be sent per account, so you can include this field to prevent duplicate email sends.\n    \n- `replyTo`:\_ a JSON list of \"Reply-To\" header values for the email.\n    \n- `cc`: a JSON list of email addresses to send as Cc.\n    \n- `bcc`: a JSON list of email addresses to send as Bcc.\n    \n\n#### contactProperties\n\nThe\_`contactProperties`\_field is a JSON map of contact property values. Each contact property value contains a\_`name`\_and\_`value`. Each property will be set on the contact record and will be visible in the template under:\n\n<img src=\"https://developers.hubspot.com/hs-fs/hubfs/Knowledge_Base_2021/Developer/name-token-in-template-for-transactional-email.png?width=88&amp;height=29&amp;name=name-token-in-template-for-transactional-email.png\" alt=\"\">\n\nUse these properties when you want to set a contact property while you’re sending the email. For example, when sending a receipt you may want to set a\_`last_paid_date`\_property, as the sending of the receipt will have information about the last payment.\n\n```\n{\n  \"emailId\": 4126643121,\n  \"message\": {\n    \"to\": \"jdoe@hubspot.com\"\n    \"sendId\": \"6\"\n  },\n  \"contactProperties\": {\n    \"last_paid_date\": \"2022-03-01\",\n    \"firstname\": \"jane\"\n  } \n}\n\n ```\n\n#### customProperties\n\nThe\_`customProperties`\_field is a JSON map of key-value properties. These properties are generally related to the email itself, not the contact receiving the email. They will not appear in the\_[web page version of the email](https://knowledge.hubspot.com/email/create-a-web-version-of-your-marketing-email), or in the view of the email from the contact's timeline. These properties are also not stored in HubSpot and will only be included in the sent email.\n\nEach key in the\_`customProperties`\_field can be referenced in the template using a\_[HubL expression](https://developers.hubspot.com/docs/cms/hubl)\_for fields contained within the\_`custom`\_variable (e.g.,\_`{{custom.NAME_OF_PROPERTY}}`\_).\n\nFor example, if your email template references two properties,\_`purchaseUrl`\_and\_`productName`, you could provide the associated values for these properties with the following request body:\n\n```\n{\n  \"emailId\": 4126643121,\n  \"message\": {\n    \"to\": \"jdoe@hubspot.com\"\n    \"sendId\": \"6\"\n  },\n  \"customProperties\": {\n    \"purchaseUrl\": \"https://example.com/link-to-product\",\n    \"productName\": \"vanilla\"\n  } \n\n ```\n\nYou can then reference these properties in your email template:\n\nHubL\n\n```\n\n<html>\n  <p>\n    Congrats on purchasing some of the best ice cream around.\n  </p>\n  <a href={{custom.purchaseUrl}}>{{custom.productName}}</a>\n</html>\n\n ```\n\nThe\_`customProperties`\_field only supports arrays when used with\_[programmable email content](https://developers.hubspot.com/docs/cms/guides/email/hubdb-crm-objects). In your email template, you can reference the items defined in your\_`customProperties`\_field by using a\_[HubL expression](https://developers.hubspot.com/docs/cms/hubl)\_(e.g., using a\_[for loop](https://developers.hubspot.com/docs/cms/hubl/for-loops)\_to render each item in a list).\_For example, if the\_`customProperties`\_you included in your request body was structured like the following JSON snippet below:\n\nJSON\n\n```\n{\n  \"emailId\": 4126643122,\n  \"message\": {\n    \"to\": \"jdoe@hubspot.com\"\n    \"sendId\": \"7\"\n  },\n  \"customProperties\": {\n    \"exampleArray\": [\n      {\"firstKey\": \"someValue\", \"secondKey\": \"anotherValue\"},\n      {\"firstKey\": \"value1\", \"secondKey\": \"value2\" }\n    ]\n  } \n}\n\n ```\n\nYou could then reference the values for each item in\_`exampleArray`\_with the following HubL code:\n\nHubL\n\n```\n\n<html>\n  <p>\n    Thanks for your recent purchase! Here are the details of the items you'll be receiving:\n  </p>\n  <ul>\n    {% for item in custom.exampleArray %}\n      <li>First key: {{ item.firstKey }}, Second key: {{item.secondKey}}</li>\n    {% endfor %}  \n  </ul>\n</html>\n\n ```\n\nOnce sent, the email would render the contents of the associated programmable email template as follows:\n\n<img src=\"https://developers.hubspot.com/hs-fs/hubfs/Knowledge_Base_2021/Developer/example-transactional-email-with-customProperties-array.png?width=568&amp;height=114&amp;name=example-transactional-email-with-customProperties-array.png\" alt=\"\">\n\n### Query the status of an email send\n\nTo get the status of the email send, make a\_`GET`\_request to\_`https://api.hubapi.com/marketing/v3/email/send-statuses/{statusId}`.\_\n\nThe response contains the following fields:\n\n- `sendResult`: an enumeration that represents the email's send status. The possible values are\_[listed below](https://developers.hubspot.com/docs/api/marketing/single-send-api#sendresult-values).\n    \n- `requestedAt`: the timestamp from when the send was requested.\n    \n- `startedAt`: the timestamp when the send began processing.\n    \n- `completedAt`: the timestamp when the send completed.\n    \n- `statusId`: an identifier that can be used to query the status of the send.\n    \n- `status`: the status of the send request. Includes\_`PENDING`,\_`PROCESSING`,\_`CANCELED`, and\_`COMPLETE`.\n    \n- `eventId`: if sent, the ID and created timestamp of the sent event.\n    \n\n#### sendResult\n\nThe\_`sendResult`\_is an enumeration that reflects the result of an email send attempt. Its possible values are:\n\n- `SENT`: the email was sent successfully.\n    \n- `QUEUED`: the email was queued and will send as the queue gets processed.\n    \n- `PORTAL_SUSPENDED`: due to\_[Acceptable Use Policy](https://legal.hubspot.com/acceptable-use)\_violations, the HubSpot customer's email has been suspended.\n    \n- `INVALID_TO_ADDRESS`: the recipient address is invalid. This error will also occur if you attempt to send an email with any of the following role-based prefixes in the email address:\_`abuse`,\_`no-reply`,\_`noreply`,\_`root`,\_`spam`,\_`security`,\_`undisclosed-recipients`,\_`unsubscribe`,\_`inoc`,\_`postmaster`, or\_`privacy`.\n    \n- `BLOCKED_DOMAIN`: the domain cannot receive emails from HubSpot at this time.\n    \n- `PREVIOUSLY_BOUNCED`: the recipient has previously bounced, and the sending logic resulted in no send.\n    \n- `PREVIOUS_SPAM`: the recipient has previously marked similar email as spam.\n    \n- `INVALID_FROM_ADDRESS`: the\__From_\_address is invalid.\n    \n- `MISSING_CONTENT`: the\_`emailId`\_is invalid, or the\_`emailId`\_corresponds to an email that wasn't set up for Single-Send.\n    \n- `MISSING_TEMPLATE_PROPERTIES`: there are properties set up in the template that have not been included in the\_`customProperties`\_sent in the request."
  - name: Single-Send API > Single_Send
  - name: Campaigns API
    description: "Use the\_[campaigns tool](https://knowledge.hubspot.com/campaigns/understand-campaigns)\_to campaigns to create, manage, and report on a single marketing campaign using multiple assets in one place. For example, you can create a campaign using marketing emails and social posts and raise awareness of a new product or an event. To use the campaigns tool and its corresponding endpoints, you'll need a\_Marketing Hub\_Professional\_or\_Enterprise\_subscription.\_\n\nYou can use campaign endpoints to create, read, update, and delete marketing campaign data. For example, you can use these endpoints to create and manage HubSpot campaigns from your external applications. You can also transfer campaign data to external data warehouses for analytics.\n\nYou can also create, read, update, and delete multiple campaigns with the associated batch endpoints, click the\_Endpoints\_tab at the top of this article for a full list of endpoints and the associated parameters available.\n\n## Scope requirements\n\nThe following scopes are required to use the campaigns API, based on the endpoints you're using:\n\n- `marketing.campaigns.read`: provides access to view details about marketing campaigns and their associated assets.\n    \n- `marketing.campaigns.write`: grants access to create, delete, and modify marketing campaigns.\n    \n- `marketing.campaigns.revenue.read`: provides access to view revenue details and deal amounts attributed to a marketing campaign.\n    \n\n## Create a campaign\n\nTo create a campaign, make a\_`POST`\_request to\_`/marketing/v3/campaigns`.\n\nCreate a campaign with the given properties and return the campaign object, including the\_`campaignGuid`\_and created properties. For example, to create a new campaign, you would make a\_`POST`\_request with the following request body.\_\_\n\nJSON\n\n```\n//Example create request body\n{\n  \"properties\": {\n    \"hs_name\": \"Inbound\",\n    \"hs_start_date\": \"2024-10-30\",\n    \"hs_notes\": \"Campaign notes\"\n  }\n}\n\n ```\n\nCopy\n\nThe response will include a\_`campaignGuid`, a unique identifier for the campaign. This will be formatted as a UUID. In the following example, the\_`campaignGuid`\_is\_`edb9b6c3-d2e2-4ca8-8396-832262aed0d4`.\n\nJSON\n\n```\n//Example create response body\n{\n  \"id\": \"edb9b6c3-d2e2-4ca8-8396-832262aed0d4\",\n  \"properties\": {\n    \"hs_name\": \"Inbound\",\n    \"hs_start_date\": \"2024-10-30\",\n    \"hs_notes\": \"Campaign notes\"\n  },\n  \"createdAt\": \"2024-10-30T03:30:17.883Z\",\n  \"updatedAt\": \"2024-12-07T16:50:06.678Z\"\n}\n\n ```\n\nCopy\n\n## Retrieve a campaign\n\nTo retrieve the details of an existing campaign, make a\_`GET`\_request to\_`/marketing/v3/campaigns/{campaignGuid}`.\n\nThis endpoint will return the campaign information. Depending on the query parameters used, this can also be used to return information about the assets and the corresponding assets' metrics. When using this endpoint, you can use the following query parameters.\_\n\n- `properties`**:**\_a comma-separated list of the properties to be returned in the response. For example,\_`hs_name`,\_`hs_campaign_status`,\_`hs_notes`. If any of the specified properties has an empty value on the requested object, it will be ignored and not returned in response. If the parameter is empty, the response will include an empty properties map.  \n    \n- `startDate`**:**\_the start date to fetch asset metrics, formatted as YYYY-MM-DD. This is used to fetch the metrics associated with the assets for a specified period.\_ If no date is specified, no asset metrics will be retrieved.\_ \_\_  \n    \n- `endDate`**:**\_the end date to fetch asset metrics, formatted as YYYY-MM-DD. This is used to fetch the metrics associated with the assets for a specified period. If no date is specified, no asset metrics will be retrieved.  \n    \n\nFor example, if you made a\_`POST`\_request with\_`/marketing/v3/campaigns/edb9b6c3-d2e2-4ca8-8396-832262aed0d4?properties=hs_name,hs_start_date`, this would result in the following response body:\n\nJSON\n\n```\n//Example get response body\n{\n  \"id\": \"edb9b6c3-d2e2-4ca8-8396-832262aed0d4\",\n  \"properties\": {\n    \"hs_name\": \"Inbound\",\n    \"hs_start_date\": \"2024-10-30\",\n  },\n  \"assets\": {\n    \"EMAIL\": {\n      \"paging\": {\n        \"next\": {\n          \"link\": \"?after=NTI1Cg==\",\n          \"after\": \"NTI1Cg==\"\n        },\n        \"results\": [\n          {\n            \"id\": \"832\",\n            \"name\": \"My email\"\n          }\n        ]\n      }\n    }\n  },  \n  \"createdAt\": \"2024-10-30T03:30:17.883Z\",\n  \"updatedAt\": \"2024-12-07T16:50:06.678Z\"\n}\n\n ```\n\nCopy\n\n## List assets\n\nTo retrieve the assets associated with a campaign make a\_`GET`\_request to\_`/marketing/v3/campaigns/{campaignId}/assets/{assetType}`.\n\nThis endpoint lists all assets of the campaign by asset type. The\_`assetType`\_parameter is required, and each request can only fetch assets of a single type. The following are required:\n\n- `campaignGuid`**:**\_the UUID of the campaign.  \n    \n- `assetType`**:**\_the type of asset to be fetched.  \n    \n\nYou can use the following query parameters with the endpoint:\n\n- `after`**:**\_a cursor for pagination. If provided, the results will start after the given cursor. For example, you can use the value NTI1Cg==.\_\_  \n    \n- `limit`**:**\_define the maximum number of results to return. The allowed values range from\_1 to 100. If no limit is specified, it will be set to 10 assets by default.\n    \n- `startDate`**:**\_the start date to fetch asset metrics, formatted as YYYY-MM-DD. This is used to fetch the metrics associated with the assets for a specified period. If no date is specified, no asset metrics will be retrieved.\_ \_  \n    \n- `endDate`**:**\_the end date to fetch asset metrics, formatted as YYYY-MM-DD. This is used to fetch the metrics associated with the assets for a specified period. If no date is specified, no asset metrics will be retrieved.\n    \n\nThe following is a list of available asset types and metrics related to the assets that are returned in response.:\n\n| Asset | Asset type | Metrics |\n| --- | --- | --- |\n| Ad campaigns | `AD_CAMPAIGN` | CLICKS, CONTACTS, and COST |\n| Blog posts | `BLOG_POST` | CONTACTS_FIRST_TOUCH, CONTACTS_LAST_TOUCH, SUBMISSIONS, and VIEWS |\n| Social posts | `SOCIAL_BROADCAST` | FACEBOOK_CLICKS, LINKEDIN_CLICKS, and TWITTER_CLICKS |\n| CTAs | `WEB_INTERACTIVE` | CLICKS and VIEWS |\n| CTAs (Legacy) | `CTA` | CLICKS, SUBMISSIONS, and VIEWS |\n| External website pages | `EXTERNAL_WEB_URL` | VIEWS |\n| Forms | `FORM` | CONVERSION_RATE, SUBMISSIONS, and VIEWS |\n| Landing pages | `LANDING_PAGE` | CONTACTS_FIRST_TOUCH, CONTACTS_LAST_TOUCH, CUSTOMERS, SUBMISSIONS, and VIEWS |\n| Emails | `MARKETING_EMAIL` | CLICKS, OPEN, and SENT |\n| Marketing events | `MARKETING_EVENT` | ATTENDEES, CANCELLATIONS, and REGISTRATIONS |\n| Static lists | `OBJECT_LIST` | CONTACTS |\n| Website pages | `SITE_PAGE` | CONTACTS_FIRST_TOUCH, CONTACTS_LAST_TOUCH, CUSTOMERS,\_SUBMISSIONS, and VIEWS. |\n| Workflows | `AUTOMATION_PLATFORM_FLOW` | CURRENTLY_ENROLLED and STARTED |\n| Marketing SMS | `MARKETING_SMS` | SENT, DELIVERED, and UNIQUE_CLICKS |\n\n## Manage asset associations\n\nTo associate an asset with a campaign make a\_`PUT`\_request to\_`/marketing/v3/campaigns/{campaignGuid}/assets/{assetType}/{assetId}`.\n\nTo remove an asset from a campaign make a\_`DELETE`\_request to\_`/marketing/v3/campaigns/{campaignGuid}/assets/{assetType}/{assetId}`.\n\nYou can use the endpoints above to create and remove associations for the following asset types. For other asset types, learn how to\_[associate assets and content with a campaign](https://knowledge.hubspot.com/campaigns/associate-assets-and-content-with-a-campaign)\_in HubSpot.\_ \_\n\n- `FORM`\n    \n- `OBJECT_LIST`\n    \n- `EXTERNAL_WEB_URL`\n    \n\n## Update campaign\n\nTo perform a partial update of a campaign identified by the specified campaignGuid, make a\_`PATCH`\_request to\_`/marketing/v3/campaigns/{campaignGuid}`.\n\nYou can use the following properties to update your campaign. The provided property values will be overwritten. If your request includes read-only or non-existent properties, you will encounter\_a\_`400 error`. Learn more about which properties can be used.\_\n\nJSON\n\n```\n//Example update request\n{\n  \"properties\": {\n    \"hs_name\": \"Inbound 2024\",\n  }\n}\n\n ```\n\nCopyJSON\n\n```\n//Example update response\n{\n  \"id\": \"edb9b6c3-d2e2-4ca8-8396-832262aed0d4\",\n  \"properties\": {\n    \"hs_name\": \"Inbound 2024\",\n   },\n  \"createdAt\": \"2024-10-30T03:30:17.883Z\",\n  \"updatedAt\": \"2024-12-07T16:50:06.678Z\"\n}\n\n ```\n\nCopy\n\n## Delete a campaign\n\nTo delete a campaign,\_make a\_`DELETE`\_request to\_`/marketing/v3/campaigns?`.\n\nThis call will always return a\_`204 No Content`\_response, regardless of whether the campaignGuid provided corresponds to an existing campaign or not.\n\n## Search for campaigns\n\nTo search for campaigns based on query parameters,\_make a\_`GET`\_request to\_`/marketing/v3/campaigns/{campaignGuid}`.\n\nWhen using this endpoint, you can use the following query parameters.\_\n\n- `name`**:**\_return all campaigns whose names contain the specified substring. This allows partial matching of campaign names, returning all campaigns that include the given substring in their name. If this parameter is not provided, the search will return all campaigns.  \n    \n- `sort`**:**\_the field by which to sort the results. Allowed values are hs_name, createdAt, updatedAt. An optional '-' before the property name will denote descending order. For example, you can use -CREATED_AT to sort your campaigns from newest to oldest. If this is not specified, the list of campaigns will be sorted in alphabetical order by campaign name.\_\_  \n    \n- `after`**:**\_a cursor for pagination. If provided, the results will start after the given cursor. For example, you can use the value NTI1Cg==.\_\_  \n    \n- `limit`**:**\_define the maximum number of results to return. The allowed values range from\_1 to 100. If no limit is specified, it will be set to 50 campaigns by default.\_\n    \n- `properties:`\_a comma-separated list of the properties to be returned in the response. For example,\_`hs_name`,\_`hs_campaign_status`,\_`hs_notes`. If any of the specified properties has an empty value on the requested object, it will be ignored and not returned in response. If the parameter is empty, the response will include an empty properties map.  \n    \n\nJSON\n\n```\n//Example reponse body \n// for GET request to https://api.hubapi.com/marketing/v3/campaigns?properties=hs_name&limit=2\n{\n  \"total\": 14,\n  \"results\": [\n    {\n      \"id\": \"972e2774-7409-43c2-a8b9-581732dff5a7\",\n      \"properties\": {\n        \"hs_name\": \"Inbound 2023\"\n      },\n      \"createdAt\": \"2023-09-07T10:18:06.320Z\",\n      \"updatedAt\": \"2023-09-07T10:18:06.320Z\"\n    },\n    {\n      \"id\": \"703bc2f0-f000-4840-b6ae-b2d74bc09fa0\",\n      \"properties\": {\n        \"hs_name\": \"Inbound 2024\"\n      },\n      \"createdAt\": \"2024-06-25T10:57:26.232Z\",\n      \"updatedAt\": \"2024-06-25T10:57:26.232Z\"\n    }\n  ],\n  \"paging\": {\n    \"next\": {\n      \"after\": \"Mg==\",\n      \"link\": \"https://api.hubspotqa.com/marketing/v3/campaigns? properties=hs_name&limit=2&after=Mg==\"\n    }\n  }\n}\n\n ```\n\nCopy\n\n## Campaign properties\n\nWhen using the\__properties_\_query parameter for your campaign endpoints, you can use the following properties:\n\n| Property Name | Read Only | Format | Description |\n| --- | --- | --- | --- |\n| `hs_name` | read & write | string | The campaign's name. This should be unique, with a max size of 256 characters. |\n| `hs_start_date` | read & write | date (YYYY-MM-DD) | The campaign's start date. |\n| `hs_end_date` | read & write | date (YYYY-MM-DD) | The campaign's end date. |\n| `hs_notes` | read & write | string | Any notes about the campaign. |\n| `hs_audience` | read & write | string | The campaign's audience. |\n| `hs_goal` | read & write | string | The campaign's goal. |\n| `hs_currency_code` | read & write | ISO currency code | The currency code used for the campaign. |\n| `hs_campaign_status` | read & write | predefined values | The status of the campaign. This includes\_`planned`,\_`in_progress`,\_`active`,\_`paused`, and\_`completed`. |\n| `hs_owner` | read | user id | The user id of the user that owns the campaign |\n| `hs_color_hex` | read | color id | The color of the campaign in hex color code. |\n| `hs_created_by_user_id` | read | user id | The user id of the user that originally created the campaign |\n| `hs_object_id` | read | string | The internal CRM object id. |\n| `hs_budget_items_sum_amount` | read | monetary value | The sum of all budget items. Learn more about managing your\_[campaign budget](https://knowledge.hubspot.com/campaigns/manage-your-campaign-budget). |\n| `hs_spend_items_sum_amount` | read | monetary value | The sum of all spend items. Learn more about managing your\_[campaign budget](https://knowledge.hubspot.com/campaigns/manage-your-campaign-budget). |"
  - name: Campaigns API > Basic
  - name: Campaigns API > Search
  - name: Campaigns API > Batch
  - name: Campaigns API > Reports
  - name: Campaigns API > Asset
  - name: Campaigns API > Budget
  - name: Forms API
  - name: Forms API > Forms
paths:
  /marketing/v3/transactional/smtp-tokens/{tokenId}:
    get:
      tags:
        - Transactional Email API > Public_Smtp_Tokens
      summary: Query a single token by ID.
      description: Query a single token by ID.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: tokenId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                campaignName: <string>
                createContact: <boolean>
                createdAt: <dateTime>
                createdBy: <string>
                emailCampaignId: <string>
                id: <string>
                password: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "consequat74": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "exercitation_fb5": [
                          "<string>",
                          "<string>"
                        ],
                        "tempor168": [
                          "<string>",
                          "<string>"
                        ],
                        "quiad9": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "esse_c1": [
                      "<string>",
                      "<string>"
                    ],
                    "pariatur__": [
                      "<string>",
                      "<string>"
                    ],
                    "laboris5a": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "iruref0d": "<string>"
                  }
                }
    delete:
      tags:
        - Transactional Email API > Public_Smtp_Tokens
      summary: Delete a single token by ID.
      description: Delete a single token by ID.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: tokenId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "consequat74": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "exercitation_fb5": [
                          "<string>",
                          "<string>"
                        ],
                        "tempor168": [
                          "<string>",
                          "<string>"
                        ],
                        "quiad9": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "esse_c1": [
                      "<string>",
                      "<string>"
                    ],
                    "pariatur__": [
                      "<string>",
                      "<string>"
                    ],
                    "laboris5a": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "iruref0d": "<string>"
                  }
                }
  /marketing/v3/transactional/smtp-tokens:
    get:
      tags:
        - Transactional Email API > Public_Smtp_Tokens
      summary: Query SMTP API tokens by campaign name or an emailCampaignId.
      description: >-
        Query multiple SMTP API tokens by campaign name or a single token by
        emailCampaignId.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: campaignName
          in: query
          schema:
            type: string
          description: A name for the campaign tied to the SMTP API token.
          example: <string>
        - name: emailCampaignId
          in: query
          schema:
            type: string
          description: >-
            Identifier assigned to the campaign provided during the token
            creation.
          example: <string>
        - name: after
          in: query
          schema:
            type: string
          description: Starting point to get the next set of results.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: Maximum number of tokens to return.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - campaignName: <string>
                    createContact: <boolean>
                    createdAt: <dateTime>
                    createdBy: <string>
                    emailCampaignId: <string>
                    id: <string>
                    password: <string>
                  - campaignName: <string>
                    createContact: <boolean>
                    createdAt: <dateTime>
                    createdBy: <string>
                    emailCampaignId: <string>
                    id: <string>
                    password: <string>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "consequat74": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "exercitation_fb5": [
                          "<string>",
                          "<string>"
                        ],
                        "tempor168": [
                          "<string>",
                          "<string>"
                        ],
                        "quiad9": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "esse_c1": [
                      "<string>",
                      "<string>"
                    ],
                    "pariatur__": [
                      "<string>",
                      "<string>"
                    ],
                    "laboris5a": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "iruref0d": "<string>"
                  }
                }
    post:
      tags:
        - Transactional Email API > Public_Smtp_Tokens
      summary: Create a SMTP API token.
      description: Create a SMTP API token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                campaignName: <string>
                createContact: <boolean>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                campaignName: <string>
                createContact: <boolean>
                createdAt: <dateTime>
                createdBy: <string>
                emailCampaignId: <string>
                id: <string>
                password: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "consequat74": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "exercitation_fb5": [
                          "<string>",
                          "<string>"
                        ],
                        "tempor168": [
                          "<string>",
                          "<string>"
                        ],
                        "quiad9": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "esse_c1": [
                      "<string>",
                      "<string>"
                    ],
                    "pariatur__": [
                      "<string>",
                      "<string>"
                    ],
                    "laboris5a": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "iruref0d": "<string>"
                  }
                }
  /marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset:
    post:
      tags:
        - Transactional Email API > Public_Smtp_Tokens
      summary: Reset the password of an existing token.
      description: >-
        Allows the creation of a replacement password for a given token. Once
        the password is successfully reset, the old password for the token will
        be invalid.
      requestBody:
        content: {}
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: tokenId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                campaignName: <string>
                createContact: <boolean>
                createdAt: <dateTime>
                createdBy: <string>
                emailCampaignId: <string>
                id: <string>
                password: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "consequat74": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "exercitation_fb5": [
                          "<string>",
                          "<string>"
                        ],
                        "tempor168": [
                          "<string>",
                          "<string>"
                        ],
                        "quiad9": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "esse_c1": [
                      "<string>",
                      "<string>"
                    ],
                    "pariatur__": [
                      "<string>",
                      "<string>"
                    ],
                    "laboris5a": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "iruref0d": "<string>"
                  }
                }
  /marketing/v3/transactional/single-email/send:
    post:
      tags:
        - Transactional Email API > Single_Send
      summary: Send a single transactional email asynchronously.
      description: >-
        Asynchronously send a transactional email. Returns the status of the
        email send with a statusId that can be used to continuously query for
        the status using the Email Send Status API.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                emailId: <integer>
                message:
                  to: <string>
                  from: <string>
                  sendId: <string>
                  replyTo:
                    - <string>
                    - <string>
                  cc:
                    - <string>
                    - <string>
                  bcc:
                    - <string>
                    - <string>
                contactProperties:
                  proident3ed: <string>
                  tempor_7d: <string>
                  dolor713: <string>
                customProperties:
                  id_ff: {}
                  in45: {}
                  sed3: {}
                  suntd_: {}
                  qui0f5: {}
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: PROCESSING
                statusId: <string>
                sendResult: GRAYMAIL_SUPPRESSED
                requestedAt: <dateTime>
                startedAt: <dateTime>
                completedAt: <dateTime>
                eventId:
                  created: <dateTime>
                  id: <uuid>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "consequat74": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "exercitation_fb5": [
                          "<string>",
                          "<string>"
                        ],
                        "tempor168": [
                          "<string>",
                          "<string>"
                        ],
                        "quiad9": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "esse_c1": [
                      "<string>",
                      "<string>"
                    ],
                    "pariatur__": [
                      "<string>",
                      "<string>"
                    ],
                    "laboris5a": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "iruref0d": "<string>"
                  }
                }
  /communication-preferences/v3/subscribe:
    post:
      tags:
        - Subscription Preferences API > Status
      summary: Subscribe a contact
      description: >-
        Subscribes a contact to the given subscription type. This API is not
        valid to use for subscribing a contact at a brand or portal level and
        will return an error.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                emailAddress: <string>
                subscriptionId: <string>
                legalBasis: CONSENT_WITH_NOTICE
                legalBasisExplanation: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                id: <string>
                name: <string>
                sourceOfStatus: PORTAL_WIDE_STATUS
                status: NOT_SUBSCRIBED
                brandId: <long>
                preferenceGroupName: <string>
                legalBasis: LEGITIMATE_INTEREST_PQL
                legalBasisExplanation: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                example:
                  status: error
                  message: >-
                    subscription 7148712 for example@example.com cannot be
                    updated because they have unsubscribed
                  correlationId: af3df921-1418-4b18-b6f4-35ca117728ae
                  category: VALIDATION_ERROR
                  requestId: 3b0e0c44-fd57-4714-a3c9-42f6fead33c8
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                example:
                  status: error
                  message: >-
                    example@example.com either has no subscriptions associated
                    with this portal or does not exist
                  correlationId: af3df921-1418-4b18-b6f4-35ca117728ae
                  category: OBJECT_NOT_FOUND
                  requestId: 3b0e0c44-fd57-4714-a3c9-42f6fead33c8
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "sint_f8": [
                          "<string>",
                          "<string>"
                        ],
                        "veniam_8f": [
                          "<string>",
                          "<string>"
                        ],
                        "dolore_27": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "culpa65": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "in_0": [
                      "<string>",
                      "<string>"
                    ],
                    "nulla_aee": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "veniam_69": "<string>",
                    "aute_65": "<string>",
                    "nulla_278": "<string>",
                    "eu_a": "<string>"
                  }
                }
  /communication-preferences/v3/unsubscribe:
    post:
      tags:
        - Subscription Preferences API > Status
      summary: Unsubscribe a contact
      description: >-
        Unsubscribes a contact from the given subscription type. This API is not
        valid to use for unsubscribing a contact at a brand or portal level and
        will return an error.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                emailAddress: <string>
                subscriptionId: <string>
                legalBasis: CONSENT_WITH_NOTICE
                legalBasisExplanation: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                description: <string>
                id: <string>
                name: <string>
                sourceOfStatus: PORTAL_WIDE_STATUS
                status: NOT_SUBSCRIBED
                brandId: <long>
                preferenceGroupName: <string>
                legalBasis: LEGITIMATE_INTEREST_PQL
                legalBasisExplanation: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                example:
                  status: error
                  message: >-
                    example@example.com is already unsubscribed to subscription
                    7148712
                  correlationId: af3df921-1418-4b18-b6f4-35ca117728ae
                  category: VALIDATION_ERROR
                  requestId: 3b0e0c44-fd57-4714-a3c9-42f6fead33c8
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                example:
                  status: error
                  message: >-
                    example@example.com either has no subscriptions associated
                    with this portal or does not exist
                  correlationId: af3df921-1418-4b18-b6f4-35ca117728ae
                  category: OBJECT_NOT_FOUND
                  requestId: 3b0e0c44-fd57-4714-a3c9-42f6fead33c8
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "sint_f8": [
                          "<string>",
                          "<string>"
                        ],
                        "veniam_8f": [
                          "<string>",
                          "<string>"
                        ],
                        "dolore_27": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "culpa65": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "in_0": [
                      "<string>",
                      "<string>"
                    ],
                    "nulla_aee": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "veniam_69": "<string>",
                    "aute_65": "<string>",
                    "nulla_278": "<string>",
                    "eu_a": "<string>"
                  }
                }
  /communication-preferences/v3/status/email/{emailAddress}:
    get:
      tags:
        - Subscription Preferences API > Status
      summary: Get subscription statuses for a contact
      description: Returns a list of subscriptions and their status for a given contact.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: emailAddress
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                recipient: <string>
                subscriptionStatuses:
                  - description: <string>
                    id: <string>
                    name: <string>
                    sourceOfStatus: PORTAL_WIDE_STATUS
                    status: NOT_SUBSCRIBED
                    brandId: <long>
                    preferenceGroupName: <string>
                    legalBasis: LEGITIMATE_INTEREST_OTHER
                    legalBasisExplanation: <string>
                  - description: <string>
                    id: <string>
                    name: <string>
                    sourceOfStatus: BRAND_WIDE_STATUS
                    status: NOT_SUBSCRIBED
                    brandId: <long>
                    preferenceGroupName: <string>
                    legalBasis: NON_GDPR
                    legalBasisExplanation: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "sint_f8": [
                          "<string>",
                          "<string>"
                        ],
                        "veniam_8f": [
                          "<string>",
                          "<string>"
                        ],
                        "dolore_27": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "culpa65": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "in_0": [
                      "<string>",
                      "<string>"
                    ],
                    "nulla_aee": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "veniam_69": "<string>",
                    "aute_65": "<string>",
                    "nulla_278": "<string>",
                    "eu_a": "<string>"
                  }
                }
  /communication-preferences/v3/definitions:
    get:
      tags:
        - Subscription Preferences API > Definition
      summary: Get subscription definitions
      description: Get a list of all subscription definitions for the portal
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                subscriptionDefinitions:
                  - createdAt: <dateTime>
                    description: <string>
                    id: <string>
                    isActive: <boolean>
                    isDefault: <boolean>
                    isInternal: <boolean>
                    name: <string>
                    updatedAt: <dateTime>
                    purpose: <string>
                    communicationMethod: <string>
                  - createdAt: <dateTime>
                    description: <string>
                    id: <string>
                    isActive: <boolean>
                    isDefault: <boolean>
                    isInternal: <boolean>
                    name: <string>
                    updatedAt: <dateTime>
                    purpose: <string>
                    communicationMethod: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "sint_f8": [
                          "<string>",
                          "<string>"
                        ],
                        "veniam_8f": [
                          "<string>",
                          "<string>"
                        ],
                        "dolore_27": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "culpa65": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "in_0": [
                      "<string>",
                      "<string>"
                    ],
                    "nulla_aee": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "veniam_69": "<string>",
                    "aute_65": "<string>",
                    "nulla_278": "<string>",
                    "eu_a": "<string>"
                  }
                }
  /marketing/v3/emails/statistics/list:
    get:
      tags:
        - Marketing Emails API > Statistics
      summary: Get aggregated statistics.
      description: >-
        Use this endpoint to get aggregated statistics of emails sent in a
        specified time span. It also returns the list of emails that were sent
        during the time span.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: startTimestamp
          in: query
          schema:
            type: string
          description: The start timestamp of the time span, in ISO8601 representation.
          example: <string>
        - name: endTimestamp
          in: query
          schema:
            type: string
          description: The end timestamp of the time span, in ISO8601 representation.
          example: <string>
        - name: emailIds
          in: query
          schema:
            type: string
          description: >-
            Filter by email IDs. Only include statistics of emails with these
            IDs.
          example: <long>
        - name: emailIds
          in: query
          schema:
            type: string
          description: >-
            Filter by email IDs. Only include statistics of emails with these
            IDs.
          example: <long>
        - name: property
          in: query
          schema:
            type: string
          description: >-
            Specifies which email properties should be returned. All properties
            will be returned by default.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                emails:
                  - <long>
                  - <long>
                campaignAggregations:
                  iruree6:
                    counters:
                      officiabde: <long>
                    deviceBreakdown:
                      ut_ed:
                        aute_f: <long>
                        in4: <long>
                      consectetur39:
                        Duis_b2: <long>
                        do_2: <long>
                    qualifierStats:
                      adipisicing299:
                        laboris_01: <long>
                      dolora:
                        non12: <long>
                    ratios:
                      Duis5: <number>
                      enim_bd: <number>
                  minimd2:
                    counters:
                      estf: <long>
                      esse46: <long>
                      dolor_ba1: <long>
                    deviceBreakdown:
                      officia_c6:
                        officia03: <long>
                        tempor_373: <long>
                        anim_eb5: <long>
                        ex_a: <long>
                    qualifierStats:
                      laboris_e:
                        aliquip3: <long>
                        ea1bb: <long>
                      cupidatat5b:
                        sint_44e: <long>
                        minim_b: <long>
                      consectetur_2a3:
                        sunt_c7f: <long>
                        sed_8: <long>
                    ratios:
                      essea: <number>
                      eu_fd4: <number>
                      Excepteurf7a: <number>
                      Lorem9fb: <number>
                  ut_0:
                    counters:
                      consectetur6: <long>
                      irurecd6: <long>
                    deviceBreakdown:
                      aliquip_5_6:
                        ut_1: <long>
                        Duisd49: <long>
                      cupidatat_b:
                        dolor27: <long>
                        deseruntb: <long>
                    qualifierStats:
                      irure_a9b:
                        cupidatatc3_: <long>
                      reprehenderit_7:
                        eub: <long>
                    ratios:
                      officia_b: <number>
                      velit_2e: <number>
                aggregate:
                  counters:
                    velite9: <long>
                    consequat5f: <long>
                    nisi_f: <long>
                  deviceBreakdown:
                    sunt641:
                      animae: <long>
                      etf6: <long>
                    in_26_:
                      in_c1a: <long>
                      officia_97: <long>
                      Duis7: <long>
                  qualifierStats:
                    culpa_1:
                      esse_5: <long>
                      qui_63: <long>
                  ratios:
                    sit2c: <number>
                    exfa: <number>
                    Ut__b4: <number>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/statistics/histogram:
    get:
      tags:
        - Marketing Emails API > Statistics
      summary: Get aggregated statistic intervals.
      description: >-
        Get aggregated statistics in intervals for a specified time span. Each
        interval contains aggregated statistics of the emails that were sent in
        that time.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: interval
          in: query
          schema:
            type: string
          description: The interval to aggregate statistics for.
          example: YEAR
        - name: startTimestamp
          in: query
          schema:
            type: string
          description: The start timestamp of the time span, in ISO8601 representation.
          example: <string>
        - name: endTimestamp
          in: query
          schema:
            type: string
          description: The end timestamp of the time span, in ISO8601 representation.
          example: <string>
        - name: emailIds
          in: query
          schema:
            type: string
          description: >-
            Filter by email IDs. Only include statistics of emails with these
            IDs.
          example: <long>
        - name: emailIds
          in: query
          schema:
            type: string
          description: >-
            Filter by email IDs. Only include statistics of emails with these
            IDs.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - aggregations:
                      counters:
                        nostrudf: <long>
                      deviceBreakdown:
                        enim__1:
                          ea_d: <long>
                          consectetur_bfa: <long>
                          nisid5: <long>
                        proident52:
                          tempor_0: <long>
                          laborum_2: <long>
                          tempor387: <long>
                        eiusmod_3:
                          Excepteur0: <long>
                      qualifierStats:
                        ea_58d:
                          deseruntb7: <long>
                        incididunt6:
                          Excepteurc: <long>
                          adipisicing_58: <long>
                        ex_cf:
                          Lorem_7: <long>
                          utf_: <long>
                      ratios:
                        cupidatatb01: <number>
                    interval:
                      end: <dateTime>
                      start: <dateTime>
                  - aggregations:
                      counters:
                        voluptate2c6: <long>
                        ea_447: <long>
                      deviceBreakdown:
                        in_752:
                          minim25: <long>
                          Duisbd0: <long>
                      qualifierStats:
                        Duis_09:
                          anim0: <long>
                          veniam_52c: <long>
                          aute_a5: <long>
                          eiusmod_2: <long>
                      ratios:
                        deserunt_1: <number>
                        irureece: <number>
                    interval:
                      end: <dateTime>
                      start: <dateTime>
                total: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}/ab-test/get-variation:
    get:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Get the variation of a an A/B marketing email
      description: >-
        This endpoint lets you obtain the variation of an A/B marketing email.
        If the email is variation A (master) it will return variation B
        (variant) and vice versa.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}/draft/reset:
    post:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Reset Draft
      description: Resets the draft back to a copy of the live object.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}/revisions/{revisionId}/restore-to-draft:
    post:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Restore a revision of a marketing email to DRAFT state
      description: >-
        Restores a previous revision of a marketing email to DRAFT state. If
        there is currently something in the draft for that object, it is
        overwritten. 
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
        - name: revisionId
          in: path
          schema:
            type: string
          required: true
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}/draft:
    get:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Get draft version of a marketing email
      description: >-
        Get the draft version of an email (if it exists). If no draft version
        exists, the published email is returned.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
    patch:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Create or update draft version
      description: >-
        Create or update the draft version of a marketing email. If no draft
        exists, the system creates a draft from the current “live” email then
        applies the request body to that draft. The draft version only lives on
        the buffer—the email is not cloned.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}/revisions:
    get:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Get revisions of a marketing email
      description: >-
        Get a list of all versions of a marketing email, with each entry
        including the full state of that particular version. The current
        revision has the ID -1.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: after
          in: query
          schema:
            type: string
          description: >-
            The cursor token value to get the next set of results. You can get
            this from the `paging.next.after` JSON property of a paged response
            containing more results.
          example: <string>
        - name: before
          in: query
          schema:
            type: string
          description: >-
            The cursor token value to get the previous set of results. You can
            get this from the `paging.prev.before` JSON property of a paged
            response containing more results.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: The maximum number of results to return. Default is 100.
          example: <integer>
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - id: <string>
                    object:
                      abHoursToWait: <integer>
                      abStatus: mab_variant
                      abTestId: <string>
                      archivedAt: <dateTime>
                      archivedInDashboard: <boolean>
                      attachedStylesheets:
                        - magna_d6: {}
                        - velitd: {}
                          sunt_2_8: {}
                      authorName: <string>
                      blogEmailType: <string>
                      campaign: <string>
                      categoryId: <integer>
                      contentGroupId: <string>
                      contentTypeCategory: '6'
                      createPage: <boolean>
                      created: <dateTime>
                      createdById: <string>
                      currentState: AUTOMATED_AB_VARIANT
                      currentlyPublished: <boolean>
                      customReplyTo: <string>
                      customReplyToEnabled: <boolean>
                      domain: <string>
                      dynamicPageDataSourceId: <string>
                      dynamicPageDataSourceType: <integer>
                      dynamicPageHubDbTableId: <string>
                      emailType: MEMBERSHIP_PASSWORD_RESET_EMAIL
                      enableDomainStylesheets: <boolean>
                      enableLayoutStylesheets: <boolean>
                      featuredImage: <string>
                      featuredImageAltText: <string>
                      folderId: <long>
                      footerHtml: <string>
                      fromName: <string>
                      headHtml: <string>
                      htmlTitle: <string>
                      id: <string>
                      includeDefaultCustomCss: <boolean>
                      isGraymailSuppressionEnabled: <boolean>
                      language: ar-iq
                      layoutSections:
                        irure2:
                          cells:
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                          cssClass: <string>
                          cssId: <string>
                          cssStyle: <string>
                          label: <string>
                          name: <string>
                          params:
                            reprehenderit_a_6: {}
                            sit1d: {}
                            ex_c: {}
                          rowMetaData:
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                          rows:
                            - ex__e8:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                            - magna8d:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              in3:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              id_04:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                          styles:
                            backgroundColor:
                              a: <number>
                              b: <integer>
                              g: <integer>
                              r: <integer>
                            backgroundGradient:
                              angle:
                                units: <string>
                                value: <number>
                              colors:
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                              sideOrCorner:
                                horizontalSide: <string>
                                verticalSide: <string>
                            backgroundImage:
                              backgroundPosition: <string>
                              backgroundSize: <string>
                              imageUrl: <string>
                            flexboxPositioning: <string>
                            forceFullWidthSection: <boolean>
                            maxWidthSectionCentering: <integer>
                            verticalAlignment: <string>
                          type: <string>
                          w: <integer>
                          x: <integer>
                        Ut_d4b:
                          cells:
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                          cssClass: <string>
                          cssId: <string>
                          cssStyle: <string>
                          label: <string>
                          name: <string>
                          params:
                            id2: {}
                          rowMetaData:
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                          rows:
                            - nulla_c8a:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              cupidatat_8:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                            - culpa1_4:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              ut_dd0:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              Duis_9:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                          styles:
                            backgroundColor:
                              a: <number>
                              b: <integer>
                              g: <integer>
                              r: <integer>
                            backgroundGradient:
                              angle:
                                units: <string>
                                value: <number>
                              colors:
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                              sideOrCorner:
                                horizontalSide: <string>
                                verticalSide: <string>
                            backgroundImage:
                              backgroundPosition: <string>
                              backgroundSize: <string>
                              imageUrl: <string>
                            flexboxPositioning: <string>
                            forceFullWidthSection: <boolean>
                            maxWidthSectionCentering: <integer>
                            verticalAlignment: <string>
                          type: <string>
                          w: <integer>
                          x: <integer>
                        fugiat182:
                          cells:
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                          cssClass: <string>
                          cssId: <string>
                          cssStyle: <string>
                          label: <string>
                          name: <string>
                          params:
                            deserunt_91: {}
                          rowMetaData:
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                          rows:
                            - Lorem_35c:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              cillum__e9:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                            - ullamco90_:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                          styles:
                            backgroundColor:
                              a: <number>
                              b: <integer>
                              g: <integer>
                              r: <integer>
                            backgroundGradient:
                              angle:
                                units: <string>
                                value: <number>
                              colors:
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                              sideOrCorner:
                                horizontalSide: <string>
                                verticalSide: <string>
                            backgroundImage:
                              backgroundPosition: <string>
                              backgroundSize: <string>
                              imageUrl: <string>
                            flexboxPositioning: <string>
                            forceFullWidthSection: <boolean>
                            maxWidthSectionCentering: <integer>
                            verticalAlignment: <string>
                          type: <string>
                          w: <integer>
                          x: <integer>
                        doloree:
                          cells:
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                          cssClass: <string>
                          cssId: <string>
                          cssStyle: <string>
                          label: <string>
                          name: <string>
                          params:
                            doloreeee: {}
                          rowMetaData:
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                          rows:
                            - Excepteurba:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              deserunt_69d:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                            - mollit_4f:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                          styles:
                            backgroundColor:
                              a: <number>
                              b: <integer>
                              g: <integer>
                              r: <integer>
                            backgroundGradient:
                              angle:
                                units: <string>
                                value: <number>
                              colors:
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                              sideOrCorner:
                                horizontalSide: <string>
                                verticalSide: <string>
                            backgroundImage:
                              backgroundPosition: <string>
                              backgroundSize: <string>
                              imageUrl: <string>
                            flexboxPositioning: <string>
                            forceFullWidthSection: <boolean>
                            maxWidthSectionCentering: <integer>
                            verticalAlignment: <string>
                          type: <string>
                          w: <integer>
                          x: <integer>
                        aliqua506:
                          cells:
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                          cssClass: <string>
                          cssId: <string>
                          cssStyle: <string>
                          label: <string>
                          name: <string>
                          params:
                            tempor_92: {}
                            doc: {}
                          rowMetaData:
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                          rows:
                            - aute_5:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              deserunt66:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                            - ex_56:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              ullamco_7ba:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                          styles:
                            backgroundColor:
                              a: <number>
                              b: <integer>
                              g: <integer>
                              r: <integer>
                            backgroundGradient:
                              angle:
                                units: <string>
                                value: <number>
                              colors:
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                              sideOrCorner:
                                horizontalSide: <string>
                                verticalSide: <string>
                            backgroundImage:
                              backgroundPosition: <string>
                              backgroundSize: <string>
                              imageUrl: <string>
                            flexboxPositioning: <string>
                            forceFullWidthSection: <boolean>
                            maxWidthSectionCentering: <integer>
                            verticalAlignment: <string>
                          type: <string>
                          w: <integer>
                          x: <integer>
                      linkRelCanonicalUrl: <string>
                      mabExperimentId: <string>
                      mailingListsExcluded:
                        - <integer>
                        - <integer>
                      mailingListsIncluded:
                        - <integer>
                        - <integer>
                      maxRssEntries: <integer>
                      metaDescription: <string>
                      name: <string>
                      pageExpiryDate: <long>
                      pageExpiryEnabled: <boolean>
                      pageExpiryRedirectId: <long>
                      pageExpiryRedirectUrl: <string>
                      pageRedirected: <boolean>
                      password: <string>
                      publicAccessRulesEnabled: <boolean>
                      publishDate: <dateTime>
                      publishImmediately: <boolean>
                      replyTo: <string>
                      rssEmailAuthorLineTemplate: <string>
                      rssEmailBlogImageMaxWidth: <integer>
                      rssEmailByText: <string>
                      rssEmailClickThroughText: <string>
                      rssEmailCommentText: <string>
                      rssEmailEntryTemplate: <string>
                      rssEmailEntryTemplateEnabled: <boolean>
                      rssEmailId: <long>
                      rssEmailUrl: <string>
                      rssToEmailTiming:
                        Excepteur_8ba: {}
                        cupidatat_d37: {}
                        voluptate94: {}
                        nostrud_b59: {}
                      slug: <string>
                      state: AUTOMATED_LOSER_ABVARIANT
                      stats:
                        counters:
                          proident_2c5: <long>
                        deviceBreakdown:
                          laboris_6:
                            pariatur_2: <long>
                          sit_c6:
                            id348: <long>
                            reprehenderitb97: <long>
                          velit_9e:
                            quis7: <long>
                            fugiat_66: <long>
                        qualifierStats:
                          aliquipc4c:
                            elit86: <long>
                            eiusmod_1: <long>
                            aliquad37: <long>
                          ullamcoe0c:
                            proident_5: <long>
                            enimae9: <long>
                        ratios:
                          enimc3: <number>
                          id498: <number>
                      subcategory: <string>
                      subject: <string>
                      subscription: <long>
                      subscriptionBlogId: <long>
                      subscriptionName: <string>
                      templatePath: <string>
                      themeSettingsValues:
                        reprehenderit_7f: {}
                        commodo2: {}
                        cupidatat_64: {}
                      transactional: <boolean>
                      translatedFromId: <string>
                      translations:
                        fugiat_a:
                          archivedInDashboard: <boolean>
                          authorName: <string>
                          campaign: <string>
                          created: <dateTime>
                          id: <long>
                          name: <string>
                          password: <string>
                          publicAccessRules: []
                          publicAccessRulesEnabled: <boolean>
                          publishDate: <dateTime>
                          slug: <string>
                          state: <string>
                          updated: <dateTime>
                          tagIds:
                            - <long>
                            - <long>
                        pariatur__c:
                          archivedInDashboard: <boolean>
                          authorName: <string>
                          campaign: <string>
                          created: <dateTime>
                          id: <long>
                          name: <string>
                          password: <string>
                          publicAccessRules: []
                          publicAccessRulesEnabled: <boolean>
                          publishDate: <dateTime>
                          slug: <string>
                          state: <string>
                          updated: <dateTime>
                          tagIds:
                            - <long>
                            - <long>
                        elit_4d9:
                          archivedInDashboard: <boolean>
                          authorName: <string>
                          campaign: <string>
                          created: <dateTime>
                          id: <long>
                          name: <string>
                          password: <string>
                          publicAccessRules: []
                          publicAccessRulesEnabled: <boolean>
                          publishDate: <dateTime>
                          slug: <string>
                          state: <string>
                          updated: <dateTime>
                          tagIds:
                            - <long>
                            - <long>
                      updated: <dateTime>
                      updatedById: <string>
                      url: <string>
                      useFeaturedImage: <boolean>
                      useRssHeadlineAsSubject: <boolean>
                      vidsExcluded:
                        - <long>
                        - <long>
                      vidsIncluded:
                        - <long>
                        - <long>
                      widgetContainers:
                        Excepteur_86: {}
                        cupidatat_1: {}
                      widgets:
                        qui2ee: {}
                        consectetur_f: {}
                        proident_fe: {}
                        laboris_3f4: {}
                      workflowNames:
                        - <string>
                        - <string>
                      isRecipientFatigueSuppressionEnabled: <boolean>
                      smartEmailFields:
                        ametad5: {}
                      feedbackSurveyId: <integer>
                      content:
                        smartFields:
                          consecteturef: {}
                          mollit_0d3: {}
                        themeSettingsValues:
                          elit63: {}
                          laborum_7: {}
                        flexAreas:
                          suntf: {}
                        widgets:
                          ea_3: {}
                        plainTextVersion: <string>
                        templatePath: <string>
                        widgetContainers:
                          incididunt_0c3: {}
                          sint_35e: {}
                        styleSettings:
                          emailBodyPadding: <string>
                          colorPickerFavorite5: <string>
                          bodyColor: <string>
                          colorPickerFavorite6: <string>
                          backgroundImage: <string>
                          emailBodyWidth: <string>
                          secondaryFont: <string>
                          primaryAccentColor: <string>
                          colorPickerFavorite3: <string>
                          primaryFontLineHeight: <string>
                          colorPickerFavorite4: <string>
                          secondaryFontColor: <string>
                          colorPickerFavorite1: <string>
                          colorPickerFavorite2: <string>
                          bodyBorderColor: <string>
                          bodyBorderWidth: <integer>
                          linksFont:
                            size: <integer>
                            color: <string>
                            underline: <boolean>
                            bold: <boolean>
                            italic: <boolean>
                            font: <string>
                          backgroundColor: <string>
                          backgroundImageType: <string>
                          dividerStyleSettings:
                            color: {}
                            lineType: <string>
                            height: <integer>
                          secondaryAccentColor: <string>
                          secondaryFontLineHeight: <string>
                          primaryFontSize: <integer>
                          secondaryFontSize: <integer>
                          primaryFontColor: <string>
                          headingOneFont:
                            size: <integer>
                            color: <string>
                            underline: <boolean>
                            bold: <boolean>
                            italic: <boolean>
                            font: <string>
                          primaryFont: <string>
                          headingTwoFont:
                            size: <integer>
                            color: <string>
                            underline: <boolean>
                            bold: <boolean>
                            italic: <boolean>
                            font: <string>
                          buttonStyleSettings:
                            backgroundColor: {}
                            fontStyle:
                              size: <integer>
                              color: <string>
                              underline: <boolean>
                              bold: <boolean>
                              italic: <boolean>
                              font: <string>
                            cornerRadius: <integer>
                          bodyBorderColorChoice: <string>
                      from:
                        customReplyTo: <string>
                        fromName: <string>
                        replyTo: <string>
                      sendOnPublish: <boolean>
                      to:
                        limitSendFrequency: <boolean>
                        suppressGraymail: <boolean>
                        contactIds:
                          include:
                            - <string>
                            - <string>
                          exclude:
                            - <string>
                            - <string>
                        contactLists:
                          include:
                            - <string>
                            - <string>
                          exclude:
                            - <string>
                            - <string>
                    user:
                      email: <string>
                      fullName: <string>
                      id: <string>
                    updatedAt: <dateTime>
                  - id: <string>
                    object:
                      abHoursToWait: <integer>
                      abStatus: automated_master
                      abTestId: <string>
                      archivedAt: <dateTime>
                      archivedInDashboard: <boolean>
                      attachedStylesheets:
                        - ea_5: {}
                          aliqua_058: {}
                        - sed_f_2: {}
                      authorName: <string>
                      blogEmailType: <string>
                      campaign: <string>
                      categoryId: <integer>
                      contentGroupId: <string>
                      contentTypeCategory: '5'
                      createPage: <boolean>
                      created: <dateTime>
                      createdById: <string>
                      currentState: PROCESSING
                      currentlyPublished: <boolean>
                      customReplyTo: <string>
                      customReplyToEnabled: <boolean>
                      domain: <string>
                      dynamicPageDataSourceId: <string>
                      dynamicPageDataSourceType: <integer>
                      dynamicPageHubDbTableId: <string>
                      emailType: BLOG_EMAIL
                      enableDomainStylesheets: <boolean>
                      enableLayoutStylesheets: <boolean>
                      featuredImage: <string>
                      featuredImageAltText: <string>
                      folderId: <long>
                      footerHtml: <string>
                      fromName: <string>
                      headHtml: <string>
                      htmlTitle: <string>
                      id: <string>
                      includeDefaultCustomCss: <boolean>
                      isGraymailSuppressionEnabled: <boolean>
                      language: en-il
                      layoutSections:
                        ad_72d:
                          cells:
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                          cssClass: <string>
                          cssId: <string>
                          cssStyle: <string>
                          label: <string>
                          name: <string>
                          params:
                            nisi_6: {}
                            sunt5ef: {}
                          rowMetaData:
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                          rows:
                            - ex_0:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              reprehenderit_a8c:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                            - magna821:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                          styles:
                            backgroundColor:
                              a: <number>
                              b: <integer>
                              g: <integer>
                              r: <integer>
                            backgroundGradient:
                              angle:
                                units: <string>
                                value: <number>
                              colors:
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                              sideOrCorner:
                                horizontalSide: <string>
                                verticalSide: <string>
                            backgroundImage:
                              backgroundPosition: <string>
                              backgroundSize: <string>
                              imageUrl: <string>
                            flexboxPositioning: <string>
                            forceFullWidthSection: <boolean>
                            maxWidthSectionCentering: <integer>
                            verticalAlignment: <string>
                          type: <string>
                          w: <integer>
                          x: <integer>
                        do2ac:
                          cells:
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                            - value: >-
                                <Circular reference to
                                #/components/schemas/LayoutSection detected>
                          cssClass: <string>
                          cssId: <string>
                          cssStyle: <string>
                          label: <string>
                          name: <string>
                          params:
                            Uta5e: {}
                            Duis_8: {}
                          rowMetaData:
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                            - cssClass: <string>
                              styles:
                                backgroundColor:
                                  a: <number>
                                  b: <integer>
                                  g: <integer>
                                  r: <integer>
                                backgroundGradient:
                                  angle:
                                    units: <string>
                                    value: <number>
                                  colors:
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                    - color:
                                        a: <number>
                                        b: <integer>
                                        g: <integer>
                                        r: <integer>
                                  sideOrCorner:
                                    horizontalSide: <string>
                                    verticalSide: <string>
                                backgroundImage:
                                  backgroundPosition: <string>
                                  backgroundSize: <string>
                                  imageUrl: <string>
                                flexboxPositioning: <string>
                                forceFullWidthSection: <boolean>
                                maxWidthSectionCentering: <integer>
                                verticalAlignment: <string>
                          rows:
                            - sed5cd:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              aliqua1:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                            - elite9:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                              magnac5:
                                value: >-
                                  <Circular reference to
                                  #/components/schemas/LayoutSection detected>
                          styles:
                            backgroundColor:
                              a: <number>
                              b: <integer>
                              g: <integer>
                              r: <integer>
                            backgroundGradient:
                              angle:
                                units: <string>
                                value: <number>
                              colors:
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                                - color:
                                    a: <number>
                                    b: <integer>
                                    g: <integer>
                                    r: <integer>
                              sideOrCorner:
                                horizontalSide: <string>
                                verticalSide: <string>
                            backgroundImage:
                              backgroundPosition: <string>
                              backgroundSize: <string>
                              imageUrl: <string>
                            flexboxPositioning: <string>
                            forceFullWidthSection: <boolean>
                            maxWidthSectionCentering: <integer>
                            verticalAlignment: <string>
                          type: <string>
                          w: <integer>
                          x: <integer>
                      linkRelCanonicalUrl: <string>
                      mabExperimentId: <string>
                      mailingListsExcluded:
                        - <integer>
                        - <integer>
                      mailingListsIncluded:
                        - <integer>
                        - <integer>
                      maxRssEntries: <integer>
                      metaDescription: <string>
                      name: <string>
                      pageExpiryDate: <long>
                      pageExpiryEnabled: <boolean>
                      pageExpiryRedirectId: <long>
                      pageExpiryRedirectUrl: <string>
                      pageRedirected: <boolean>
                      password: <string>
                      publicAccessRulesEnabled: <boolean>
                      publishDate: <dateTime>
                      publishImmediately: <boolean>
                      replyTo: <string>
                      rssEmailAuthorLineTemplate: <string>
                      rssEmailBlogImageMaxWidth: <integer>
                      rssEmailByText: <string>
                      rssEmailClickThroughText: <string>
                      rssEmailCommentText: <string>
                      rssEmailEntryTemplate: <string>
                      rssEmailEntryTemplateEnabled: <boolean>
                      rssEmailId: <long>
                      rssEmailUrl: <string>
                      rssToEmailTiming:
                        ex_03: {}
                      slug: <string>
                      state: PAGE_STUB
                      stats:
                        counters:
                          dolor_f: <long>
                        deviceBreakdown:
                          labore_5ce:
                            sint_036: <long>
                            laborum6a8: <long>
                          Loremae:
                            veniam_2: <long>
                            pariaturf: <long>
                        qualifierStats:
                          eab96:
                            occaecatc: <long>
                            aliquip5: <long>
                            eiusmod_1e: <long>
                          nisi95:
                            sit_18: <long>
                        ratios:
                          qui_57: <number>
                      subcategory: <string>
                      subject: <string>
                      subscription: <long>
                      subscriptionBlogId: <long>
                      subscriptionName: <string>
                      templatePath: <string>
                      themeSettingsValues:
                        est_96: {}
                        amet_56: {}
                      transactional: <boolean>
                      translatedFromId: <string>
                      translations:
                        irure_a21:
                          archivedInDashboard: <boolean>
                          authorName: <string>
                          campaign: <string>
                          created: <dateTime>
                          id: <long>
                          name: <string>
                          password: <string>
                          publicAccessRules: []
                          publicAccessRulesEnabled: <boolean>
                          publishDate: <dateTime>
                          slug: <string>
                          state: <string>
                          updated: <dateTime>
                          tagIds:
                            - <long>
                            - <long>
                        sit__c:
                          archivedInDashboard: <boolean>
                          authorName: <string>
                          campaign: <string>
                          created: <dateTime>
                          id: <long>
                          name: <string>
                          password: <string>
                          publicAccessRules: []
                          publicAccessRulesEnabled: <boolean>
                          publishDate: <dateTime>
                          slug: <string>
                          state: <string>
                          updated: <dateTime>
                          tagIds:
                            - <long>
                            - <long>
                      updated: <dateTime>
                      updatedById: <string>
                      url: <string>
                      useFeaturedImage: <boolean>
                      useRssHeadlineAsSubject: <boolean>
                      vidsExcluded:
                        - <long>
                        - <long>
                      vidsIncluded:
                        - <long>
                        - <long>
                      widgetContainers:
                        do4b6: {}
                        eucf: {}
                        dolor_8f: {}
                        eu_b: {}
                      widgets:
                        dolore91: {}
                        pariatur_2: {}
                      workflowNames:
                        - <string>
                        - <string>
                      isRecipientFatigueSuppressionEnabled: <boolean>
                      smartEmailFields:
                        consequat_87: {}
                        in2e: {}
                        aliqua01: {}
                      feedbackSurveyId: <integer>
                      content:
                        smartFields:
                          aliquip73e: {}
                          consectetur7e: {}
                        themeSettingsValues:
                          reprehenderit_f6: {}
                          nullab: {}
                        flexAreas:
                          sunt_f: {}
                        widgets:
                          adipisicing_71e: {}
                          id97: {}
                        plainTextVersion: <string>
                        templatePath: <string>
                        widgetContainers:
                          pariatur00: {}
                          ullamcobf: {}
                          cupidatat455: {}
                          commodo5fb: {}
                        styleSettings:
                          emailBodyPadding: <string>
                          colorPickerFavorite5: <string>
                          bodyColor: <string>
                          colorPickerFavorite6: <string>
                          backgroundImage: <string>
                          emailBodyWidth: <string>
                          secondaryFont: <string>
                          primaryAccentColor: <string>
                          colorPickerFavorite3: <string>
                          primaryFontLineHeight: <string>
                          colorPickerFavorite4: <string>
                          secondaryFontColor: <string>
                          colorPickerFavorite1: <string>
                          colorPickerFavorite2: <string>
                          bodyBorderColor: <string>
                          bodyBorderWidth: <integer>
                          linksFont:
                            size: <integer>
                            color: <string>
                            underline: <boolean>
                            bold: <boolean>
                            italic: <boolean>
                            font: <string>
                          backgroundColor: <string>
                          backgroundImageType: <string>
                          dividerStyleSettings:
                            color: {}
                            lineType: <string>
                            height: <integer>
                          secondaryAccentColor: <string>
                          secondaryFontLineHeight: <string>
                          primaryFontSize: <integer>
                          secondaryFontSize: <integer>
                          primaryFontColor: <string>
                          headingOneFont:
                            size: <integer>
                            color: <string>
                            underline: <boolean>
                            bold: <boolean>
                            italic: <boolean>
                            font: <string>
                          primaryFont: <string>
                          headingTwoFont:
                            size: <integer>
                            color: <string>
                            underline: <boolean>
                            bold: <boolean>
                            italic: <boolean>
                            font: <string>
                          buttonStyleSettings:
                            backgroundColor: {}
                            fontStyle:
                              size: <integer>
                              color: <string>
                              underline: <boolean>
                              bold: <boolean>
                              italic: <boolean>
                              font: <string>
                            cornerRadius: <integer>
                          bodyBorderColorChoice: <string>
                      from:
                        customReplyTo: <string>
                        fromName: <string>
                        replyTo: <string>
                      sendOnPublish: <boolean>
                      to:
                        limitSendFrequency: <boolean>
                        suppressGraymail: <boolean>
                        contactIds:
                          include:
                            - <string>
                            - <string>
                          exclude:
                            - <string>
                            - <string>
                        contactLists:
                          include:
                            - <string>
                            - <string>
                          exclude:
                            - <string>
                            - <string>
                    user:
                      email: <string>
                      fullName: <string>
                      id: <string>
                    updatedAt: <dateTime>
                total: <integer>
                paging:
                  next:
                    after: <string>
                    link: <string>
                  prev:
                    before: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}/revisions/{revisionId}:
    get:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Get a revision of a marketing email.
      description: Get a specific revision of a marketing email.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
        - name: revisionId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: <string>
                object:
                  content:
                    templatePath: <string>
                    plainTextVersion: <string>
                    widgets:
                      Duis__a4: {}
                      ad_af9: {}
                      occaecat_a: {}
                    widgetContainers:
                      eiusmod0: {}
                      pariatur10f: {}
                    flexAreas:
                      velit1a4: {}
                    styleSettings: {}
                    smartFields:
                      culpadd: {}
                      dolor_d95: {}
                    themeSettingsValues:
                      amet_74: {}
                  from:
                    fromName: <string>
                    replyTo: <string>
                    customReplyTo: <string>
                  id: <string>
                  name: <string>
                  sendOnPublish: <boolean>
                  state: AUTOMATED_FOR_FORM_LEGACY
                  subcategory: <string>
                  subject: <string>
                  to:
                    contactLists:
                      include:
                        - <long>
                        - <long>
                      exclude:
                        - <long>
                        - <long>
                    contactIds:
                      include:
                        - <long>
                        - <long>
                      exclude:
                        - <long>
                        - <long>
                    limitSendFrequency: <boolean>
                    suppressGraymail: <boolean>
                  createdById: <integer>
                  type: MEMBERSHIP_REGISTRATION_EMAIL
                  activeDomain: <string>
                  archived: <boolean>
                  folderId: <long>
                  feedbackSurveyId: <integer>
                  stats:
                    counters:
                      adipisicingfb: <long>
                    deviceBreakdown:
                      dolor0:
                        pariatur8: <long>
                      officia9:
                        cupidatat774: <long>
                    qualifierStats:
                      cupidatat95:
                        aliqua_f_: <long>
                        in_a: <long>
                    ratios:
                      dolore3: <number>
                      Lorem_9: <number>
                  testing:
                    testId: <long>
                    hoursToWait: <integer>
                    abSuccessMetric: CLICKS_BY_OPENS
                    abSampleSizeDefault: automated_loser_variant
                    abStatus: automated_variant
                    abTestPercentage: <integer>
                    abSamplingDefault: master
                  subscriptionDetails:
                    subscriptionId: <long>
                    preferencesGroupId: <long>
                    officeLocationId: <string>
                  updatedById: <integer>
                  publishedById: <integer>
                  language: jmc
                  campaign: <string>
                  webversion:
                    slug: <string>
                    domain: <string>
                    title: <string>
                    metaDescription: <string>
                    redirectToUrl: <string>
                    redirectToPageId: <long>
                    expiresAt: <dateTime>
                  rssData:
                    maxEntries: <integer>
                    timing:
                      voluptate0e5: {}
                    url: <string>
                    hubspotBlogId: <long>
                    blogEmailType: <string>
                    blogImageMaxWidth: <integer>
                    rssEntryTemplate: <string>
                    useHeadlineAsSubject: <boolean>
                    blogLayout: <string>
                  isTransactional: <boolean>
                  isPublished: <boolean>
                  publishDate: <dateTime>
                  updatedAt: <dateTime>
                  createdAt: <dateTime>
                  deletedAt: <dateTime>
                  publishedAt: <dateTime>
                updatedAt: <dateTime>
                user:
                  email: <string>
                  fullName: <string>
                  id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/:
    get:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Get all marketing emails for a HubSpot account.
      description: >-
        The results can be filtered, allowing you to find a specific set of
        emails. See the table below for a full list of filtering options.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: createdAt
          in: query
          schema:
            type: string
          description: Only return emails created at exactly the specified time.
          example: <dateTime>
        - name: createdAfter
          in: query
          schema:
            type: string
          description: Only return emails created after the specified time.
          example: <dateTime>
        - name: createdBefore
          in: query
          schema:
            type: string
          description: Only return emails created before the specified time.
          example: <dateTime>
        - name: updatedAt
          in: query
          schema:
            type: string
          description: Only return emails last updated at exactly the specified time.
          example: <dateTime>
        - name: updatedAfter
          in: query
          schema:
            type: string
          description: Only return emails last updated after the specified time.
          example: <dateTime>
        - name: updatedBefore
          in: query
          schema:
            type: string
          description: Only return emails last updated before the specified time.
          example: <dateTime>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Specifies which fields to use for sorting results. Valid fields are
            `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`.
            `createdAt` will be used by default.
          example: <string>
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Specifies which fields to use for sorting results. Valid fields are
            `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`.
            `createdAt` will be used by default.
          example: <string>
        - name: after
          in: query
          schema:
            type: string
          description: >-
            The cursor token value to get the next set of results. You can get
            this from the `paging.next.after` JSON property of a paged response
            containing more results.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: The maximum number of results to return. Default is 100.
          example: <integer>
        - name: includeStats
          in: query
          schema:
            type: string
          description: Include statistics with emails.
          example: <boolean>
        - name: type
          in: query
          schema:
            type: string
          description: >-
            Email types to be filtered by. Multiple types can be included. All
            emails will be returned if not present.
          example: OPTIN_EMAIL
        - name: isPublished
          in: query
          schema:
            type: string
          description: >-
            Filter by published/draft emails. All emails will be returned if not
            present.
          example: <boolean>
        - name: includedProperties
          in: query
          schema:
            type: string
          example: <string>
        - name: includedProperties
          in: query
          schema:
            type: string
          example: <string>
        - name: archived
          in: query
          schema:
            type: string
          description: Specifies whether to return archived emails. Defaults to `false`.
          example: <boolean>
        - name: marketingCampaignNames
          in: query
          schema:
            type: string
          example: <boolean>
        - name: workflowNames
          in: query
          schema:
            type: string
          example: <boolean>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - content:
                      templatePath: <string>
                      plainTextVersion: <string>
                      widgets:
                        ad_d84: {}
                      widgetContainers:
                        irure_34: {}
                        sed_9: {}
                        fugiat2: {}
                        et_7c0: {}
                        sunt_acc: {}
                      flexAreas:
                        magna726: {}
                        sintebe: {}
                        tempor_4a: {}
                        occaecatf15: {}
                      styleSettings: {}
                      smartFields:
                        adipisicing_d4: {}
                        enim1_: {}
                        culpac6: {}
                      themeSettingsValues:
                        elit0: {}
                        occaecatb: {}
                        anim_e5: {}
                        cupidatat3: {}
                    from:
                      fromName: <string>
                      replyTo: <string>
                      customReplyTo: <string>
                    id: <string>
                    name: <string>
                    sendOnPublish: <boolean>
                    state: SCHEDULED_AB
                    subcategory: <string>
                    subject: <string>
                    to:
                      contactLists:
                        include:
                          - <long>
                          - <long>
                        exclude:
                          - <long>
                          - <long>
                      contactIds:
                        include:
                          - <long>
                          - <long>
                        exclude:
                          - <long>
                          - <long>
                      limitSendFrequency: <boolean>
                      suppressGraymail: <boolean>
                    createdById: <integer>
                    type: MEMBERSHIP_REGISTRATION_EMAIL
                    activeDomain: <string>
                    archived: <boolean>
                    folderId: <long>
                    feedbackSurveyId: <integer>
                    stats:
                      counters:
                        mollit_9d7: <long>
                        utd: <long>
                        excd7: <long>
                      deviceBreakdown:
                        inb33:
                          tempor_b52: <long>
                        adb7c:
                          quis_0: <long>
                      qualifierStats:
                        dolore47:
                          est7: <long>
                      ratios:
                        dolord55: <number>
                    testing:
                      testId: <long>
                      hoursToWait: <integer>
                      abSuccessMetric: OPENS_BY_DELIVERED
                      abSampleSizeDefault: automated_loser_variant
                      abStatus: mab_variant
                      abTestPercentage: <integer>
                      abSamplingDefault: automated_loser_variant
                    subscriptionDetails:
                      subscriptionId: <long>
                      preferencesGroupId: <long>
                      officeLocationId: <string>
                    updatedById: <integer>
                    publishedById: <integer>
                    language: ff
                    campaign: <string>
                    webversion:
                      slug: <string>
                      domain: <string>
                      title: <string>
                      metaDescription: <string>
                      redirectToUrl: <string>
                      redirectToPageId: <long>
                      expiresAt: <dateTime>
                    rssData:
                      maxEntries: <integer>
                      timing:
                        deseruntc34: {}
                        Duis_772: {}
                        nulla_328: {}
                        idfd2: {}
                      url: <string>
                      hubspotBlogId: <long>
                      blogEmailType: <string>
                      blogImageMaxWidth: <integer>
                      rssEntryTemplate: <string>
                      useHeadlineAsSubject: <boolean>
                      blogLayout: <string>
                    isTransactional: <boolean>
                    isPublished: <boolean>
                    publishDate: <dateTime>
                    updatedAt: <dateTime>
                    createdAt: <dateTime>
                    deletedAt: <dateTime>
                    publishedAt: <dateTime>
                  - content:
                      templatePath: <string>
                      plainTextVersion: <string>
                      widgets:
                        dolore6: {}
                        veniamcf: {}
                      widgetContainers:
                        cillumb3: {}
                        consequat_e: {}
                      flexAreas:
                        pariaturcd6: {}
                        sitf: {}
                      styleSettings: {}
                      smartFields:
                        tempor_8e3: {}
                      themeSettingsValues:
                        esse_c47: {}
                        dolore_0f: {}
                    from:
                      fromName: <string>
                      replyTo: <string>
                      customReplyTo: <string>
                    id: <string>
                    name: <string>
                    sendOnPublish: <boolean>
                    state: AUTOMATED_DRAFT_ABVARIANT
                    subcategory: <string>
                    subject: <string>
                    to:
                      contactLists:
                        include:
                          - <long>
                          - <long>
                        exclude:
                          - <long>
                          - <long>
                      contactIds:
                        include:
                          - <long>
                          - <long>
                        exclude:
                          - <long>
                          - <long>
                      limitSendFrequency: <boolean>
                      suppressGraymail: <boolean>
                    createdById: <integer>
                    type: OPTIN_EMAIL
                    activeDomain: <string>
                    archived: <boolean>
                    folderId: <long>
                    feedbackSurveyId: <integer>
                    stats:
                      counters:
                        magna8: <long>
                      deviceBreakdown:
                        nona0d:
                          culpa6f2: <long>
                        ea_11:
                          velit8b: <long>
                          aute___: <long>
                      qualifierStats:
                        et634:
                          sedec: <long>
                      ratios:
                        dolor_0a: <number>
                        amet_a2: <number>
                        enime: <number>
                    testing:
                      testId: <long>
                      hoursToWait: <integer>
                      abSuccessMetric: CLICKS_BY_DELIVERED
                      abSampleSizeDefault: mab_master
                      abStatus: automated_variant
                      abTestPercentage: <integer>
                      abSamplingDefault: loser_variant
                    subscriptionDetails:
                      subscriptionId: <long>
                      preferencesGroupId: <long>
                      officeLocationId: <string>
                    updatedById: <integer>
                    publishedById: <integer>
                    language: sq-mk
                    campaign: <string>
                    webversion:
                      slug: <string>
                      domain: <string>
                      title: <string>
                      metaDescription: <string>
                      redirectToUrl: <string>
                      redirectToPageId: <long>
                      expiresAt: <dateTime>
                    rssData:
                      maxEntries: <integer>
                      timing:
                        dolore_e_: {}
                      url: <string>
                      hubspotBlogId: <long>
                      blogEmailType: <string>
                      blogImageMaxWidth: <integer>
                      rssEntryTemplate: <string>
                      useHeadlineAsSubject: <boolean>
                      blogLayout: <string>
                    isTransactional: <boolean>
                    isPublished: <boolean>
                    publishDate: <dateTime>
                    updatedAt: <dateTime>
                    createdAt: <dateTime>
                    deletedAt: <dateTime>
                    publishedAt: <dateTime>
                total: <integer>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
    post:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Create a new marketing email.
      description: Use this endpoint to create a new marketing email.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}/revisions/{revisionId}/restore:
    post:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Restore a revision of a marketing email
      description: >-
        Restores a previous revision of a marketing email. The current revision
        becomes old, and the restored revision is given a new version number.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
        - name: revisionId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}:
    get:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Get the details of a specified marketing email.
      description: Get the details for a marketing email.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: includeStats
          in: query
          schema:
            type: string
          description: Include statistics with email
          example: <boolean>
        - name: includedProperties
          in: query
          schema:
            type: string
          example: <string>
        - name: includedProperties
          in: query
          schema:
            type: string
          example: <string>
        - name: archived
          in: query
          schema:
            type: string
          description: Whether to return only results that have been archived.
          example: <boolean>
        - name: marketingCampaignNames
          in: query
          schema:
            type: string
          example: <boolean>
        - name: workflowNames
          in: query
          schema:
            type: string
          example: <boolean>
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
    delete:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Delete a marketing email.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: archived
          in: query
          schema:
            type: string
          description: Whether to return only results that have been archived.
          example: <boolean>
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
    patch:
      tags:
        - Marketing Emails API > Marketing Emails
      summary: Update a marketing email.
      description: Change properties of a marketing email.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archived
          in: query
          schema:
            type: string
          description: Whether to return only results that have been archived.
          example: <boolean>
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  templatePath: <string>
                  plainTextVersion: <string>
                  widgets:
                    Excepteur_8: {}
                    in15: {}
                    tempor_0: {}
                  widgetContainers:
                    fugiat_f8: {}
                    labore9: {}
                    in74c: {}
                  flexAreas:
                    commodoed3: {}
                    laborea8: {}
                    ut_5: {}
                  styleSettings: {}
                  smartFields:
                    culpaf3: {}
                    proident2f: {}
                  themeSettingsValues:
                    commodo2aa: {}
                from:
                  fromName: <string>
                  replyTo: <string>
                  customReplyTo: <string>
                id: <string>
                name: <string>
                sendOnPublish: <boolean>
                state: RSS_TO_EMAIL_DRAFT
                subcategory: <string>
                subject: <string>
                to:
                  contactLists:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  contactIds:
                    include:
                      - <long>
                      - <long>
                    exclude:
                      - <long>
                      - <long>
                  limitSendFrequency: <boolean>
                  suppressGraymail: <boolean>
                createdById: <integer>
                type: RESUBSCRIBE_EMAIL
                activeDomain: <string>
                archived: <boolean>
                folderId: <long>
                feedbackSurveyId: <integer>
                stats:
                  counters:
                    occaecat_35: <long>
                    esse_dae: <long>
                    aliquip_9b: <long>
                  deviceBreakdown:
                    ad_9:
                      ea586: <long>
                      amet_cce: <long>
                    exercitation_2f:
                      ut_2: <long>
                      eiusmod_d1: <long>
                  qualifierStats:
                    Duis_4:
                      qui_e3: <long>
                      laborisf: <long>
                    Ut_2:
                      doloref: <long>
                    sunt_3:
                      qui045: <long>
                      nostrud1: <long>
                  ratios:
                    eiusmode34: <number>
                    fugiat_41: <number>
                testing:
                  testId: <long>
                  hoursToWait: <integer>
                  abSuccessMetric: OPENS_BY_DELIVERED
                  abSampleSizeDefault: variant
                  abStatus: automated_master
                  abTestPercentage: <integer>
                  abSamplingDefault: master
                subscriptionDetails:
                  subscriptionId: <long>
                  preferencesGroupId: <long>
                  officeLocationId: <string>
                updatedById: <integer>
                publishedById: <integer>
                language: bo-in
                campaign: <string>
                webversion:
                  slug: <string>
                  domain: <string>
                  title: <string>
                  metaDescription: <string>
                  redirectToUrl: <string>
                  redirectToPageId: <long>
                  expiresAt: <dateTime>
                rssData:
                  maxEntries: <integer>
                  timing:
                    laborisfe_: {}
                    ipsum2: {}
                  url: <string>
                  hubspotBlogId: <long>
                  blogEmailType: <string>
                  blogImageMaxWidth: <integer>
                  rssEntryTemplate: <string>
                  useHeadlineAsSubject: <boolean>
                  blogLayout: <string>
                isTransactional: <boolean>
                isPublished: <boolean>
                publishDate: <dateTime>
                updatedAt: <dateTime>
                createdAt: <dateTime>
                deletedAt: <dateTime>
                publishedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "errors": [
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "est92": [
                          "<string>",
                          "<string>"
                        ],
                        "aliquad3": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "in": "<string>",
                      "code": "<string>",
                      "subCategory": "<string>",
                      "context": {
                        "et_b": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ],
                  "context": {
                    "sed42_": [
                      "<string>",
                      "<string>"
                    ],
                    "qui__42": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "velit02": "<string>"
                  }
                }
  /marketing/v3/emails/{emailId}/publish:
    post:
      tags:
        - Marketing Emails API
      summary: Publish or send a marketing email.
      description: >-
        If you have a Marketing Hub Enterprise account or the transactional
        email add-on, you can use this endpoint to publish an automated email or
        send/schedule a regular email.
      requestBody:
        content: {}
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "in_f3": [
                      "<string>",
                      "<string>"
                    ],
                    "sint__6": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "est5": "<string>",
                    "amet_b4e": "<string>",
                    "adab4": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "occaecat_7": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "commodoff": [
                          "<string>",
                          "<string>"
                        ],
                        "cillum5d": [
                          "<string>",
                          "<string>"
                        ],
                        "culpa_c": [
                          "<string>",
                          "<string>"
                        ],
                        "ina": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/emails/ab-test/create-variation:
    post:
      tags:
        - Marketing Emails API
      summary: Create an A/B test variation of a marketing email.
      description: >-
        Create a variation of a marketing email for an A/B test. The new
        variation will be created as a draft. If an active variation already
        exists, a new one won't be created.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                contentId: <string>
                variationName: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  smartFields:
                    dolor4de: {}
                  themeSettingsValues:
                    dolore_3a9: {}
                  flexAreas:
                    irure5: {}
                  widgets:
                    ad50b: {}
                  plainTextVersion: Lorem quis sint
                  templatePath: ipsum officia in
                  widgetContainers:
                    id_0: {}
                  styleSettings:
                    emailBodyPadding: Excepteur proident
                    colorPickerFavorite5: in ipsum veniam magna
                    bodyColor: in Excepteur
                    colorPickerFavorite6: sed voluptate
                    backgroundImage: deserunt est
                    emailBodyWidth: commodo dolore
                    secondaryFont: magna sed commodo enim
                    primaryAccentColor: amet mollit
                    colorPickerFavorite3: aliquip esse
                    primaryFontLineHeight: quis nostrud
                    colorPickerFavorite4: aliqua sed labore ullamco laboris
                    secondaryFontColor: dolore enim sint nulla
                    colorPickerFavorite1: cillum elit id
                    colorPickerFavorite2: ad in reprehenderit
                    bodyBorderColor: consequat adipisicing labore consectetur
                    bodyBorderWidth: -2897480
                    linksFont:
                      size: -21850777
                      color: minim officia fugiat laborum
                      underline: true
                      bold: false
                      italic: true
                      font: sint tempor ad nostrud
                    backgroundColor: elit laboris
                    backgroundImageType: 'id '
                    dividerStyleSettings:
                      color: {}
                      lineType: reprehenderit in id
                      height: 37893315
                    secondaryAccentColor: proident do veniam voluptate
                    secondaryFontLineHeight: Duis
                    primaryFontSize: 69367268
                    secondaryFontSize: 89866613
                    primaryFontColor: proident anim adipisicing ea
                    headingOneFont:
                      size: -56364228
                      color: dolore laborum sunt do ut
                      underline: false
                      bold: true
                      italic: false
                      font: in magna sint esse
                    primaryFont: sunt elit
                    headingTwoFont:
                      size: 27320681
                      color: ad
                      underline: false
                      bold: false
                      italic: false
                      font: est nostrud do Lorem
                    buttonStyleSettings:
                      backgroundColor: {}
                      fontStyle:
                        size: -26290660
                        color: esse voluptate
                        underline: true
                        bold: false
                        italic: true
                        font: sint consequat nisi
                      cornerRadius: -78024490
                    bodyBorderColorChoice: sunt est voluptate
                from:
                  customReplyTo: laborum sunt
                  fromName: Excepteur
                  replyTo: consectetur nisi ullamco officia Ut
                id: ullamco ut
                name: aliqua occae
                sendOnPublish: false
                state: DRAFT
                subcategory: dolore cupidatat dolor
                subject: enim in quis
                to:
                  limitSendFrequency: false
                  suppressGraymail: true
                  contactIds:
                    include:
                      - id deserunt fugiat veniam
                      - voluptate consequat
                    exclude:
                      - et eiusmod
                      - quis Duis
                  contactLists:
                    include:
                      - laborum nulla
                      - magna sunt ipsum deserunt cupidatat
                    exclude:
                      - consectetur velit dolor cupidatat Duis
                      - eiusmod
                feedbackSurveyId: culpa in ut aliquip dolor
                publishDate: '1956-08-19T04:42:41.747Z'
                isTransactional: false
                language: lkt-us
                type: OPTIN_FOLLOWUP_EMAIL
                businessUnitId: do eiusmod nostrud
                webversion:
                  domain: ullamco dolore in id nostrud
                  redirectToPageId: esse non qui voluptate
                  redirectToUrl: magna dolore
                  title: laborum nisi
                  metaDescription: reprehenderit ex eu
                  slug: sed amet Ut
                  expiresAt: '2023-07-22T08:47:36.366Z'
                workflowNames:
                  - quis esse
                  - ad in incididunt et
                archived: false
                createdAt: '1991-06-24T08:04:13.834Z'
                stats:
                  counters:
                    Excepteur3f7: 34246249
                  deviceBreakdown:
                    ipsuma7:
                      Lorem_d: 87380802
                      velit_26f: 41299676
                    ullamco_5:
                      sint73b: -1454320
                      dolor_4a: 16658635
                  qualifierStats:
                    non_7de:
                      dolor_9: -19347437
                      non_109: 90928796
                      consectetur_6d: -63325910
                      incididuntd: 68574952
                    aute_57:
                      labore4cc: 52749655
                      ut_f: 11717357
                      aliquipa_: 84287081
                    cillume5:
                      incididunt10: -92781785
                    elit0e1:
                      veniam_4: 74597948
                  ratios:
                    quicc: -9498520.397970632
                    sit6: -25074633.92610587
                    mollited6: 99210944.7586346
                createdById: in in
                updatedAt: '1958-08-29T16:49:43.082Z'
                rssData:
                  blogImageMaxWidth: -12492327
                  blogEmailType: occaecat eiusmod
                  hubspotBlogId: occaecat q
                  rssEntryTemplate: deserunt incididunt
                  timing:
                    Excepteuraf: {}
                    reprehenderit032: {}
                  maxEntries: -89194318
                  useHeadlineAsSubject: true
                  blogLayout: nisi in id
                  url: Excepteur culpa dolore veniam
                publishedAt: '1984-01-01T22:52:10.410Z'
                publishedById: id sunt ipsum sint com
                isPublished: true
                testing:
                  abSamplingDefault: master
                  abSampleSizeDefault: automated_master
                  abStatus: master
                  abTestPercentage: 38774587
                  hoursToWait: 6305454
                  testId: sint non anim
                  abSuccessMetric: CLICKS_BY_DELIVERED
                updatedById: nostrud sit ipsum ut
                folderId: -67722642
                subscriptionDetails:
                  officeLocationId: do enim
                  preferencesGroupId: adipisicing non deserunt
                  subscriptionId: minim amet ut velit
                deletedAt: '1993-12-16T22:48:26.981Z'
                activeDomain: exercitation et
                campaign: laboris
                campaignName: dolor sunt sint laborum laboris
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "in_f3": [
                      "<string>",
                      "<string>"
                    ],
                    "sint__6": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "est5": "<string>",
                    "amet_b4e": "<string>",
                    "adab4": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "occaecat_7": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "commodoff": [
                          "<string>",
                          "<string>"
                        ],
                        "cillum5d": [
                          "<string>",
                          "<string>"
                        ],
                        "culpa_c": [
                          "<string>",
                          "<string>"
                        ],
                        "ina": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/emails/{emailId}/unpublish:
    post:
      tags:
        - Marketing Emails API
      summary: Unpublish or cancel a marketing email.
      description: >-
        If you have a Marketing Hub Enterprise account or the transactional
        email add-on, you can use this endpoint to unpublish an automated email
        or cancel a regular email. If the email is already in the process of
        being sent, canceling might not be possible.
      requestBody:
        content: {}
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: emailId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "in_f3": [
                      "<string>",
                      "<string>"
                    ],
                    "sint__6": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "est5": "<string>",
                    "amet_b4e": "<string>",
                    "adab4": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "occaecat_7": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "commodoff": [
                          "<string>",
                          "<string>"
                        ],
                        "cillum5d": [
                          "<string>",
                          "<string>"
                        ],
                        "culpa_c": [
                          "<string>",
                          "<string>"
                        ],
                        "ina": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/emails/clone:
    post:
      tags:
        - Marketing Emails API
      summary: Clone a marketing email.
      description: >-
        This will create a duplicate email with the same properties as the
        original, with the exception of a unique ID.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: <string>
                cloneName: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                content:
                  smartFields:
                    dolor4de: {}
                  themeSettingsValues:
                    dolore_3a9: {}
                  flexAreas:
                    irure5: {}
                  widgets:
                    ad50b: {}
                  plainTextVersion: Lorem quis sint
                  templatePath: ipsum officia in
                  widgetContainers:
                    id_0: {}
                  styleSettings:
                    emailBodyPadding: Excepteur proident
                    colorPickerFavorite5: in ipsum veniam magna
                    bodyColor: in Excepteur
                    colorPickerFavorite6: sed voluptate
                    backgroundImage: deserunt est
                    emailBodyWidth: commodo dolore
                    secondaryFont: magna sed commodo enim
                    primaryAccentColor: amet mollit
                    colorPickerFavorite3: aliquip esse
                    primaryFontLineHeight: quis nostrud
                    colorPickerFavorite4: aliqua sed labore ullamco laboris
                    secondaryFontColor: dolore enim sint nulla
                    colorPickerFavorite1: cillum elit id
                    colorPickerFavorite2: ad in reprehenderit
                    bodyBorderColor: consequat adipisicing labore consectetur
                    bodyBorderWidth: -2897480
                    linksFont:
                      size: -21850777
                      color: minim officia fugiat laborum
                      underline: true
                      bold: false
                      italic: true
                      font: sint tempor ad nostrud
                    backgroundColor: elit laboris
                    backgroundImageType: 'id '
                    dividerStyleSettings:
                      color: {}
                      lineType: reprehenderit in id
                      height: 37893315
                    secondaryAccentColor: proident do veniam voluptate
                    secondaryFontLineHeight: Duis
                    primaryFontSize: 69367268
                    secondaryFontSize: 89866613
                    primaryFontColor: proident anim adipisicing ea
                    headingOneFont:
                      size: -56364228
                      color: dolore laborum sunt do ut
                      underline: false
                      bold: true
                      italic: false
                      font: in magna sint esse
                    primaryFont: sunt elit
                    headingTwoFont:
                      size: 27320681
                      color: ad
                      underline: false
                      bold: false
                      italic: false
                      font: est nostrud do Lorem
                    buttonStyleSettings:
                      backgroundColor: {}
                      fontStyle:
                        size: -26290660
                        color: esse voluptate
                        underline: true
                        bold: false
                        italic: true
                        font: sint consequat nisi
                      cornerRadius: -78024490
                    bodyBorderColorChoice: sunt est voluptate
                from:
                  customReplyTo: laborum sunt
                  fromName: Excepteur
                  replyTo: consectetur nisi ullamco officia Ut
                id: ullamco ut
                name: aliqua occae
                sendOnPublish: false
                state: DRAFT
                subcategory: dolore cupidatat dolor
                subject: enim in quis
                to:
                  limitSendFrequency: false
                  suppressGraymail: true
                  contactIds:
                    include:
                      - id deserunt fugiat veniam
                      - voluptate consequat
                    exclude:
                      - et eiusmod
                      - quis Duis
                  contactLists:
                    include:
                      - laborum nulla
                      - magna sunt ipsum deserunt cupidatat
                    exclude:
                      - consectetur velit dolor cupidatat Duis
                      - eiusmod
                feedbackSurveyId: culpa in ut aliquip dolor
                publishDate: '1956-08-19T04:42:41.747Z'
                isTransactional: false
                language: lkt-us
                type: OPTIN_FOLLOWUP_EMAIL
                businessUnitId: do eiusmod nostrud
                webversion:
                  domain: ullamco dolore in id nostrud
                  redirectToPageId: esse non qui voluptate
                  redirectToUrl: magna dolore
                  title: laborum nisi
                  metaDescription: reprehenderit ex eu
                  slug: sed amet Ut
                  expiresAt: '2023-07-22T08:47:36.366Z'
                workflowNames:
                  - quis esse
                  - ad in incididunt et
                archived: false
                createdAt: '1991-06-24T08:04:13.834Z'
                stats:
                  counters:
                    Excepteur3f7: 34246249
                  deviceBreakdown:
                    ipsuma7:
                      Lorem_d: 87380802
                      velit_26f: 41299676
                    ullamco_5:
                      sint73b: -1454320
                      dolor_4a: 16658635
                  qualifierStats:
                    non_7de:
                      dolor_9: -19347437
                      non_109: 90928796
                      consectetur_6d: -63325910
                      incididuntd: 68574952
                    aute_57:
                      labore4cc: 52749655
                      ut_f: 11717357
                      aliquipa_: 84287081
                    cillume5:
                      incididunt10: -92781785
                    elit0e1:
                      veniam_4: 74597948
                  ratios:
                    quicc: -9498520.397970632
                    sit6: -25074633.92610587
                    mollited6: 99210944.7586346
                createdById: in in
                updatedAt: '1958-08-29T16:49:43.082Z'
                rssData:
                  blogImageMaxWidth: -12492327
                  blogEmailType: occaecat eiusmod
                  hubspotBlogId: occaecat q
                  rssEntryTemplate: deserunt incididunt
                  timing:
                    Excepteuraf: {}
                    reprehenderit032: {}
                  maxEntries: -89194318
                  useHeadlineAsSubject: true
                  blogLayout: nisi in id
                  url: Excepteur culpa dolore veniam
                publishedAt: '1984-01-01T22:52:10.410Z'
                publishedById: id sunt ipsum sint com
                isPublished: true
                testing:
                  abSamplingDefault: master
                  abSampleSizeDefault: automated_master
                  abStatus: master
                  abTestPercentage: 38774587
                  hoursToWait: 6305454
                  testId: sint non anim
                  abSuccessMetric: CLICKS_BY_DELIVERED
                updatedById: nostrud sit ipsum ut
                folderId: -67722642
                subscriptionDetails:
                  officeLocationId: do enim
                  preferencesGroupId: adipisicing non deserunt
                  subscriptionId: minim amet ut velit
                deletedAt: '1993-12-16T22:48:26.981Z'
                activeDomain: exercitation et
                campaign: laboris
                campaignName: dolor sunt sint laborum laboris
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "in_f3": [
                      "<string>",
                      "<string>"
                    ],
                    "sint__6": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "est5": "<string>",
                    "amet_b4e": "<string>",
                    "adab4": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "occaecat_7": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "commodoff": [
                          "<string>",
                          "<string>"
                        ],
                        "cillum5d": [
                          "<string>",
                          "<string>"
                        ],
                        "culpa_c": [
                          "<string>",
                          "<string>"
                        ],
                        "ina": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events/upsert:
    post:
      tags:
        - Marketing Events API > Batch
      summary: Create or Update Multiple Marketing Events
      description: >-
        Upset multiple Marketing Event. If there is an existing Marketing event
        with the specified id, it will be updated; otherwise a new event will be
        created.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - createdAt: <dateTime>
                    eventName: <string>
                    eventOrganizer: <string>
                    id: <string>
                    updatedAt: <dateTime>
                    startDateTime: <dateTime>
                    customProperties:
                      - name: <string>
                        requestId: <string>
                        selectedByUser: <boolean>
                        selectedByUserTimestamp: <long>
                        source: EMAIL_INTEGRATION
                        sourceId: <string>
                        sourceLabel: <string>
                        sourceMetadata: <string>
                        sourceVid:
                          - <long>
                          - <long>
                        timestamp: <long>
                        value: <string>
                        updatedByUserId: <integer>
                        persistenceTimestamp: <long>
                        useTimestampAsPersistenceTimestamp: <boolean>
                        isLargeValue: <boolean>
                        dataSensitivity: none
                        isEncrypted: <boolean>
                        unit: <string>
                      - name: <string>
                        requestId: <string>
                        selectedByUser: <boolean>
                        selectedByUserTimestamp: <long>
                        source: CRM_UI_BULK_ACTION
                        sourceId: <string>
                        sourceLabel: <string>
                        sourceMetadata: <string>
                        sourceVid:
                          - <long>
                          - <long>
                        timestamp: <long>
                        value: <string>
                        updatedByUserId: <integer>
                        persistenceTimestamp: <long>
                        useTimestampAsPersistenceTimestamp: <boolean>
                        isLargeValue: <boolean>
                        dataSensitivity: standard
                        isEncrypted: <boolean>
                        unit: <string>
                    eventCancelled: <boolean>
                    eventUrl: <string>
                    eventDescription: <string>
                    eventType: <string>
                    endDateTime: <dateTime>
                  - createdAt: <dateTime>
                    eventName: <string>
                    eventOrganizer: <string>
                    id: <string>
                    updatedAt: <dateTime>
                    startDateTime: <dateTime>
                    customProperties:
                      - name: <string>
                        requestId: <string>
                        selectedByUser: <boolean>
                        selectedByUserTimestamp: <long>
                        source: BET_CRM_CONNECTOR
                        sourceId: <string>
                        sourceLabel: <string>
                        sourceMetadata: <string>
                        sourceVid:
                          - <long>
                          - <long>
                        timestamp: <long>
                        value: <string>
                        updatedByUserId: <integer>
                        persistenceTimestamp: <long>
                        useTimestampAsPersistenceTimestamp: <boolean>
                        isLargeValue: <boolean>
                        dataSensitivity: none
                        isEncrypted: <boolean>
                        unit: <string>
                      - name: <string>
                        requestId: <string>
                        selectedByUser: <boolean>
                        selectedByUserTimestamp: <long>
                        source: INTEGRATION
                        sourceId: <string>
                        sourceLabel: <string>
                        sourceMetadata: <string>
                        sourceVid:
                          - <long>
                          - <long>
                        timestamp: <long>
                        value: <string>
                        updatedByUserId: <integer>
                        persistenceTimestamp: <long>
                        useTimestampAsPersistenceTimestamp: <boolean>
                        isLargeValue: <boolean>
                        dataSensitivity: high
                        isEncrypted: <boolean>
                        unit: <string>
                    eventCancelled: <boolean>
                    eventUrl: <string>
                    eventDescription: <string>
                    eventType: <string>
                    endDateTime: <dateTime>
                startedAt: <dateTime>
                status: CANCELED
                numErrors: <integer>
                requestedAt: <dateTime>
                links:
                  laborumc: <string>
                errors:
                  - category: <string>
                    context:
                      commodof_5:
                        - <string>
                        - <string>
                      labore_c_:
                        - <string>
                        - <string>
                      laborum21:
                        - <string>
                        - <string>
                      non17f:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          magnac8:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          doloref:
                            - <string>
                            - <string>
                    links:
                      ipsum_17: <string>
                      dolore7c5: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
                  - category: <string>
                    context:
                      aliquip__a4:
                        - <string>
                        - <string>
                      exercitation_2:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          uta:
                            - <string>
                            - <string>
                          eiusmod_1:
                            - <string>
                            - <string>
                          ut02f:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          nullafe7:
                            - <string>
                            - <string>
                          in_5:
                            - <string>
                            - <string>
                          aute7:
                            - <string>
                            - <string>
                          cupidatat_c_:
                            - <string>
                            - <string>
                    links:
                      nulla5: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events/delete:
    post:
      tags:
        - Marketing Events API > Batch
      summary: Delete Multiple Marketing Events by External Ids
      description: Bulk delete a number of marketing events in HubSpot
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
      responses:
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/create:
    post:
      tags:
        - Marketing Events API > Attendance Subscriber State Changes
      summary: Record Participants by ContactId with Marketing Event External Ids
      description: >-
        Record a subscription state between multiple HubSpot contacts and a
        marketing event, using HubSpot contact ids.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: The account id associated with the marketing event
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event
          example: <string>
        - name: subscriberState
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The new subscriber state for the HubSpot contacts and the
            specified marketing event. For example: 'register', 'attend' or
            'cancel'.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - vid: <integer>
                  - vid: <integer>
                startedAt: <dateTime>
                status: PENDING
                numErrors: <integer>
                requestedAt: <dateTime>
                links:
                  cupidatat3_: <string>
                  ullamco3: <string>
                errors:
                  - category: <string>
                    context:
                      labore_a:
                        - <string>
                        - <string>
                      incididunt_405:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          mollitb:
                            - <string>
                            - <string>
                          autef_8:
                            - <string>
                            - <string>
                          non0:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          ex_10:
                            - <string>
                            - <string>
                          exercitation_cab:
                            - <string>
                            - <string>
                          nostrud17d:
                            - <string>
                            - <string>
                    links:
                      fugiat_a0: <string>
                      dolor507: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
                  - category: <string>
                    context:
                      adipisicing17:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          pariaturf:
                            - <string>
                            - <string>
                          enime:
                            - <string>
                            - <string>
                          culpa_83:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          in7:
                            - <string>
                            - <string>
                    links:
                      eu1f2: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/attendance/{externalEventId}/{subscriberState}/email-create:
    post:
      tags:
        - Marketing Events API > Attendance Subscriber State Changes
      summary: Record Participants by Email with Marketing Event External Ids
      description: >-
        Record a subscription state between multiple HubSpot contacts and a
        marketing event, using contact email addresses. If contact is not
        present it will be automatically created.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: The account id associated with the marketing event
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event
          example: <string>
        - name: subscriberState
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The new subscriber state for the HubSpot contacts and the
            specified marketing event. For example: 'register', 'attend' or
            'cancel'.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - email: <string>
                    vid: <integer>
                  - email: <string>
                    vid: <integer>
                startedAt: <dateTime>
                status: PENDING
                numErrors: <integer>
                requestedAt: <dateTime>
                links:
                  dolor_c: <string>
                  est_f8_: <string>
                  ullamco_4: <string>
                errors:
                  - category: <string>
                    context:
                      adf2:
                        - <string>
                        - <string>
                      nostrud_6c:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          aliqua_f9d:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          Duis_86:
                            - <string>
                            - <string>
                    links:
                      in_: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
                  - category: <string>
                    context:
                      velit_c3_:
                        - <string>
                        - <string>
                      dolor29:
                        - <string>
                        - <string>
                      iruref05:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          et52:
                            - <string>
                            - <string>
                          laborum6:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          occaecat__c:
                            - <string>
                            - <string>
                    links:
                      occaecat_1d: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/email-upsert:
    post:
      tags:
        - Marketing Events API > Subscriber State Changes
      summary: Record a subscriber state by contact email
      description: >-
        Record a subscription state between multiple HubSpot contacts and a
        marketing event, using contact email addresses. Note that the contact
        must already exist in HubSpot; a contact will not be created.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: (Required) The account id associated with the marketing event
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event
          example: <string>
        - name: subscriberState
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The new subscriber state for the HubSpot contacts and the
            specified marketing event
          example: <string>
      responses:
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/upsert:
    post:
      tags:
        - Marketing Events API > Subscriber State Changes
      summary: Record a subscriber state by contact ID
      description: >-
        Record a subscription state between multiple HubSpot contacts and a
        marketing event, using HubSpot contact ids. Note that the contact must
        already exist in HubSpot; a contact will not be create.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: (Required) The account id associated with the marketing event
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event
          example: <string>
        - name: subscriberState
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The new subscriber state for the HubSpot contacts and the
            specified marketing event
          example: <string>
      responses:
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events/{externalEventId}/complete:
    post:
      tags:
        - Marketing Events API > Marketing_Events_External
      summary: Mark a marketing event as completed
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: '(Required) '
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                eventName: <string>
                eventOrganizer: <string>
                startDateTime: <dateTime>
                customProperties:
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: BOT
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: high
                    isEncrypted: <boolean>
                    unit: <string>
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: SALES_MESSAGES
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: none
                    isEncrypted: <boolean>
                    unit: <string>
                eventCancelled: <boolean>
                eventUrl: <string>
                eventDescription: <string>
                eventType: <string>
                endDateTime: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events:
    post:
      tags:
        - Marketing Events API > Basic
      summary: Create a marketing event
      description: Creates a new marketing event in HubSpot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                eventName: <string>
                eventOrganizer: <string>
                externalAccountId: <string>
                externalEventId: <string>
                startDateTime: <dateTime>
                customProperties:
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: IMPORT
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: standard
                    isEncrypted: <boolean>
                    unit: <string>
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: COMPANY_FAMILIES
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: standard
                    isEncrypted: <boolean>
                    unit: <string>
                eventCancelled: <boolean>
                eventUrl: <string>
                eventDescription: <string>
                eventType: <string>
                endDateTime: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                eventName: <string>
                eventOrganizer: <string>
                startDateTime: <dateTime>
                customProperties:
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: BOT
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: standard
                    isEncrypted: <boolean>
                    unit: <string>
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: SALES_MESSAGES
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: none
                    isEncrypted: <boolean>
                    unit: <string>
                eventCancelled: <boolean>
                eventUrl: <string>
                eventDescription: <string>
                eventType: <string>
                endDateTime: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events/{externalEventId}/cancel:
    post:
      tags:
        - Marketing Events API > Basic
      summary: Mark a marketing event as cancelled
      description: Mark a marketing event as cancelled.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: (Required) The account id associated with the marketing event
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event to mark as cancelled
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                eventName: <string>
                eventOrganizer: <string>
                startDateTime: <dateTime>
                customProperties:
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: BOT
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: none
                    isEncrypted: <boolean>
                    unit: <string>
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: SALES_MESSAGES
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: none
                    isEncrypted: <boolean>
                    unit: <string>
                eventCancelled: <boolean>
                eventUrl: <string>
                eventDescription: <string>
                eventType: <string>
                endDateTime: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events/{externalEventId}:
    get:
      tags:
        - Marketing Events API > Basic
      summary: Get Marketing Event by External IDs
      description: >-
        Returns the details of the Marketing Event with the specified id, if one
        exists.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: (Required) The account id associated with the marketing event
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event to return
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                attendees: <integer>
                cancellations: <integer>
                createdAt: <dateTime>
                eventName: <string>
                eventOrganizer: <string>
                externalEventId: <string>
                id: <string>
                noShows: <integer>
                registrants: <integer>
                updatedAt: <dateTime>
                eventUrl: <string>
                eventType: <string>
                endDateTime: <dateTime>
                startDateTime: <dateTime>
                customProperties:
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: EXTENSION
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: high
                    isEncrypted: <boolean>
                    unit: <string>
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: EMAIL
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: none
                    isEncrypted: <boolean>
                    unit: <string>
                eventCancelled: <boolean>
                eventDescription: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    put:
      tags:
        - Marketing Events API > Basic
      summary: Create or update a marketing event
      description: >-
        Upsets a Marketing Event. If there is an existing Marketing event with
        the specified id, it will be updated; otherwise a new event will be
        created.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                eventName: <string>
                eventOrganizer: <string>
                externalAccountId: <string>
                externalEventId: <string>
                startDateTime: <dateTime>
                customProperties:
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: IMPORT
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: standard
                    isEncrypted: <boolean>
                    unit: <string>
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: COMPANY_FAMILIES
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: none
                    isEncrypted: <boolean>
                    unit: <string>
                eventCancelled: <boolean>
                eventUrl: <string>
                eventDescription: <string>
                eventType: <string>
                endDateTime: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event to upsert
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                createdAt: <dateTime>
                eventName: <string>
                eventOrganizer: <string>
                id: <string>
                updatedAt: <dateTime>
                startDateTime: <dateTime>
                customProperties:
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: SETTINGS
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: high
                    isEncrypted: <boolean>
                    unit: <string>
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: EMAIL_INTEGRATION
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: none
                    isEncrypted: <boolean>
                    unit: <string>
                eventCancelled: <boolean>
                eventUrl: <string>
                eventDescription: <string>
                eventType: <string>
                endDateTime: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    delete:
      tags:
        - Marketing Events API > Basic
      summary: Delete Marketing Event by External Ids
      description: >-
        Deletes an existing Marketing Event with the specified id, if one
        exists.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: (Required) The account id associated with the marketing event
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event to delete
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    patch:
      tags:
        - Marketing Events API > Basic
      summary: Update Marketing Event by External IDs
      description: >-
        Updates an existing Marketing Event with the specified id, if one
        exists.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalAccountId
          in: query
          schema:
            type: string
          description: (Required) The account id associated with the marketing event
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the marketing event to update
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                createdAt: <dateTime>
                eventName: <string>
                eventOrganizer: <string>
                id: <string>
                updatedAt: <dateTime>
                startDateTime: <dateTime>
                customProperties:
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: SETTINGS
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: standard
                    isEncrypted: <boolean>
                    unit: <string>
                  - name: <string>
                    requestId: <string>
                    selectedByUser: <boolean>
                    selectedByUserTimestamp: <long>
                    source: EMAIL_INTEGRATION
                    sourceId: <string>
                    sourceLabel: <string>
                    sourceMetadata: <string>
                    sourceVid:
                      - <long>
                      - <long>
                    timestamp: <long>
                    value: <string>
                    updatedByUserId: <integer>
                    persistenceTimestamp: <long>
                    useTimestampAsPersistenceTimestamp: <boolean>
                    isLargeValue: <boolean>
                    dataSensitivity: high
                    isEncrypted: <boolean>
                    unit: <string>
                eventCancelled: <boolean>
                eventUrl: <string>
                eventDescription: <string>
                eventType: <string>
                endDateTime: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/{appId}/settings:
    get:
      tags:
        - Marketing Events API > Settings
      summary: Retrieve the application settings
      description: Retrieve the current settings for the application.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: appId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the application to retrieve the settings for.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                appId: <integer>
                eventDetailsUrl: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    post:
      tags:
        - Marketing Events API > Settings
      summary: Update the application settings
      description: Create or update the current settings for the application.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                eventDetailsUrl: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: appId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The id of the application to update the settings for.
          example: <integer>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                appId: <integer>
                eventDetailsUrl: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/events/search:
    get:
      tags:
        - Marketing Events API > Search
      summary: Find App-Specific Marketing Events by External Event Id
      description: >-
        Search for marketing events that have an event id that starts with the
        query string
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: q
          in: query
          schema:
            type: string
          description: >-
            (Required) The id of the marketing event in the external event
            application
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - appId: <integer>
                    externalAccountId: <string>
                    externalEventId: <string>
                    objectId: <string>
                  - appId: <integer>
                    externalAccountId: <string>
                    externalEventId: <string>
                    objectId: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "mollit4b": [
                      "<string>",
                      "<string>"
                    ],
                    "dolore_d7b": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_f7": [
                      "<string>",
                      "<string>"
                    ],
                    "proident_5": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad034": "<string>",
                    "proident3e_": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "pariatur__": [
                          "<string>",
                          "<string>"
                        ],
                        "labore_2d": [
                          "<string>",
                          "<string>"
                        ],
                        "fugiat_ad": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "officiac6f": [
                          "<string>",
                          "<string>"
                        ],
                        "id_a1": [
                          "<string>",
                          "<string>"
                        ],
                        "ut_19": [
                          "<string>",
                          "<string>"
                        ],
                        "in4": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/participations/{marketingEventId}/breakdown:
    get:
      tags:
        - Marketing Events API
      summary: Read participations breakdown by Marketing Event internal identifier
      description: >-
        Read Marketing event's participations breakdown with optional filters by
        internal identifier marketingEventId.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: contactIdentifier
          in: query
          schema:
            type: string
          description: The identifier of the Contact. It may be email or internal id.
          example: <string>
        - name: state
          in: query
          schema:
            type: string
          description: >-
            The participation state value. It may be REGISTERED, CANCELLED,
            ATTENDED, NO_SHOW
          example: <string>
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            The limit for response size. The default value is 10, the max number
            is 100
          example: '10'
        - name: after
          in: query
          schema:
            type: string
          description: The cursor indicating the position of the last retrieved item.
          example: <string>
        - name: marketingEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal id of the marketing event in HubSpot.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - associations:
                      contact:
                        contactId: <string>
                        email: <string>
                        firstname: <string>
                        lastname: <string>
                      marketingEvent:
                        marketingEventId: <string>
                        name: <string>
                        externalAccountId: <string>
                        externalEventId: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      attendanceState: REGISTERED
                      occurredAt: <long>
                      attendancePercentage: <string>
                      attendanceDurationSeconds: <integer>
                  - associations:
                      contact:
                        contactId: <string>
                        email: <string>
                        firstname: <string>
                        lastname: <string>
                      marketingEvent:
                        marketingEventId: <string>
                        name: <string>
                        externalAccountId: <string>
                        externalEventId: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      attendanceState: NO_SHOW
                      occurredAt: <long>
                      attendancePercentage: <string>
                      attendanceDurationSeconds: <integer>
                total: <integer>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "non_729": [
                      "<string>",
                      "<string>"
                    ],
                    "nostrud3cd": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ut9": "<string>",
                    "sunt_88_": "<string>",
                    "eu5": "<string>",
                    "non__": "<string>"
                  },
                  "errors": [
                    {
                      "message": "in adipisicing",
                      "subCategory": "tempor sunt aliquip",
                      "code": "ullamco eu",
                      "in": "id cillum do sed",
                      "context": {
                        "sint5": [
                          "mollit anim proident",
                          "ut culpa"
                        ]
                      }
                    },
                    {
                      "message": "eiusmod incididunt proident",
                      "subCategory": "sint ut Excepteur",
                      "code": "Duis Lorem in reprehenderit",
                      "in": "consequat",
                      "context": {
                        "occaecataac": [
                          "minim fugiat cillum exer",
                          "amet dolor consequat"
                        ],
                        "non1": [
                          "non ex culpa",
                          ""
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/participations/{externalAccountId}/{externalEventId}:
    get:
      tags:
        - Marketing Events API
      summary: Read participations counters by Marketing Event external identifier
      description: >-
        Read Marketing event's participations counters by externalAccountId and
        externalEventId pair.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalAccountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The accountId that is associated with this marketing
            event in the external event application.
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The id of the marketing event in the external event
            application.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                attended: <integer>
                cancelled: <integer>
                noShows: <integer>
                registered: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "non_729": [
                      "<string>",
                      "<string>"
                    ],
                    "nostrud3cd": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ut9": "<string>",
                    "sunt_88_": "<string>",
                    "eu5": "<string>",
                    "non__": "<string>"
                  },
                  "errors": [
                    {
                      "message": "in adipisicing",
                      "subCategory": "tempor sunt aliquip",
                      "code": "ullamco eu",
                      "in": "id cillum do sed",
                      "context": {
                        "sint5": [
                          "mollit anim proident",
                          "ut culpa"
                        ]
                      }
                    },
                    {
                      "message": "eiusmod incididunt proident",
                      "subCategory": "sint ut Excepteur",
                      "code": "Duis Lorem in reprehenderit",
                      "in": "consequat",
                      "context": {
                        "occaecataac": [
                          "minim fugiat cillum exer",
                          "amet dolor consequat"
                        ],
                        "non1": [
                          "non ex culpa",
                          ""
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/participations/{marketingEventId}:
    get:
      tags:
        - Marketing Events API
      summary: Read participations counters by Marketing Event internal identifier
      description: >-
        Read Marketing event's participations counters by internal identifier
        marketingEventId.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: marketingEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal id of the marketing event in HubSpot.
          example: <long>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                attended: <integer>
                cancelled: <integer>
                noShows: <integer>
                registered: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "non_729": [
                      "<string>",
                      "<string>"
                    ],
                    "nostrud3cd": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ut9": "<string>",
                    "sunt_88_": "<string>",
                    "eu5": "<string>",
                    "non__": "<string>"
                  },
                  "errors": [
                    {
                      "message": "in adipisicing",
                      "subCategory": "tempor sunt aliquip",
                      "code": "ullamco eu",
                      "in": "id cillum do sed",
                      "context": {
                        "sint5": [
                          "mollit anim proident",
                          "ut culpa"
                        ]
                      }
                    },
                    {
                      "message": "eiusmod incididunt proident",
                      "subCategory": "sint ut Excepteur",
                      "code": "Duis Lorem in reprehenderit",
                      "in": "consequat",
                      "context": {
                        "occaecataac": [
                          "minim fugiat cillum exer",
                          "amet dolor consequat"
                        ],
                        "non1": [
                          "non ex culpa",
                          ""
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/participations/{externalAccountId}/{externalEventId}/breakdown:
    get:
      tags:
        - Marketing Events API
      summary: Read participations breakdown by Marketing Event external identifier
      description: >-
        Read Marketing event's participations breakdown with optional filters by
        externalAccountId and externalEventId pair.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: contactIdentifier
          in: query
          schema:
            type: string
          description: The identifier of the Contact. It may be email or internal id.
          example: <string>
        - name: state
          in: query
          schema:
            type: string
          description: >-
            The participation state value. It may be REGISTERED, CANCELLED,
            ATTENDED, NO_SHOW
          example: <string>
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            The limit for response size. The default value is 10, the max number
            is 100
          example: '10'
        - name: after
          in: query
          schema:
            type: string
          description: The cursor indicating the position of the last retrieved item.
          example: <string>
        - name: externalAccountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The accountId that is associated with this marketing
            event in the external event application.
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The id of the marketing event in the external event
            application.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - associations:
                      contact:
                        contactId: <string>
                        email: <string>
                        firstname: <string>
                        lastname: <string>
                      marketingEvent:
                        marketingEventId: <string>
                        name: <string>
                        externalAccountId: <string>
                        externalEventId: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      attendanceState: REGISTERED
                      occurredAt: <long>
                      attendancePercentage: <string>
                      attendanceDurationSeconds: <integer>
                  - associations:
                      contact:
                        contactId: <string>
                        email: <string>
                        firstname: <string>
                        lastname: <string>
                      marketingEvent:
                        marketingEventId: <string>
                        name: <string>
                        externalAccountId: <string>
                        externalEventId: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      attendanceState: NO_SHOW
                      occurredAt: <long>
                      attendancePercentage: <string>
                      attendanceDurationSeconds: <integer>
                total: <integer>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "non_729": [
                      "<string>",
                      "<string>"
                    ],
                    "nostrud3cd": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ut9": "<string>",
                    "sunt_88_": "<string>",
                    "eu5": "<string>",
                    "non__": "<string>"
                  },
                  "errors": [
                    {
                      "message": "in adipisicing",
                      "subCategory": "tempor sunt aliquip",
                      "code": "ullamco eu",
                      "in": "id cillum do sed",
                      "context": {
                        "sint5": [
                          "mollit anim proident",
                          "ut culpa"
                        ]
                      }
                    },
                    {
                      "message": "eiusmod incididunt proident",
                      "subCategory": "sint ut Excepteur",
                      "code": "Duis Lorem in reprehenderit",
                      "in": "consequat",
                      "context": {
                        "occaecataac": [
                          "minim fugiat cillum exer",
                          "amet dolor consequat"
                        ],
                        "non1": [
                          "non ex culpa",
                          ""
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/participations/contacts/{contactIdentifier}/breakdown:
    get:
      tags:
        - Marketing Events API
      summary: Read participations breakdown by Contact identifier
      description: Read Contact's participations by identifier - email or internal id.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: state
          in: query
          schema:
            type: string
          description: >-
            The participation state value. It may be REGISTERED, CANCELLED,
            ATTENDED, NO_SHOW
          example: <string>
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            The limit for response size. The default value is 10, the max number
            is 100
          example: '10'
        - name: after
          in: query
          schema:
            type: string
          description: The cursor indicating the position of the last retrieved item.
          example: <string>
        - name: contactIdentifier
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The identifier of the Contact. It may be email or
            internal id.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - associations:
                      contact:
                        contactId: <string>
                        email: <string>
                        firstname: <string>
                        lastname: <string>
                      marketingEvent:
                        marketingEventId: <string>
                        name: <string>
                        externalAccountId: <string>
                        externalEventId: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      attendanceState: REGISTERED
                      occurredAt: <long>
                      attendancePercentage: <string>
                      attendanceDurationSeconds: <integer>
                  - associations:
                      contact:
                        contactId: <string>
                        email: <string>
                        firstname: <string>
                        lastname: <string>
                      marketingEvent:
                        marketingEventId: <string>
                        name: <string>
                        externalAccountId: <string>
                        externalEventId: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      attendanceState: NO_SHOW
                      occurredAt: <long>
                      attendancePercentage: <string>
                      attendanceDurationSeconds: <integer>
                total: <integer>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "non_729": [
                      "<string>",
                      "<string>"
                    ],
                    "nostrud3cd": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ut9": "<string>",
                    "sunt_88_": "<string>",
                    "eu5": "<string>",
                    "non__": "<string>"
                  },
                  "errors": [
                    {
                      "message": "in adipisicing",
                      "subCategory": "tempor sunt aliquip",
                      "code": "ullamco eu",
                      "in": "id cillum do sed",
                      "context": {
                        "sint5": [
                          "mollit anim proident",
                          "ut culpa"
                        ]
                      }
                    },
                    {
                      "message": "eiusmod incididunt proident",
                      "subCategory": "sint ut Excepteur",
                      "code": "Duis Lorem in reprehenderit",
                      "in": "consequat",
                      "context": {
                        "occaecataac": [
                          "minim fugiat cillum exer",
                          "amet dolor consequat"
                        ],
                        "non1": [
                          "non ex culpa",
                          ""
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/associations/{marketingEventId}/lists/{listId}:
    put:
      tags:
        - Marketing Events API
      summary: Associate a list with a marketing event
      description: >-
        Associates a list with a marketing event by marketing event id and ILS
        list id
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: marketingEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal id of the marketing event in HubSpot.
          example: <string>
        - name: listId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ILS ID of the list.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "esse_0": [
                      "<string>",
                      "<string>"
                    ],
                    "euc": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad__0": "<string>"
                  },
                  "errors": [
                    {
                      "message": "Lorem irure",
                      "subCategory": "non in ipsum in ut",
                      "code": "mollit dolor",
                      "in": "do labore nulla",
                      "context": {
                        "est_7": [
                          "exercitation id adipisicing et",
                          "Duis dolor"
                        ]
                      }
                    },
                    {
                      "message": "mollit dolor do",
                      "subCategory": "dolor sed",
                      "code": "consectetur",
                      "in": "culpa ullamco do nisi",
                      "context": {
                        "do5d": [
                          "ut pariatur fugiat",
                          "elit est"
                        ],
                        "Lorem_5a": [
                          "dolo",
                          "tempor ipsum do Ut"
                        ],
                        "tempor9_e": [
                          "nostrud sit sed",
                          "quis commodo"
                        ]
                      }
                    }
                  ]
                }
    delete:
      tags:
        - Marketing Events API
      summary: Disassociate a list from a marketing event
      description: >-
        Disassociates a list from a marketing event by marketing event id and
        ILS list id
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: marketingEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal id of the marketing event in HubSpot.
          example: <string>
        - name: listId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ILS ID of the list.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "esse_0": [
                      "<string>",
                      "<string>"
                    ],
                    "euc": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad__0": "<string>"
                  },
                  "errors": [
                    {
                      "message": "Lorem irure",
                      "subCategory": "non in ipsum in ut",
                      "code": "mollit dolor",
                      "in": "do labore nulla",
                      "context": {
                        "est_7": [
                          "exercitation id adipisicing et",
                          "Duis dolor"
                        ]
                      }
                    },
                    {
                      "message": "mollit dolor do",
                      "subCategory": "dolor sed",
                      "code": "consectetur",
                      "in": "culpa ullamco do nisi",
                      "context": {
                        "do5d": [
                          "ut pariatur fugiat",
                          "elit est"
                        ],
                        "Lorem_5a": [
                          "dolo",
                          "tempor ipsum do Ut"
                        ],
                        "tempor9_e": [
                          "nostrud sit sed",
                          "quis commodo"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/associations/{externalAccountId}/{externalEventId}/lists:
    get:
      tags:
        - Marketing Events API
      summary: Get lists associated with a marketing event
      description: >-
        Gets lists associated with a marketing event by external account id and
        external event id
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalAccountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The accountId that is associated with this marketing
            event in the external event application.
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The id of the marketing event in the external event
            application.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - listId: <string>
                    listVersion: <integer>
                    name: <string>
                    objectTypeId: <string>
                    processingStatus: <string>
                    processingType: <string>
                    updatedById: <string>
                    filtersUpdatedAt: <dateTime>
                    createdAt: <dateTime>
                    deletedAt: <dateTime>
                    size: <long>
                    createdById: <string>
                    updatedAt: <dateTime>
                  - listId: <string>
                    listVersion: <integer>
                    name: <string>
                    objectTypeId: <string>
                    processingStatus: <string>
                    processingType: <string>
                    updatedById: <string>
                    filtersUpdatedAt: <dateTime>
                    createdAt: <dateTime>
                    deletedAt: <dateTime>
                    size: <long>
                    createdById: <string>
                    updatedAt: <dateTime>
                total: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "esse_0": [
                      "<string>",
                      "<string>"
                    ],
                    "euc": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad__0": "<string>"
                  },
                  "errors": [
                    {
                      "message": "Lorem irure",
                      "subCategory": "non in ipsum in ut",
                      "code": "mollit dolor",
                      "in": "do labore nulla",
                      "context": {
                        "est_7": [
                          "exercitation id adipisicing et",
                          "Duis dolor"
                        ]
                      }
                    },
                    {
                      "message": "mollit dolor do",
                      "subCategory": "dolor sed",
                      "code": "consectetur",
                      "in": "culpa ullamco do nisi",
                      "context": {
                        "do5d": [
                          "ut pariatur fugiat",
                          "elit est"
                        ],
                        "Lorem_5a": [
                          "dolo",
                          "tempor ipsum do Ut"
                        ],
                        "tempor9_e": [
                          "nostrud sit sed",
                          "quis commodo"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/associations/{externalAccountId}/{externalEventId}/lists/{listId}:
    put:
      tags:
        - Marketing Events API
      summary: Associate a list with a marketing event
      description: >-
        Associates a list with a marketing event by external account id,
        external event id, and ILS list id
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: externalAccountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The accountId that is associated with this marketing
            event in the external event application.
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The id of the marketing event in the external event
            application.
          example: <string>
        - name: listId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ILS ID of the list.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "esse_0": [
                      "<string>",
                      "<string>"
                    ],
                    "euc": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad__0": "<string>"
                  },
                  "errors": [
                    {
                      "message": "Lorem irure",
                      "subCategory": "non in ipsum in ut",
                      "code": "mollit dolor",
                      "in": "do labore nulla",
                      "context": {
                        "est_7": [
                          "exercitation id adipisicing et",
                          "Duis dolor"
                        ]
                      }
                    },
                    {
                      "message": "mollit dolor do",
                      "subCategory": "dolor sed",
                      "code": "consectetur",
                      "in": "culpa ullamco do nisi",
                      "context": {
                        "do5d": [
                          "ut pariatur fugiat",
                          "elit est"
                        ],
                        "Lorem_5a": [
                          "dolo",
                          "tempor ipsum do Ut"
                        ],
                        "tempor9_e": [
                          "nostrud sit sed",
                          "quis commodo"
                        ]
                      }
                    }
                  ]
                }
    delete:
      tags:
        - Marketing Events API
      summary: Disassociate a list from a marketing event
      description: >-
        Disassociates a list from a marketing event by external account id,
        external event id, and ILS list id
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: externalAccountId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The accountId that is associated with this marketing
            event in the external event application.
          example: <string>
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The id of the marketing event in the external event
            application.
          example: <string>
        - name: listId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ILS ID of the list.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "esse_0": [
                      "<string>",
                      "<string>"
                    ],
                    "euc": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad__0": "<string>"
                  },
                  "errors": [
                    {
                      "message": "Lorem irure",
                      "subCategory": "non in ipsum in ut",
                      "code": "mollit dolor",
                      "in": "do labore nulla",
                      "context": {
                        "est_7": [
                          "exercitation id adipisicing et",
                          "Duis dolor"
                        ]
                      }
                    },
                    {
                      "message": "mollit dolor do",
                      "subCategory": "dolor sed",
                      "code": "consectetur",
                      "in": "culpa ullamco do nisi",
                      "context": {
                        "do5d": [
                          "ut pariatur fugiat",
                          "elit est"
                        ],
                        "Lorem_5a": [
                          "dolo",
                          "tempor ipsum do Ut"
                        ],
                        "tempor9_e": [
                          "nostrud sit sed",
                          "quis commodo"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/associations/{marketingEventId}/lists:
    get:
      tags:
        - Marketing Events API
      summary: Get lists associated with a marketing event
      description: Gets lists associated with a marketing event by marketing event id
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: marketingEventId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal id of the marketing event in HubSpot.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - listId: <string>
                    listVersion: <integer>
                    name: <string>
                    objectTypeId: <string>
                    processingStatus: <string>
                    processingType: <string>
                    updatedById: <string>
                    filtersUpdatedAt: <dateTime>
                    createdAt: <dateTime>
                    deletedAt: <dateTime>
                    size: <long>
                    createdById: <string>
                    updatedAt: <dateTime>
                  - listId: <string>
                    listVersion: <integer>
                    name: <string>
                    objectTypeId: <string>
                    processingStatus: <string>
                    processingType: <string>
                    updatedById: <string>
                    filtersUpdatedAt: <dateTime>
                    createdAt: <dateTime>
                    deletedAt: <dateTime>
                    size: <long>
                    createdById: <string>
                    updatedAt: <dateTime>
                total: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "esse_0": [
                      "<string>",
                      "<string>"
                    ],
                    "euc": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ad__0": "<string>"
                  },
                  "errors": [
                    {
                      "message": "Lorem irure",
                      "subCategory": "non in ipsum in ut",
                      "code": "mollit dolor",
                      "in": "do labore nulla",
                      "context": {
                        "est_7": [
                          "exercitation id adipisicing et",
                          "Duis dolor"
                        ]
                      }
                    },
                    {
                      "message": "mollit dolor do",
                      "subCategory": "dolor sed",
                      "code": "consectetur",
                      "in": "culpa ullamco do nisi",
                      "context": {
                        "do5d": [
                          "ut pariatur fugiat",
                          "elit est"
                        ],
                        "Lorem_5a": [
                          "dolo",
                          "tempor ipsum do Ut"
                        ],
                        "tempor9_e": [
                          "nostrud sit sed",
                          "quis commodo"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/{objectId}:
    get:
      tags:
        - Marketing Events API
      summary: Get Marketing Event by objectId
      description: >-
        Returns the details of a Marketing Event with the specified objectId, if
        it exists.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: objectId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal ID of the marketing event in HubSpot
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                createdAt: <dateTime>
                customProperties:
                  - name: <string>
                    value: <string>
                  - name: <string>
                    value: <string>
                eventName: <string>
                objectId: <string>
                updatedAt: <dateTime>
                registrants: <integer>
                eventOrganizer: <string>
                eventUrl: <string>
                attendees: <integer>
                appInfo:
                  id: <string>
                  name: <string>
                eventType: <string>
                eventCompleted: <boolean>
                endDateTime: <dateTime>
                noShows: <integer>
                cancellations: <integer>
                startDateTime: <dateTime>
                eventCancelled: <boolean>
                externalEventId: <string>
                eventStatus: <string>
                eventDescription: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "pariatura0": [
                      "<string>",
                      "<string>"
                    ],
                    "et7": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "cupidatat753": "<string>"
                  },
                  "errors": [
                    {
                      "message": "laboris et",
                      "subCategory": "fugiat quis consequat exercitat",
                      "code": "officia minim",
                      "in": "ut in",
                      "context": {
                        "dolore_a": [
                          "dolore eiusmod veniam",
                          "culpa id"
                        ]
                      }
                    },
                    {
                      "message": "ut in nisi",
                      "subCategory": "elit est do aliqua",
                      "code": "adipisicing",
                      "in": "dolor officia esse",
                      "context": {
                        "id_c7": [
                          "sed amet proident reprehenderit laborum",
                          "in mollit adipisicing veniam irure"
                        ],
                        "eu5": [
                          "Ut deserunt amet",
                          "quis commodo in elit"
                        ]
                      }
                    }
                  ]
                }
    delete:
      tags:
        - Marketing Events API
      summary: Delete Marketing Event by objectId
      description: >-
        Deletes the existing Marketing Event with the specified objectId, if it
        exists.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: objectId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal ID of the marketing event in HubSpot
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "pariatura0": [
                      "<string>",
                      "<string>"
                    ],
                    "et7": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "cupidatat753": "<string>"
                  },
                  "errors": [
                    {
                      "message": "laboris et",
                      "subCategory": "fugiat quis consequat exercitat",
                      "code": "officia minim",
                      "in": "ut in",
                      "context": {
                        "dolore_a": [
                          "dolore eiusmod veniam",
                          "culpa id"
                        ]
                      }
                    },
                    {
                      "message": "ut in nisi",
                      "subCategory": "elit est do aliqua",
                      "code": "adipisicing",
                      "in": "dolor officia esse",
                      "context": {
                        "id_c7": [
                          "sed amet proident reprehenderit laborum",
                          "in mollit adipisicing veniam irure"
                        ],
                        "eu5": [
                          "Ut deserunt amet",
                          "quis commodo in elit"
                        ]
                      }
                    }
                  ]
                }
    patch:
      tags:
        - Marketing Events API
      summary: Update Marketing Event by objectId
      description: >-
        Updates the details of an existing Marketing Event identified by its
        objectId, if it exists.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                customProperties:
                  - dataSensitivity: standard
                    isEncrypted: false
                    name: ad eu sit
                    requestId: cillum tempor officia aliqua non
                    selectedByUser: true
                    selectedByUserTimestamp: 2439601
                    source: SETTINGS
                    sourceId: voluptate aliquip et veniam
                    sourceLabel: veniam
                    sourceMetadata: pariatur et
                    sourceVid:
                      - -12162090
                      - 31200963
                    timestamp: -12349682
                    unit: qui tempor ea ut Duis
                    value: dolor mollit nostrud adipisicing ex
                    updatedByUserId: 86279783
                    persistenceTimestamp: 61652612
                    useTimestampAsPersistenceTimestamp: true
                    isLargeValue: false
                  - dataSensitivity: high
                    isEncrypted: false
                    name: consectetur dolor nostrud eiusmod
                    requestId: dolor enim velit laboris
                    selectedByUser: true
                    selectedByUserTimestamp: 94688975
                    source: QUOTAS
                    sourceId: pariatur ad labore
                    sourceLabel: eu sed
                    sourceMetadata: in id incididunt
                    sourceVid:
                      - -88053271
                      - -57421916
                    timestamp: -19651588
                    unit: ex
                    value: magna laborum
                    updatedByUserId: 77419756
                    persistenceTimestamp: -66214616
                    useTimestampAsPersistenceTimestamp: true
                    isLargeValue: false
                startDateTime: <dateTime>
                eventCancelled: <boolean>
                eventOrganizer: <string>
                eventUrl: <string>
                eventDescription: <string>
                eventName: <string>
                eventType: <string>
                endDateTime: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: objectId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal ID of the marketing event in HubSpot
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                createdAt: <dateTime>
                customProperties:
                  - name: <string>
                    value: <string>
                  - name: <string>
                    value: <string>
                eventName: <string>
                objectId: <string>
                updatedAt: <dateTime>
                eventOrganizer: <string>
                eventUrl: <string>
                appInfo:
                  id: <string>
                  name: <string>
                eventType: <string>
                eventCompleted: <boolean>
                endDateTime: <dateTime>
                startDateTime: <dateTime>
                eventCancelled: <boolean>
                eventDescription: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "pariatura0": [
                      "<string>",
                      "<string>"
                    ],
                    "et7": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "cupidatat753": "<string>"
                  },
                  "errors": [
                    {
                      "message": "laboris et",
                      "subCategory": "fugiat quis consequat exercitat",
                      "code": "officia minim",
                      "in": "ut in",
                      "context": {
                        "dolore_a": [
                          "dolore eiusmod veniam",
                          "culpa id"
                        ]
                      }
                    },
                    {
                      "message": "ut in nisi",
                      "subCategory": "elit est do aliqua",
                      "code": "adipisicing",
                      "in": "dolor officia esse",
                      "context": {
                        "id_c7": [
                          "sed amet proident reprehenderit laborum",
                          "in mollit adipisicing veniam irure"
                        ],
                        "eu5": [
                          "Ut deserunt amet",
                          "quis commodo in elit"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/{objectId}/attendance/{subscriberState}/email-create:
    post:
      tags:
        - Marketing Events API
      summary: Record Participants by Email with Marketing Event Object Id
      description: >-
        Records the participation of multiple HubSpot contacts in a Marketing
        Event using their email addresses.


        If a contact does not exist, it will be automatically created. The
        contactProperties field is used exclusively for creating new contacts
        and will not update properties of existing contacts.


        Additional Functionality:

        - Adds a timeline event to the contacts.


        Allowed Properties:

        For the state "attend":

        - joinedAt

        - leftAt
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: objectId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal ID of the marketing event in HubSpot
          example: <string>
        - name: subscriberState
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The attendance state value. It may be 'register',
            'attend' or 'cancel'
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: '1991-04-25T22:37:06.614Z'
                results:
                  - email: et incididunt commodo reprehenderit
                    vid: -93190574
                  - email: dolore aliquip et in
                    vid: 42263716
                startedAt: '1945-04-19T07:34:28.696Z'
                status: CANCELED
                numErrors: 97462129
                requestedAt: '1986-02-06T01:58:39.245Z'
                links:
                  exercitation__55: dolor officia consectetur
                  mollit_589: dolore ut sunt minim
                errors:
                  - category: 'veniam consectetur '
                    context:
                      do_ca:
                        - in eiusmod l
                        - ipsum consequat id esse
                    errors:
                      - message: ex non
                        subCategory: aliqua Ut
                        code: ut sunt eiusmod dolore a
                        in: elit sunt dolor
                        context:
                          adipisicing19f:
                            - tempor in eiusmod
                            - ullamco amet aute ipsum consequat
                      - message: in officia
                        subCategory: exercitation cupidatat amet
                        code: dolore magna
                        in: 'n'
                        context:
                          esse1:
                            - elit s
                            - id ex et occaecat
                    links:
                      Lorem11: consequat aliquip cillum proident occaecat
                    message: ipsum
                    status: in Duis qui in
                    subCategory: {}
                    id: Duis
                  - category: eu dolor culpa sunt eiusmod
                    context:
                      culpa56:
                        - Duis qui amet anim
                        - commodo aliquip ipsum
                      officia4_:
                        - exercitation dolor
                        - ut Lorem aute sit
                    errors:
                      - message: irure deserunt dolore
                        subCategory: aliquip
                        code: ut
                        in: anim Lorem
                        context:
                          amet_e:
                            - nostrud Lorem in
                            - voluptate laborum in
                          ut7_c:
                            - labore nisi pariatur Lorem
                            - aliquip sint
                      - message: aute culpa eu
                        subCategory: ut Ut non est laborum
                        code: do tempor velit
                        in: sin
                        context:
                          laborum65:
                            - laboris
                            - nisi
                          officia_55:
                            - in
                            - dolore in
                    links:
                      consequat_28: qui culpa
                      minim6: dolor ullamco commodo
                      Lorem_f: sint anim sit
                    message: quis deserunt nulla dolore eu
                    status: eu cillum reprehenderit anim
                    subCategory: {}
                    id: eiusmod sint esse dolor exercitation
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "pariatura0": [
                      "<string>",
                      "<string>"
                    ],
                    "et7": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "cupidatat753": "<string>"
                  },
                  "errors": [
                    {
                      "message": "laboris et",
                      "subCategory": "fugiat quis consequat exercitat",
                      "code": "officia minim",
                      "in": "ut in",
                      "context": {
                        "dolore_a": [
                          "dolore eiusmod veniam",
                          "culpa id"
                        ]
                      }
                    },
                    {
                      "message": "ut in nisi",
                      "subCategory": "elit est do aliqua",
                      "code": "adipisicing",
                      "in": "dolor officia esse",
                      "context": {
                        "id_c7": [
                          "sed amet proident reprehenderit laborum",
                          "in mollit adipisicing veniam irure"
                        ],
                        "eu5": [
                          "Ut deserunt amet",
                          "quis commodo in elit"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/:
    get:
      tags:
        - Marketing Events API
      summary: Get all marketing event
      description: >-
        Returns all Marketing Events available on the portal, along with their
        properties, regardless of whether they were created manually or through
        the application.


        The marketing events returned by this endpoint are sorted by objectId.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: after
          in: query
          schema:
            type: string
          description: The cursor indicating the position of the last retrieved item.
          example: <string>
        - name: limit
          in: query
          schema:
            type: integer
          description: >-
            The limit for response size. The default value is 10, the max number
            is 100
          example: '10'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - createdAt: <dateTime>
                    customProperties:
                      - name: <string>
                        value: <string>
                      - name: <string>
                        value: <string>
                    eventName: <string>
                    objectId: <string>
                    updatedAt: <dateTime>
                    registrants: <integer>
                    eventOrganizer: <string>
                    eventUrl: <string>
                    attendees: <integer>
                    appInfo:
                      id: <string>
                      name: <string>
                    eventType: <string>
                    eventCompleted: <boolean>
                    endDateTime: <dateTime>
                    noShows: <integer>
                    cancellations: <integer>
                    startDateTime: <dateTime>
                    eventCancelled: <boolean>
                    externalEventId: <string>
                    eventStatus: <string>
                    eventDescription: <string>
                  - createdAt: <dateTime>
                    customProperties:
                      - name: <string>
                        value: <string>
                      - name: <string>
                        value: <string>
                    eventName: <string>
                    objectId: <string>
                    updatedAt: <dateTime>
                    registrants: <integer>
                    eventOrganizer: <string>
                    eventUrl: <string>
                    attendees: <integer>
                    appInfo:
                      id: <string>
                      name: <string>
                    eventType: <string>
                    eventCompleted: <boolean>
                    endDateTime: <dateTime>
                    noShows: <integer>
                    cancellations: <integer>
                    startDateTime: <dateTime>
                    eventCancelled: <boolean>
                    externalEventId: <string>
                    eventStatus: <string>
                    eventDescription: <string>
                paging:
                  next:
                    after: pariatur ea dolore dolor
                    link: consectetur cillum
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "pariatura0": [
                      "<string>",
                      "<string>"
                    ],
                    "et7": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "cupidatat753": "<string>"
                  },
                  "errors": [
                    {
                      "message": "laboris et",
                      "subCategory": "fugiat quis consequat exercitat",
                      "code": "officia minim",
                      "in": "ut in",
                      "context": {
                        "dolore_a": [
                          "dolore eiusmod veniam",
                          "culpa id"
                        ]
                      }
                    },
                    {
                      "message": "ut in nisi",
                      "subCategory": "elit est do aliqua",
                      "code": "adipisicing",
                      "in": "dolor officia esse",
                      "context": {
                        "id_c7": [
                          "sed amet proident reprehenderit laborum",
                          "in mollit adipisicing veniam irure"
                        ],
                        "eu5": [
                          "Ut deserunt amet",
                          "quis commodo in elit"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/{objectId}/attendance/{subscriberState}/create:
    post:
      tags:
        - Marketing Events API
      summary: Record Participants by ContactId with Marketing Event Object Id
      description: >-
        Records the participation of multiple HubSpot contacts in a Marketing
        Event using their HubSpot contact IDs.


        Additional Functionality:

        - Adds a timeline event to the contacts.


        Allowed Properties:

        For the state "attend":

        - joinedAt

        - leftAt
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: objectId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The internal id of the marketing event in HubSpot
          example: <string>
        - name: subscriberState
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The attendance state value. It may be 'register',
            'attend' or 'cancel'
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: '1961-09-14T23:36:23.743Z'
                results:
                  - vid: -15153545
                  - vid: 40759015
                startedAt: '1960-09-07T13:42:28.158Z'
                status: PROCESSING
                numErrors: -94527365
                requestedAt: '2019-07-03T21:36:26.692Z'
                links:
                  anim916: tempor culpa laboris in
                  dolor8d1: qui et aute
                errors:
                  - category: 'nostrud do '
                    context:
                      ad2:
                        - dolor in officia
                        - qui mollit ipsum quis in
                    errors:
                      - message: laborum
                        subCategory: in
                        code: al
                        in: consequat tempor labo
                        context:
                          id_08:
                            - dolor labore
                            - nisi in non ut
                          dolor_bca:
                            - dolor mollit sint in aliquip
                            - pariatur
                          sint_6c:
                            - eiusmod irure
                            - ut
                          id_a:
                            - laboris in Ut commodo
                            - eu quis sint dolore
                      - message: 'laborum in '
                        subCategory: nostrud velit pariatur ex laborum
                        code: do mollit sed
                        in: laborum exerc
                        context:
                          aliquip_9:
                            - sunt ad
                            - ullamco anim
                    links:
                      in_a: cu
                      commodo_7c: fugiat minim adipisicing
                    message: exercitation anim dolore
                    status: id adipisicing
                    subCategory: {}
                    id: ad qui sit
                  - category: dolor ad
                    context:
                      dolore4:
                        - elit exercitation
                        - nostrud dolore eu qui
                      quicdf:
                        - veniam quis
                        - dolor proident
                    errors:
                      - message: tempor Excepteur velit sint
                        subCategory: laborum ad voluptate laboris ad
                        code: reprehenderit veniam pariatur deserunt
                        in: dolore velit in
                        context:
                          sit4:
                            - sit incididunt Duis aute cupidatat
                            - 'ex quis '
                          amet6fc:
                            - veniam cupidatat
                            - eu
                          velit_a:
                            - cillum quis
                            - veniam
                      - message: dolor nulla cupidatat
                        subCategory: do laboris cillum eiusmod
                        code: amet
                        in: voluptate et deserunt sit eiusmod
                        context:
                          sit_6e:
                            - commodo in est enim
                            - veniam
                          Ut60:
                            - culpa cillum aute Duis do
                            - est mi
                    links:
                      sed_195: nulla commodo eu
                    message: nisi exercitation
                    status: anim
                    subCategory: {}
                    id: qui tempor laborum dolore
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "pariatura0": [
                      "<string>",
                      "<string>"
                    ],
                    "et7": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "cupidatat753": "<string>"
                  },
                  "errors": [
                    {
                      "message": "laboris et",
                      "subCategory": "fugiat quis consequat exercitat",
                      "code": "officia minim",
                      "in": "ut in",
                      "context": {
                        "dolore_a": [
                          "dolore eiusmod veniam",
                          "culpa id"
                        ]
                      }
                    },
                    {
                      "message": "ut in nisi",
                      "subCategory": "elit est do aliqua",
                      "code": "adipisicing",
                      "in": "dolor officia esse",
                      "context": {
                        "id_c7": [
                          "sed amet proident reprehenderit laborum",
                          "in mollit adipisicing veniam irure"
                        ],
                        "eu5": [
                          "Ut deserunt amet",
                          "quis commodo in elit"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/{externalEventId}/identifiers:
    get:
      tags:
        - Marketing Events API
      summary: Find Marketing Events by externalEventId
      description: >-
        This endpoint searches the portal for all Marketing Events whose
        externalEventId matches the value provided in the request.


        It retrieves the objectId and additional event details for each matching
        Marketing Event.


        Since multiple Marketing Events can have the same externalEventId, the
        endpoint returns all matching results.


        Note: Marketing Events become searchable by externalEventId a few
        minutes after creation.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: externalEventId
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The id of the marketing event in the external event
            application.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - externalEventId: <string>
                    marketingEventName: <string>
                    objectId: <string>
                    externalAccountId: <string>
                    appInfo:
                      id: <string>
                      name: <string>
                  - externalEventId: <string>
                    marketingEventName: <string>
                    objectId: <string>
                    externalAccountId: <string>
                    appInfo:
                      id: <string>
                      name: <string>
                total: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "pariatura0": [
                      "<string>",
                      "<string>"
                    ],
                    "et7": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "cupidatat753": "<string>"
                  },
                  "errors": [
                    {
                      "message": "laboris et",
                      "subCategory": "fugiat quis consequat exercitat",
                      "code": "officia minim",
                      "in": "ut in",
                      "context": {
                        "dolore_a": [
                          "dolore eiusmod veniam",
                          "culpa id"
                        ]
                      }
                    },
                    {
                      "message": "ut in nisi",
                      "subCategory": "elit est do aliqua",
                      "code": "adipisicing",
                      "in": "dolor officia esse",
                      "context": {
                        "id_c7": [
                          "sed amet proident reprehenderit laborum",
                          "in mollit adipisicing veniam irure"
                        ],
                        "eu5": [
                          "Ut deserunt amet",
                          "quis commodo in elit"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/batch/update:
    post:
      tags:
        - Marketing Events API
      summary: Update Multiple Marketing Events by ObjectId
      description: >-
        Updates multiple Marketing Events on the portal based on their objectId,
        if they exist.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inputs:
                  - customProperties:
                      - dataSensitivity: high
                        isEncrypted: true
                        name: aliqua occae
                        requestId: aliquip mollit Lorem
                        selectedByUser: false
                        selectedByUserTimestamp: 5639591
                        source: BOT
                        sourceId: ex anim
                        sourceLabel: in Excepteur
                        sourceMetadata: ea mollit sint
                        sourceVid:
                          - -69737229
                          - 18188284
                        timestamp: 21188866
                        unit: incididunt aliquip
                        value: irure Ut
                        updatedByUserId: -69233886
                        persistenceTimestamp: 24941094
                        useTimestampAsPersistenceTimestamp: true
                        isLargeValue: true
                      - dataSensitivity: standard
                        isEncrypted: true
                        name: anim culpa exercitation cillum eiusmod
                        requestId: m
                        selectedByUser: true
                        selectedByUserTimestamp: -55616552
                        source: BIDEN
                        sourceId: ut
                        sourceLabel: cupidatat exercitation amet
                        sourceMetadata: sunt cillum
                        sourceVid:
                          - 99614673
                          - -94823355
                        timestamp: -32241188
                        unit: consequat irure proident Excepteur
                        value: Ut sunt mollit proident
                        updatedByUserId: 74551606
                        persistenceTimestamp: -59836287
                        useTimestampAsPersistenceTimestamp: false
                        isLargeValue: false
                    objectId: <string>
                    startDateTime: <dateTime>
                    eventCancelled: <boolean>
                    eventOrganizer: <string>
                    eventUrl: <string>
                    eventDescription: <string>
                    eventName: <string>
                    eventType: <string>
                    endDateTime: <dateTime>
                  - customProperties:
                      - dataSensitivity: high
                        isEncrypted: true
                        name: laborum ad aute
                        requestId: magna nisi dolore in
                        selectedByUser: false
                        selectedByUserTimestamp: 92665611
                        source: UNKNOWN
                        sourceId: aliquip sint volupt
                        sourceLabel: enim officia
                        sourceMetadata: occaecat pr
                        sourceVid:
                          - -93700505
                          - 69604251
                        timestamp: -98936029
                        unit: nulla Duis
                        value: et reprehenderit exercitation
                        updatedByUserId: -64777845
                        persistenceTimestamp: 36267352
                        useTimestampAsPersistenceTimestamp: false
                        isLargeValue: true
                      - dataSensitivity: none
                        isEncrypted: false
                        name: laboris esse c
                        requestId: ipsum ut fugiat sunt
                        selectedByUser: false
                        selectedByUserTimestamp: -68836466
                        source: COMPANY_FAMILIES
                        sourceId: nostrud consectetur
                        sourceLabel: magna ex proident
                        sourceMetadata: laboris exercitation
                        sourceVid:
                          - -41934701
                          - -79814024
                        timestamp: 94328930
                        unit: culpa ut aliqua
                        value: est qui anim ven
                        updatedByUserId: 78693376
                        persistenceTimestamp: 43493151
                        useTimestampAsPersistenceTimestamp: true
                        isLargeValue: true
                    objectId: <string>
                    startDateTime: <dateTime>
                    eventCancelled: <boolean>
                    eventOrganizer: <string>
                    eventUrl: <string>
                    eventDescription: <string>
                    eventName: <string>
                    eventType: <string>
                    endDateTime: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - createdAt: '1963-01-28T10:39:28.191Z'
                    customProperties:
                      - name: quis
                        value: dolore aliquip Lorem
                      - name: cillum aliqua
                        value: et consequat Exce
                    eventName: ut amet est
                    objectId: dolor
                    updatedAt: '1962-11-04T01:27:25.654Z'
                    eventOrganizer: anim dolor
                    eventUrl: dolore consequat in
                    appInfo:
                      id: aute exercitation
                      name: laboris ullamco
                    eventType: sint magna dolore
                    eventCompleted: true
                    endDateTime: '1951-02-21T17:24:30.182Z'
                    startDateTime: '2018-06-19T09:50:18.865Z'
                    eventCancelled: true
                    eventDescription: in id sunt mollit
                  - createdAt: '1957-07-05T07:04:38.576Z'
                    customProperties:
                      - name: adipisicing anim
                        value: sit tempor occaecat
                      - name: Duis dolor dolore
                        value: enim consequat magna qui
                    eventName: 'consequat fugiat '
                    objectId: sed consectetur in irure
                    updatedAt: '1998-08-20T14:36:51.415Z'
                    eventOrganizer: mollit adipisicing
                    eventUrl: a
                    appInfo:
                      id: deserunt elit quis ex in
                      name: quis esse amet
                    eventType: do aute sunt eiusmod
                    eventCompleted: false
                    endDateTime: '2001-12-28T18:15:09.040Z'
                    startDateTime: '1967-10-16T16:51:51.406Z'
                    eventCancelled: true
                    eventDescription: Excepteur esse
                startedAt: <dateTime>
                status: CANCELED
                requestedAt: <dateTime>
                links:
                  in_9de: <string>
                  ut_9e: <string>
        '207':
          description: Multi-Status (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - createdAt: '1976-07-10T17:00:59.628Z'
                    customProperties:
                      - name: laboris cillum mollit
                        value: 'laborum '
                      - name: amet dolore commodo et
                        value: labore nostrud aliquip ex
                    eventName: culpa Duis laborum
                    objectId: 'sed elit '
                    updatedAt: '1988-07-01T17:27:36.352Z'
                    eventOrganizer: ut officia
                    eventUrl: occaecat veniam tempor
                    appInfo:
                      id: Excepteur aliqua magna ipsum
                      name: proident Ut adipisicing ipsum ad
                    eventType: non cupidatat
                    eventCompleted: false
                    endDateTime: '2009-06-04T15:20:38.199Z'
                    startDateTime: '2024-07-02T10:57:54.385Z'
                    eventCancelled: false
                    eventDescription: esse nisi do Lorem dolor
                  - createdAt: '2019-04-03T23:15:48.683Z'
                    customProperties:
                      - name: tempor id
                        value: ex veniam laborum do
                      - name: sunt laborum
                        value: cillum culpa irure
                    eventName: nisi dolore proident sit minim
                    objectId: in
                    updatedAt: '1984-05-16T04:40:09.972Z'
                    eventOrganizer: irure consequat cill
                    eventUrl: et est aute in
                    appInfo:
                      id: enim
                      name: exercitation elit
                    eventType: ut dolore ut nulla
                    eventCompleted: true
                    endDateTime: '1958-02-17T20:39:49.064Z'
                    startDateTime: '1949-09-04T03:14:48.369Z'
                    eventCancelled: false
                    eventDescription: Lorem mollit nisi
                startedAt: <dateTime>
                status: CANCELED
                numErrors: <integer>
                requestedAt: <dateTime>
                links:
                  dolor5: <string>
                  sit79: <string>
                errors:
                  - category: cillum
                    context:
                      mollit_c:
                        - ut ut in
                        - cillum aute nulla dolore mi
                    errors:
                      - message: dolor i
                        subCategory: ma
                        code: Lorem
                        in: in deserunt do
                        context:
                          eu3:
                            - id tempor
                            - deserunt
                      - message: in ullamco enim exercitation
                        subCategory: ex eiusmod occaecat veniam
                        code: sit quis
                        in: in irure aliqua sed Excepteur
                        context:
                          sed37e:
                            - laborum nulla in tempor
                            - deserunt sint anim
                          commodo_c_:
                            - deserunt in
                            - ullamco nisi
                    links:
                      ipsum614: enim aute
                    message: officia
                    status: minim aliquip
                    subCategory: {}
                    id: cupidatat velit ex ut
                  - category: consectetur Lorem do reprehenderit ex
                    context:
                      exercitationc2:
                        - commodo magna
                        - minim fugiat dolore
                    errors:
                      - message: anim mollit amet
                        subCategory: labore c
                        code: reprehenderit occaecat sunt consequat ex
                        in: ex Duis reprehenderit est
                        context:
                          sint1:
                            - nisi in
                            - officia incididunt
                          ut3cb:
                            - et
                            - mollit
                      - message: nisi
                        subCategory: nulla proident sint
                        code: aute do exercitation
                        in: ipsum ad sed
                        context:
                          Ut_2bc:
                            - pariatur officia
                            - magna ut reprehenderit
                    links:
                      officia_1b: eiusmod exercitation Ut
                      sint_5bb: dolore
                    message: id dolore culpa dolore quis
                    status: sint sunt nulla et
                    subCategory: {}
                    id: Duis
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "cillum_c3": [
                      "<string>",
                      "<string>"
                    ],
                    "nulla_89f": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "do_c1": "<string>",
                    "elit_ae": "<string>"
                  },
                  "errors": [
                    {
                      "message": "aute sit Ut non magna",
                      "subCategory": "est irure Excepteur",
                      "code": "Lorem dolor amet",
                      "in": "Lorem",
                      "context": {
                        "deserunt57f": [
                          "ut id",
                          "enim culpa"
                        ]
                      }
                    },
                    {
                      "message": "amet consectetur Duis dolor",
                      "subCategory": "dolor ullamco",
                      "code": "Excepteur et velit nisi",
                      "in": "nisi eiusmod",
                      "context": {
                        "sintfbd": [
                          "incididunt in laboris",
                          "est non nulla ad ea"
                        ],
                        "minim_4": [
                          "est",
                          "nostrud"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/marketing-events/batch/archive:
    post:
      tags:
        - Marketing Events API
      summary: Delete Multiple Marketing Events by ObjectId
      description: >-
        Deletes multiple Marketing Events from the portal based on their
        objectId, if they exist.


        Responses:

        204: Returned if all specified Marketing Events were successfully
        deleted.

        207: Returned if some objectIds did not correspond to any existing
        Marketing Events.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inputs:
                  - objectId: <string>
                  - objectId: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "cillum_c3": [
                      "<string>",
                      "<string>"
                    ],
                    "nulla_89f": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "do_c1": "<string>",
                    "elit_ae": "<string>"
                  },
                  "errors": [
                    {
                      "message": "aute sit Ut non magna",
                      "subCategory": "est irure Excepteur",
                      "code": "Lorem dolor amet",
                      "in": "Lorem",
                      "context": {
                        "deserunt57f": [
                          "ut id",
                          "enim culpa"
                        ]
                      }
                    },
                    {
                      "message": "amet consectetur Duis dolor",
                      "subCategory": "dolor ullamco",
                      "code": "Excepteur et velit nisi",
                      "in": "nisi eiusmod",
                      "context": {
                        "sintfbd": [
                          "incididunt in laboris",
                          "est non nulla ad ea"
                        ],
                        "minim_4": [
                          "est",
                          "nostrud"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v4/email/single-send:
    post:
      tags:
        - Single-Send API > Single_Send
      summary: post-/marketing/v4/email/single-send
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                emailId: <long>
                message:
                  to: <string>
                  cc:
                    - <string>
                    - <string>
                  sendId: <string>
                  bcc:
                    - <string>
                    - <string>
                  replyTo:
                    - <string>
                    - <string>
                  from: <string>
                customProperties:
                  minim_a1: {}
                  ute03: {}
                contactProperties:
                  sint_870: <string>
                  quis_c0: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: PROCESSING
                statusId: <string>
                eventId:
                  created: <dateTime>
                  id: <uuid>
                completedAt: <dateTime>
                sendResult: PREVIOUSLY_BOUNCED
                requestedAt: <dateTime>
                startedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "exercitation92": [
                      "<string>",
                      "<string>"
                    ],
                    "Excepteur77e": [
                      "<string>",
                      "<string>"
                    ],
                    "irure33": [
                      "<string>",
                      "<string>"
                    ],
                    "incididunte": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "Lorem_cd": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "culpa_9e": [
                          "<string>",
                          "<string>"
                        ],
                        "aliqua78": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "occaecat_3e": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/:
    post:
      tags:
        - Campaigns API > Basic
      summary: Create a campaign
      description: >-
        Create a campaign with the given properties and return the campaign
        object, including the campaignGuid and created properties. 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                properties:
                  enim_fee: <string>
                  aliquip1: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                createdAt: <dateTime>
                id: <string>
                properties:
                  nostrudb: <string>
                  animc23: <string>
                updatedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    get:
      tags:
        - Campaigns API > Search
      summary: Campaign search
      description: >-
        This endpoint allows users to search for and return a page of campaigns
        based on various query parameters. Users can filter by name, sort, and
        paginate through the campaigns, as well as control which properties are
        returned in the response.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            The field by which to sort the results. Allowed values are hs_name,
            createdAt, updatedAt. An optional '-' before the property name can
            denote descending order

            Default: hs_name
          example: <string>
        - name: after
          in: query
          schema:
            type: string
          description: >-
            A cursor for pagination. If provided, the results will start after
            the given cursor.

            Example: NTI1Cg%3D%3D
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: >-
            The maximum number of results to return. Allowed values range from 1
            to 100

            Default: 50
          example: <integer>
        - name: name
          in: query
          schema:
            type: string
          description: >-
            A filter to return campaigns whose names contain the specified
            substring. This allows partial matching of campaign names, returning
            all campaigns that include the given substring in their name. If
            this parameter is not provided, the search will return all campaigns
          example: <string>
        - name: properties
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of the properties to be returned in the
            response. If any of the specified properties has empty value on the
            requested object(s), they will be ignored and not returned in
            response. If this parameter is empty, the response will include an
            empty properties map
          example: <string>
        - name: properties
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of the properties to be returned in the
            response. If any of the specified properties has empty value on the
            requested object(s), they will be ignored and not returned in
            response. If this parameter is empty, the response will include an
            empty properties map
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      mollit_a54: <string>
                    updatedAt: <dateTime>
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      Lorem_9: <string>
                      exercitation_e4: <string>
                      ipsume: <string>
                    updatedAt: <dateTime>
                total: <integer>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/{campaignGuid}:
    get:
      tags:
        - Campaigns API > Basic
      summary: Read a campaign
      description: >-
        Get a campaign identified by a specific campaignGuid with the given
        properties. Along with the campaign information, it also returns
        information about assets. Depending on the query parameters used, this
        can also be used to return information about the corresponding assets'
        metrics. Metrics are available only if startDate and endDate are
        provided.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: startDate
          in: query
          schema:
            type: string
          description: >-
            Start date to fetch asset metrics, formatted as YYYY-MM-DD. This
            date is used to fetch the metrics associated with the assets for a
            specified period.

            If not provided, no asset metrics will be fetched.
          example: <string>
        - name: endDate
          in: query
          schema:
            type: string
          description: |2-
             End date to fetch asset metrics, formatted as YYYY-MM-DD. This date is used to fetch the metrics associated with the assets for a specified period.
            If not provided, no asset metrics will be fetched.
          example: <string>
        - name: properties
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of the properties to be returned in the
            response. If any of the specified properties has empty value on the
            requested object, they will be ignored and not returned in response.
            If this parameter is empty, the response will include an empty
            properties map.
          example: <string>
        - name: properties
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of the properties to be returned in the
            response. If any of the specified properties has empty value on the
            requested object, they will be ignored and not returned in response.
            If this parameter is empty, the response will include an empty
            properties map.
          example: <string>
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                assets:
                  irurea:
                    results:
                      - id: <string>
                        metrics:
                          culpa9: <number>
                          incididunt_7: <number>
                          irurebf: <number>
                        name: <string>
                      - id: <string>
                        metrics:
                          non__: <number>
                        name: <string>
                    paging:
                      next:
                        after: <string>
                        link: <string>
                      prev:
                        before: <string>
                        link: <string>
                createdAt: <dateTime>
                id: <string>
                properties:
                  do49: <string>
                updatedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    delete:
      tags:
        - Campaigns API > Basic
      summary: 'Delete campaign '
      description: >-
        Delete a specified campaign from the system.

        This call will return a 204 No Content response regardless of whether
        the campaignGuid provided corresponds to an existing campaign or not.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    patch:
      tags:
        - Campaigns API > Basic
      summary: Update campaign
      description: >
        Perform a partial update of a campaign identified by the specified
        campaignGuid. Provided property values will be overwritten. Read-only
        and non-existent properties will cause 400 error.

        If an empty string is passed for any property in the Batch Update, it
        will reset that property's value.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                properties:
                  enim_fee: <string>
                  aliquip1: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: |
            (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                createdAt: <dateTime>
                id: <string>
                properties:
                  nostrudb: <string>
                  animc23: <string>
                updatedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/batch/read:
    post:
      tags:
        - Campaigns API > Batch
      summary: Read a batch of campaigns
      description: >
        This endpoint reads a batch of campaigns based on the provided input
        data and returns the campaigns along with their associated assets. 

        The maximum number of items in a batch request is 50.

        The campaigns in the response are not guaranteed to be in the same order
        as they were provided in the request.

        If duplicate campaign IDs are provided in the request, duplicates will
        be ignored. The response will include only unique IDs and will be
        returned without duplicates.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inputs:
                  - id: <string>
                  - id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: startDate
          in: query
          schema:
            type: string
          description: >
            Start date to fetch asset metrics, formatted as YYYY-MM-DD. This
            date is used to fetch the metrics associated with the assets for a
            specified period. If not provided, no asset metrics will be fetched.
          example: <string>
        - name: endDate
          in: query
          schema:
            type: string
          description: >-
            End date to fetch asset metrics, formatted as YYYY-MM-DD. This date
            is used to fetch the metrics associated with the assets for a
            specified period. If not provided, no asset metrics will be fetched.
          example: <string>
        - name: properties
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of the properties to be returned in the
            response. If any of the specified properties has empty value on the
            requested object(s), they will be ignored and not returned in
            response. If this parameter is empty, the response will include an
            empty properties map.
          example: <string>
        - name: properties
          in: query
          schema:
            type: string
          description: >-
            A comma-separated list of the properties to be returned in the
            response. If any of the specified properties has empty value on the
            requested object(s), they will be ignored and not returned in
            response. If this parameter is empty, the response will include an
            empty properties map.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - assets:
                      dolor_ef8:
                        results:
                          - id: <string>
                            metrics:
                              ipsum_85: <number>
                              nullad4: <number>
                              elitf0: <number>
                              culpa9e: <number>
                            name: <string>
                          - id: <string>
                            metrics:
                              incididunt_fc7: <number>
                              quis_ef: <number>
                              occaecat_000: <number>
                              ullamcob: <number>
                              sint66e: <number>
                            name: <string>
                        paging:
                          next:
                            after: <string>
                            link: <string>
                          prev:
                            before: <string>
                            link: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      voluptate_1: <string>
                    updatedAt: <dateTime>
                  - assets:
                      ex23:
                        results:
                          - id: <string>
                            metrics:
                              adipisicing_7: <number>
                            name: <string>
                          - id: <string>
                            metrics:
                              magnacec: <number>
                            name: <string>
                        paging:
                          next:
                            after: <string>
                            link: <string>
                          prev:
                            before: <string>
                            link: <string>
                      labore357:
                        results:
                          - id: <string>
                            metrics:
                              inec2: <number>
                            name: <string>
                          - id: <string>
                            metrics:
                              ut7d_: <number>
                              in_a: <number>
                            name: <string>
                        paging:
                          next:
                            after: <string>
                            link: <string>
                          prev:
                            before: <string>
                            link: <string>
                      mollit_130:
                        results:
                          - id: <string>
                            metrics:
                              sit_9: <number>
                            name: <string>
                          - id: <string>
                            metrics:
                              aliqua_1c7: <number>
                              anim_d33: <number>
                            name: <string>
                        paging:
                          next:
                            after: <string>
                            link: <string>
                          prev:
                            before: <string>
                            link: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      Ut2f9: <string>
                      tempor158: <string>
                      aliquaf9: <string>
                    updatedAt: <dateTime>
                startedAt: <dateTime>
                status: COMPLETE
                requestedAt: <dateTime>
                links:
                  pariatur74: <string>
        '207':
          description: Multi-Status (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - assets:
                      dolore_1b:
                        results:
                          - id: <string>
                            metrics:
                              eiusmod62e: <number>
                              do_d5: <number>
                            name: <string>
                          - id: <string>
                            metrics:
                              incididunt_a9c: <number>
                            name: <string>
                        paging:
                          next:
                            after: <string>
                            link: <string>
                          prev:
                            before: <string>
                            link: <string>
                      Loremab:
                        results:
                          - id: <string>
                            metrics:
                              quie3f: <number>
                              incididuntb: <number>
                              veniam__: <number>
                            name: <string>
                          - id: <string>
                            metrics:
                              Excepteur2: <number>
                            name: <string>
                        paging:
                          next:
                            after: <string>
                            link: <string>
                          prev:
                            before: <string>
                            link: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      occaecat_7: <string>
                      cupidatat7: <string>
                      laborum_9c2: <string>
                    updatedAt: <dateTime>
                  - assets:
                      aute3:
                        results:
                          - id: <string>
                            metrics:
                              voluptate0: <number>
                              commodo_5_: <number>
                            name: <string>
                          - id: <string>
                            metrics:
                              labore_4: <number>
                              ullamco_ad: <number>
                              Lorem7: <number>
                            name: <string>
                        paging:
                          next:
                            after: <string>
                            link: <string>
                          prev:
                            before: <string>
                            link: <string>
                    createdAt: <dateTime>
                    id: <string>
                    properties:
                      Duis401: <string>
                      elit8f: <string>
                    updatedAt: <dateTime>
                startedAt: <dateTime>
                status: CANCELED
                numErrors: <integer>
                requestedAt: <dateTime>
                links:
                  fugiatb: <string>
                  pariaturfc: <string>
                  dolore5bc: <string>
                errors:
                  - category: <string>
                    context:
                      eiusmod_06:
                        - <string>
                        - <string>
                      ex_3:
                        - <string>
                        - <string>
                      irure_3:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          dolorf7:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          culpa6:
                            - <string>
                            - <string>
                          veniamd5:
                            - <string>
                            - <string>
                    links:
                      incididunt_6: <string>
                      dolore_ec: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
                  - category: <string>
                    context:
                      incididunt_34:
                        - <string>
                        - <string>
                      eiusmodf8b:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          irure_be:
                            - <string>
                            - <string>
                          est_1:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          sed502:
                            - <string>
                            - <string>
                    links:
                      ad_5: <string>
                      elit_5ab: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/batch/update:
    post:
      tags:
        - Campaigns API > Batch
      summary: Update a batch of campaigns
      description: >-
        This endpoint updates a batch of campaigns based on the provided input
        data.

        The maximum number of items in a batch request is 50.

        If an empty string ("") is passed for any property in the Batch Update,
        it will reset that property's value.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inputs:
                  - id: <string>
                    properties:
                      sed766: <string>
                      ea364: <string>
                  - id: <string>
                    properties:
                      aliquip_d4d: <string>
                      veniam_21: <string>
                      occaecatd91: <string>
                      elit_c: <string>
                      proident_c3c: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      occaecat_2de: <string>
                      deserunt_9c: <string>
                    updatedAt: <dateTime>
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      nisi4: <string>
                      cupidatatdfa: <string>
                    updatedAt: <dateTime>
                startedAt: <dateTime>
                status: PENDING
                requestedAt: <dateTime>
                links:
                  aliqua_c7: <string>
        '207':
          description: Multi-Status (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      occaecat66: <string>
                      nostrud_cad: <string>
                      magnabe2: <string>
                      suntf8: <string>
                      est_1: <string>
                    updatedAt: <dateTime>
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      site7: <string>
                    updatedAt: <dateTime>
                startedAt: <dateTime>
                status: PROCESSING
                numErrors: <integer>
                requestedAt: <dateTime>
                links:
                  Duis_6c: <string>
                  adipisicing4: <string>
                  aliquip_f4: <string>
                errors:
                  - category: <string>
                    context:
                      aliqua_6c:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          consectetur_0:
                            - <string>
                            - <string>
                          nulla2bb:
                            - <string>
                            - <string>
                          incididunt2c:
                            - <string>
                            - <string>
                          commodo16f:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          voluptated:
                            - <string>
                            - <string>
                          cupidatat4:
                            - <string>
                            - <string>
                    links:
                      eu_2: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
                  - category: <string>
                    context:
                      dolor7df:
                        - <string>
                        - <string>
                      laborum03:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          ea20:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          nostrud_:
                            - <string>
                            - <string>
                    links:
                      exercitation_1a: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/batch/archive:
    post:
      tags:
        - Campaigns API > Batch
      summary: Delete a batch of campaigns
      description: >-
        This endpoint deletes a batch of campaigns. 

        The maximum number of items in a batch request is 50.

        The response will always be 204 No Content, regardless of whether the
        campaigns exist or not, whether they were successfully deleted or not,
        or if only some of the campaigns in the batch were deleted.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inputs:
                  - id: <string>
                  - id: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/batch/create:
    post:
      tags:
        - Campaigns API > Batch
      summary: Create a batch of campaigns
      description: >-
        This endpoint creates a batch of campaigns. The maximum number of items
        in a batch request is 50.

        The campaigns in the response are not guaranteed to be in the same order
        as they were provided in the request.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                inputs:
                  - properties:
                      veniam_2: <string>
                      et_6: <string>
                  - properties:
                      incb: <string>
      security:
        - oauth2Auth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      occaecat_2de: <string>
                      deserunt_9c: <string>
                    updatedAt: <dateTime>
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      nisi4: <string>
                      cupidatatdfa: <string>
                    updatedAt: <dateTime>
                startedAt: <dateTime>
                status: PENDING
                requestedAt: <dateTime>
                links:
                  aliqua_c7: <string>
        '207':
          description: Multi-Status (WebDAV) (RFC 4918)
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                completedAt: <dateTime>
                results:
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      occaecat66: <string>
                      nostrud_cad: <string>
                      magnabe2: <string>
                      suntf8: <string>
                      est_1: <string>
                    updatedAt: <dateTime>
                  - createdAt: <dateTime>
                    id: <string>
                    properties:
                      site7: <string>
                    updatedAt: <dateTime>
                startedAt: <dateTime>
                status: PROCESSING
                numErrors: <integer>
                requestedAt: <dateTime>
                links:
                  Duis_6c: <string>
                  adipisicing4: <string>
                  aliquip_f4: <string>
                errors:
                  - category: <string>
                    context:
                      aliqua_6c:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          consectetur_0:
                            - <string>
                            - <string>
                          nulla2bb:
                            - <string>
                            - <string>
                          incididunt2c:
                            - <string>
                            - <string>
                          commodo16f:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          voluptated:
                            - <string>
                            - <string>
                          cupidatat4:
                            - <string>
                            - <string>
                    links:
                      eu_2: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
                  - category: <string>
                    context:
                      dolor7df:
                        - <string>
                        - <string>
                      laborum03:
                        - <string>
                        - <string>
                    errors:
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          ea20:
                            - <string>
                            - <string>
                      - message: <string>
                        subCategory: <string>
                        code: <string>
                        in: <string>
                        context:
                          nostrud_:
                            - <string>
                            - <string>
                    links:
                      exercitation_1a: <string>
                    message: <string>
                    status: <string>
                    subCategory: {}
                    id: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/{campaignGuid}/reports/metrics:
    get:
      tags:
        - Campaigns API > Reports
      summary: |
        Get Campaign Metrics
      description: >-
        This endpoint retrieves key attribution metrics for a specified
        campaign, such as sessions, new contacts, and influenced contacts.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: startDate
          in: query
          schema:
            type: string
          description: |-
            The start date for the report data, formatted as YYYY-MM-DD.
            Default value: 2006-01-01
          example: <string>
        - name: endDate
          in: query
          schema:
            type: string
          description: |-
            End date for the report data, formatted as YYYY-MM-DD.
            Default value: Current date
          example: <string>
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                influencedContacts: <integer>
                newContactsFirstTouch: <integer>
                newContactsLastTouch: <integer>
                sessions: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/{campaignGuid}/reports/revenue:
    get:
      tags:
        - Campaigns API > Reports
      summary: Fetch revenue
      description: |
        Fetch revenue attribution report data for a specified campaign
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: attributionModel
          in: query
          schema:
            type: string
          description: >-
            Allowed values: LINEAR, FIRST_INTERACTION, LAST_INTERACTION,
            FULL_PATH, U_SHAPED, W_SHAPED, TIME_DECAY, J_SHAPED,
            INVERSE_J_SHAPED

            Default value: LINEAR
          example: <string>
        - name: startDate
          in: query
          schema:
            type: string
          description: |-
            The start date for the report data, formatted as YYYY-MM-DD.
            Default value: 2006-01-01
          example: <string>
        - name: endDate
          in: query
          schema:
            type: string
          description: |-
            End date for the report data, formatted as YYYY-MM-DD.
            Default value: Current date
          example: <string>
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                contactsNumber: <integer>
                dealAmount: <number>
                dealsNumber: <integer>
                revenueAmount: <number>
                currencyCode: LYD
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/{campaignGuid}/reports/contacts/{contactType}:
    get:
      tags:
        - Campaigns API > Reports
      summary: Fetch contact IDs
      description: >-
        Fetch the list of contact IDs for the specified campaign and contact
        type
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: startDate
          in: query
          schema:
            type: string
          description: |-
            The start date for the report data, formatted as YYYY-MM-DD.
            Default value: 2006-01-01
          example: <string>
        - name: endDate
          in: query
          schema:
            type: string
          description: |-
            End date for the report data, formatted as YYYY-MM-DD.
            Default value: Current date
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: |-
            Limit for the number of contacts to fetch
            Default: 100
          example: <integer>
        - name: after
          in: query
          schema:
            type: string
          description: >-
            A cursor for pagination. If provided, the results will start after
            the given cursor.

            Example: NTI1Cg%3D%3D
          example: <string>
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
        - name: contactType
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The type of metric to filter the influenced contacts.
            Allowed values: contactFirstTouch, contactLastTouch,
            influencedContacts
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - id: <string>
                  - id: <string>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/{campaignGuid}/assets/{assetType}:
    get:
      tags:
        - Campaigns API > Asset
      summary: List assets
      description: >-
        This endpoint lists all assets of the campaign by asset type. The
        assetType parameter is required, and each request can only fetch assets
        of a single type.

        Asset metrics can also be fetched along with the assets; they are
        available only if start and end dates are provided.
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: after
          in: query
          schema:
            type: string
          description: >-
            A cursor for pagination. If provided, the results will start after
            the given cursor.

            Example: NTI1Cg%3D%3D
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: |-
            The maximum number of results to return.
            Default: 10
          example: <string>
        - name: startDate
          in: query
          schema:
            type: string
          description: >
            Start date to fetch asset metrics, formatted as YYYY-MM-DD. This
            date is used to fetch the metrics associated with the assets for a
            specified period.

            If not provided, no asset metrics will be fetched.
          example: <string>
        - name: endDate
          in: query
          schema:
            type: string
          description: >-
            End date to fetch asset metrics, formatted as YYYY-MM-DD. This date
            is used to fetch the metrics associated with the assets for a
            specified period.

            If not provided, no asset metrics will be fetched.
          example: <string>
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
        - name: assetType
          in: path
          schema:
            type: string
          required: true
          description: (Required) The type of asset to fetch.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - id: <string>
                    metrics:
                      amet1: <number>
                      labore5b: <number>
                      pariatur92: <number>
                      ullamcob: <number>
                    name: <string>
                  - id: <string>
                    metrics:
                      sunt_4: <number>
                      esse859: <number>
                    name: <string>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/{campaignGuid}/assets/{assetType}/{assetId}:
    put:
      tags:
        - Campaigns API > Asset
      summary: Add asset association
      description: >-
        Associate a specified asset with a campaign.

        Important: Currently, only the following asset types can be associated
        and disassociated via the API: Forms, Static lists, External website
        pages
      requestBody:
        content: {}
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID
          example: <string>
        - name: assetType
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The type of asset

            Important: Currently, only the following asset types are available
            for association via the API: FORM, OBJECT_LIST, EXTERNAL_WEB_URL
          example: <string>
        - name: assetId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Id of the asset
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    delete:
      tags:
        - Campaigns API > Asset
      summary: Remove asset association
      description: >-
        Disassociate a specified asset from a campaign.

        Important: Currently, only the following asset types can be associated
        and disassociated via the API: Forms, Static lists, External website
        pages
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: '*/*'
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
        - name: assetType
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The type of asset

            Important: Currently, only the following asset types are available
            for disassociation via the API: FORM, OBJECT_LIST, EXTERNAL_WEB_URL
          example: <string>
        - name: assetId
          in: path
          schema:
            type: string
          required: true
          description: (Required) Id of the asset
          example: <string>
      responses:
        '204':
          description: No Content
          content:
            text/plain:
              schema:
                type: string
              example: null
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/campaigns/{campaignGuid}/budget/totals:
    get:
      tags:
        - Campaigns API > Budget
      summary: Read budget
      description: >-
        Retrieve detailed information about the budget and spend items for a
        specified campaign, including the total budget, total spend, and
        remaining budget.

        Budget and Spend items may be returned in any order, but the order field
        specifies their sequence based on the creation date. The item with order
        0 is the oldest, and items with higher order values are newer
      security:
        - oauth2Auth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: campaignGuid
          in: path
          schema:
            type: string
          required: true
          description: (Required) Unique identifier for the campaign, formatted as a UUID.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                budgetItems:
                  - amount: <number>
                    createdAt: <integer>
                    id: <string>
                    name: <string>
                    order: <integer>
                    updatedAt: <integer>
                    description: <string>
                  - amount: <number>
                    createdAt: <integer>
                    id: <string>
                    name: <string>
                    order: <integer>
                    updatedAt: <integer>
                    description: <string>
                currencyCode: BDT
                spendItems:
                  - amount: <number>
                    createdAt: <integer>
                    id: <string>
                    name: <string>
                    order: <integer>
                    updatedAt: <integer>
                    description: <string>
                  - amount: <number>
                    createdAt: <integer>
                    id: <string>
                    name: <string>
                    order: <integer>
                    updatedAt: <integer>
                    description: <string>
                budgetTotal: <number>
                remainingBudget: <number>
                spendTotal: <number>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "laborum_e": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "anim_e": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "amet_8": [
                          "<string>",
                          "<string>"
                        ],
                        "occaecat_2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "enim_acd": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/forms/{formId}:
    get:
      tags:
        - Forms API > Forms
      summary: Get a form definition
      description: Returns a form based on the form ID provided.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: archived
          in: query
          schema:
            type: string
          description: Whether to return only results that have been archived.
          example: <boolean>
        - name: formId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The unique identifier of the form
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                archived: <boolean>
                configuration:
                  allowLinkToResetKnownValues: <boolean>
                  archivable: <boolean>
                  cloneable: <boolean>
                  createNewContactForNewEmail: <boolean>
                  editable: <boolean>
                  language: af
                  notifyContactOwner: <boolean>
                  notifyRecipients:
                    - <string>
                    - <string>
                  postSubmitAction:
                    type: thank_you
                    value: <string>
                  prePopulateKnownValues: <boolean>
                  recaptchaEnabled: <boolean>
                  lifecycleStages:
                    - objectTypeId: <string>
                      value: <string>
                    - objectTypeId: <string>
                      value: <string>
                createdAt: <dateTime>
                displayOptions:
                  renderRawHtml: <boolean>
                  style:
                    backgroundWidth: <string>
                    fontFamily: <string>
                    helpTextColor: <string>
                    helpTextSize: <string>
                    labelTextColor: <string>
                    labelTextSize: <string>
                    legalConsentTextColor: <string>
                    legalConsentTextSize: <string>
                    submitAlignment: right
                    submitColor: <string>
                    submitFontColor: <string>
                    submitSize: <string>
                  submitButtonText: <string>
                  theme: linear
                  cssClass: <string>
                fieldGroups:
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: doesnt_contain
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: not_between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_all
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_eq
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: text
                    richText: <string>
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: image
                    richText: <string>
                formType: hubspot
                id: <string>
                legalConsentOptions:
                  type: none
                name: <string>
                updatedAt: <dateTime>
                archivedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "ad_d": [
                      "<string>",
                      "<string>"
                    ],
                    "ut9": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ea_7": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "quisb3": [
                          "<string>",
                          "<string>"
                        ],
                        "Duis0": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "nisi_fe2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    put:
      tags:
        - Forms API > Forms
      summary: Update a form definition
      description: Update all fields of a hubspot form definition.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                archived: <boolean>
                configuration:
                  allowLinkToResetKnownValues: <boolean>
                  archivable: <boolean>
                  cloneable: <boolean>
                  createNewContactForNewEmail: <boolean>
                  editable: <boolean>
                  language: af
                  notifyContactOwner: <boolean>
                  notifyRecipients:
                    - <string>
                    - <string>
                  postSubmitAction:
                    type: thank_you
                    value: <string>
                  prePopulateKnownValues: <boolean>
                  recaptchaEnabled: <boolean>
                  lifecycleStages:
                    - objectTypeId: <string>
                      value: <string>
                    - objectTypeId: <string>
                      value: <string>
                createdAt: <dateTime>
                displayOptions:
                  renderRawHtml: <boolean>
                  style:
                    backgroundWidth: <string>
                    fontFamily: <string>
                    helpTextColor: <string>
                    helpTextSize: <string>
                    labelTextColor: <string>
                    labelTextSize: <string>
                    legalConsentTextColor: <string>
                    legalConsentTextSize: <string>
                    submitAlignment: right
                    submitColor: <string>
                    submitFontColor: <string>
                    submitSize: <string>
                  submitButtonText: <string>
                  theme: linear
                  cssClass: <string>
                fieldGroups:
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: doesnt_contain
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: not_between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_all
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_eq
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: text
                    richText: <string>
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: image
                    richText: <string>
                formType: hubspot
                id: <string>
                legalConsentOptions:
                  type: none
                name: <string>
                updatedAt: <dateTime>
                archivedAt: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: formId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                archived: <boolean>
                configuration:
                  allowLinkToResetKnownValues: <boolean>
                  archivable: <boolean>
                  cloneable: <boolean>
                  createNewContactForNewEmail: <boolean>
                  editable: <boolean>
                  language: af
                  notifyContactOwner: <boolean>
                  notifyRecipients:
                    - <string>
                    - <string>
                  postSubmitAction:
                    type: thank_you
                    value: <string>
                  prePopulateKnownValues: <boolean>
                  recaptchaEnabled: <boolean>
                  lifecycleStages:
                    - objectTypeId: <string>
                      value: <string>
                    - objectTypeId: <string>
                      value: <string>
                createdAt: <dateTime>
                displayOptions:
                  renderRawHtml: <boolean>
                  style:
                    backgroundWidth: <string>
                    fontFamily: <string>
                    helpTextColor: <string>
                    helpTextSize: <string>
                    labelTextColor: <string>
                    labelTextSize: <string>
                    legalConsentTextColor: <string>
                    legalConsentTextSize: <string>
                    submitAlignment: right
                    submitColor: <string>
                    submitFontColor: <string>
                    submitSize: <string>
                  submitButtonText: <string>
                  theme: linear
                  cssClass: <string>
                fieldGroups:
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: doesnt_contain
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: not_between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_all
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_eq
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: text
                    richText: <string>
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: image
                    richText: <string>
                formType: hubspot
                id: <string>
                legalConsentOptions:
                  type: none
                name: <string>
                updatedAt: <dateTime>
                archivedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "ad_d": [
                      "<string>",
                      "<string>"
                    ],
                    "ut9": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ea_7": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "quisb3": [
                          "<string>",
                          "<string>"
                        ],
                        "Duis0": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "nisi_fe2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    delete:
      tags:
        - Forms API > Forms
      summary: Archive a form definition
      description: >-
        Archive a form definition. New submissions will not be accepted and the
        form definition will be permanently deleted after 3 months.
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: formId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the form to archive.
          example: <string>
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                example: {}
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "ad_d": [
                      "<string>",
                      "<string>"
                    ],
                    "ut9": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ea_7": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "quisb3": [
                          "<string>",
                          "<string>"
                        ],
                        "Duis0": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "nisi_fe2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    patch:
      tags:
        - Forms API > Forms
      summary: Partially update a form definition
      description: Update some of the form definition components
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fieldGroups:
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: set_all
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_not_all
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: contains
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: gte
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: default_group
                    richTextType: image
                    richText: <string>
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: within_time
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: within_time
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: gt
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: text
                    richText: <string>
                archived: <boolean>
                configuration:
                  allowLinkToResetKnownValues: <boolean>
                  archivable: <boolean>
                  cloneable: <boolean>
                  createNewContactForNewEmail: <boolean>
                  editable: <boolean>
                  language: id
                  notifyContactOwner: <boolean>
                  notifyRecipients:
                    - <string>
                    - <string>
                  postSubmitAction:
                    type: redirect_url
                    value: <string>
                  prePopulateKnownValues: <boolean>
                  recaptchaEnabled: <boolean>
                  lifecycleStages:
                    - objectTypeId: <string>
                      value: <string>
                    - objectTypeId: <string>
                      value: <string>
                name: <string>
                legalConsentOptions:
                  type: none
                displayOptions:
                  renderRawHtml: <boolean>
                  style:
                    backgroundWidth: <string>
                    fontFamily: <string>
                    helpTextColor: <string>
                    helpTextSize: <string>
                    labelTextColor: <string>
                    labelTextSize: <string>
                    legalConsentTextColor: <string>
                    legalConsentTextSize: <string>
                    submitAlignment: center
                    submitColor: <string>
                    submitFontColor: <string>
                    submitSize: <string>
                  submitButtonText: <string>
                  theme: canvas
                  cssClass: <string>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: formId
          in: path
          schema:
            type: string
          required: true
          description: (Required) The ID of the form to update.
          example: <string>
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                archived: <boolean>
                configuration:
                  allowLinkToResetKnownValues: <boolean>
                  archivable: <boolean>
                  cloneable: <boolean>
                  createNewContactForNewEmail: <boolean>
                  editable: <boolean>
                  language: af
                  notifyContactOwner: <boolean>
                  notifyRecipients:
                    - <string>
                    - <string>
                  postSubmitAction:
                    type: thank_you
                    value: <string>
                  prePopulateKnownValues: <boolean>
                  recaptchaEnabled: <boolean>
                  lifecycleStages:
                    - objectTypeId: <string>
                      value: <string>
                    - objectTypeId: <string>
                      value: <string>
                createdAt: <dateTime>
                displayOptions:
                  renderRawHtml: <boolean>
                  style:
                    backgroundWidth: <string>
                    fontFamily: <string>
                    helpTextColor: <string>
                    helpTextSize: <string>
                    labelTextColor: <string>
                    labelTextSize: <string>
                    legalConsentTextColor: <string>
                    legalConsentTextSize: <string>
                    submitAlignment: right
                    submitColor: <string>
                    submitFontColor: <string>
                    submitSize: <string>
                  submitButtonText: <string>
                  theme: linear
                  cssClass: <string>
                fieldGroups:
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: doesnt_contain
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: not_between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_all
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_eq
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: text
                    richText: <string>
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: image
                    richText: <string>
                formType: hubspot
                id: <string>
                legalConsentOptions:
                  type: none
                name: <string>
                updatedAt: <dateTime>
                archivedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "ad_d": [
                      "<string>",
                      "<string>"
                    ],
                    "ut9": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ea_7": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "quisb3": [
                          "<string>",
                          "<string>"
                        ],
                        "Duis0": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "nisi_fe2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
  /marketing/v3/forms/:
    get:
      tags:
        - Forms API > Forms
      summary: Get a list of forms
      description: >-
        Returns a list of forms based on the search filters. By default, it
        returns the first 20 `hubspot` forms
      security:
        - apikeyAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: after
          in: query
          schema:
            type: string
          description: >-
            The paging cursor token of the last successfully read resource will
            be returned as the `paging.next.after` JSON property of a paged
            response containing more results.
          example: <string>
        - name: limit
          in: query
          schema:
            type: string
          description: The maximum number of results to display per page.
          example: <integer>
        - name: archived
          in: query
          schema:
            type: string
          description: Whether to return only results that have been archived.
          example: <boolean>
        - name: formTypes
          in: query
          schema:
            type: string
          description: The form types to be included in the results.
          example: captured
        - name: formTypes
          in: query
          schema:
            type: string
          description: The form types to be included in the results.
          example: all
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                results:
                  - archived: <boolean>
                    configuration:
                      allowLinkToResetKnownValues: <boolean>
                      archivable: <boolean>
                      cloneable: <boolean>
                      createNewContactForNewEmail: <boolean>
                      editable: <boolean>
                      language: sk
                      notifyContactOwner: <boolean>
                      notifyRecipients:
                        - <string>
                        - <string>
                      postSubmitAction:
                        type: thank_you
                        value: <string>
                      prePopulateKnownValues: <boolean>
                      recaptchaEnabled: <boolean>
                      lifecycleStages:
                        - objectTypeId: <string>
                          value: <string>
                        - objectTypeId: <string>
                          value: <string>
                    createdAt: <dateTime>
                    displayOptions:
                      renderRawHtml: <boolean>
                      style:
                        backgroundWidth: <string>
                        fontFamily: <string>
                        helpTextColor: <string>
                        helpTextSize: <string>
                        labelTextColor: <string>
                        labelTextSize: <string>
                        legalConsentTextColor: <string>
                        legalConsentTextSize: <string>
                        submitAlignment: center
                        submitColor: <string>
                        submitFontColor: <string>
                        submitSize: <string>
                      submitButtonText: <string>
                      theme: sharp
                      cssClass: <string>
                    fieldGroups:
                      - fields:
                          - dependentFields:
                              - dependentCondition:
                                  operator: within_time_reverse
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                              - dependentCondition:
                                  operator: contains
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                            fieldType: email
                            hidden: <boolean>
                            label: <string>
                            name: <string>
                            objectTypeId: <string>
                            required: <boolean>
                            validation:
                              blockedEmailDomains:
                                - <string>
                                - <string>
                              useDefaultBlockList: <boolean>
                            defaultValue: <string>
                            description: <string>
                            placeholder: <string>
                          - dependentFields:
                              - dependentCondition:
                                  operator: set_all
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                              - dependentCondition:
                                  operator: within_time
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                            fieldType: email
                            hidden: <boolean>
                            label: <string>
                            name: <string>
                            objectTypeId: <string>
                            required: <boolean>
                            validation:
                              blockedEmailDomains:
                                - <string>
                                - <string>
                              useDefaultBlockList: <boolean>
                            defaultValue: <string>
                            description: <string>
                            placeholder: <string>
                        groupType: progressive
                        richTextType: image
                        richText: <string>
                      - fields:
                          - dependentFields:
                              - dependentCondition:
                                  operator: set_neq
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                              - dependentCondition:
                                  operator: neq
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                            fieldType: email
                            hidden: <boolean>
                            label: <string>
                            name: <string>
                            objectTypeId: <string>
                            required: <boolean>
                            validation:
                              blockedEmailDomains:
                                - <string>
                                - <string>
                              useDefaultBlockList: <boolean>
                            defaultValue: <string>
                            description: <string>
                            placeholder: <string>
                          - dependentFields:
                              - dependentCondition:
                                  operator: within_time_reverse
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                              - dependentCondition:
                                  operator: not_between
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                            fieldType: email
                            hidden: <boolean>
                            label: <string>
                            name: <string>
                            objectTypeId: <string>
                            required: <boolean>
                            validation:
                              blockedEmailDomains:
                                - <string>
                                - <string>
                              useDefaultBlockList: <boolean>
                            defaultValue: <string>
                            description: <string>
                            placeholder: <string>
                        groupType: default_group
                        richTextType: text
                        richText: <string>
                    formType: hubspot
                    id: <string>
                    legalConsentOptions:
                      type: none
                    name: <string>
                    updatedAt: <dateTime>
                    archivedAt: <dateTime>
                  - archived: <boolean>
                    configuration:
                      allowLinkToResetKnownValues: <boolean>
                      archivable: <boolean>
                      cloneable: <boolean>
                      createNewContactForNewEmail: <boolean>
                      editable: <boolean>
                      language: nl
                      notifyContactOwner: <boolean>
                      notifyRecipients:
                        - <string>
                        - <string>
                      postSubmitAction:
                        type: thank_you
                        value: <string>
                      prePopulateKnownValues: <boolean>
                      recaptchaEnabled: <boolean>
                      lifecycleStages:
                        - objectTypeId: <string>
                          value: <string>
                        - objectTypeId: <string>
                          value: <string>
                    createdAt: <dateTime>
                    displayOptions:
                      renderRawHtml: <boolean>
                      style:
                        backgroundWidth: <string>
                        fontFamily: <string>
                        helpTextColor: <string>
                        helpTextSize: <string>
                        labelTextColor: <string>
                        labelTextSize: <string>
                        legalConsentTextColor: <string>
                        legalConsentTextSize: <string>
                        submitAlignment: center
                        submitColor: <string>
                        submitFontColor: <string>
                        submitSize: <string>
                      submitButtonText: <string>
                      theme: legacy
                      cssClass: <string>
                    fieldGroups:
                      - fields:
                          - dependentFields:
                              - dependentCondition:
                                  operator: set_all
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                              - dependentCondition:
                                  operator: set_eq
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                            fieldType: email
                            hidden: <boolean>
                            label: <string>
                            name: <string>
                            objectTypeId: <string>
                            required: <boolean>
                            validation:
                              blockedEmailDomains:
                                - <string>
                                - <string>
                              useDefaultBlockList: <boolean>
                            defaultValue: <string>
                            description: <string>
                            placeholder: <string>
                          - dependentFields:
                              - dependentCondition:
                                  operator: is_not_empty
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                              - dependentCondition:
                                  operator: lt
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                            fieldType: email
                            hidden: <boolean>
                            label: <string>
                            name: <string>
                            objectTypeId: <string>
                            required: <boolean>
                            validation:
                              blockedEmailDomains:
                                - <string>
                                - <string>
                              useDefaultBlockList: <boolean>
                            defaultValue: <string>
                            description: <string>
                            placeholder: <string>
                        groupType: queued
                        richTextType: text
                        richText: <string>
                      - fields:
                          - dependentFields:
                              - dependentCondition:
                                  operator: set_all
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                              - dependentCondition:
                                  operator: not_between
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                            fieldType: email
                            hidden: <boolean>
                            label: <string>
                            name: <string>
                            objectTypeId: <string>
                            required: <boolean>
                            validation:
                              blockedEmailDomains:
                                - <string>
                                - <string>
                              useDefaultBlockList: <boolean>
                            defaultValue: <string>
                            description: <string>
                            placeholder: <string>
                          - dependentFields:
                              - dependentCondition:
                                  operator: doesnt_contain
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                              - dependentCondition:
                                  operator: gte
                                  rangeEnd: <string>
                                  rangeStart: <string>
                                  value: <string>
                                  values:
                                    - <string>
                                    - <string>
                                dependentField:
                                  value: >-
                                    <Circular reference to
                                    #/components/schemas/EmailField detected>
                            fieldType: email
                            hidden: <boolean>
                            label: <string>
                            name: <string>
                            objectTypeId: <string>
                            required: <boolean>
                            validation:
                              blockedEmailDomains:
                                - <string>
                                - <string>
                              useDefaultBlockList: <boolean>
                            defaultValue: <string>
                            description: <string>
                            placeholder: <string>
                        groupType: queued
                        richTextType: text
                        richText: <string>
                    formType: hubspot
                    id: <string>
                    legalConsentOptions:
                      type: none
                    name: <string>
                    updatedAt: <dateTime>
                    archivedAt: <dateTime>
                paging:
                  next:
                    after: <string>
                    link: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "ad_d": [
                      "<string>",
                      "<string>"
                    ],
                    "ut9": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ea_7": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "quisb3": [
                          "<string>",
                          "<string>"
                        ],
                        "Duis0": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "nisi_fe2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
    post:
      tags:
        - Forms API > Forms
      summary: Create a form
      description: Add a new `hubspot` form
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                archived: <boolean>
                configuration:
                  allowLinkToResetKnownValues: <boolean>
                  archivable: <boolean>
                  cloneable: <boolean>
                  createNewContactForNewEmail: <boolean>
                  editable: <boolean>
                  language: fr
                  notifyContactOwner: <boolean>
                  notifyRecipients:
                    - <string>
                    - <string>
                  postSubmitAction:
                    type: redirect_url
                    value: <string>
                  prePopulateKnownValues: <boolean>
                  recaptchaEnabled: <boolean>
                  lifecycleStages:
                    - objectTypeId: <string>
                      value: <string>
                    - objectTypeId: <string>
                      value: <string>
                createdAt: <dateTime>
                displayOptions:
                  renderRawHtml: <boolean>
                  style:
                    backgroundWidth: <string>
                    fontFamily: <string>
                    helpTextColor: <string>
                    helpTextSize: <string>
                    labelTextColor: <string>
                    labelTextSize: <string>
                    legalConsentTextColor: <string>
                    legalConsentTextSize: <string>
                    submitAlignment: center
                    submitColor: <string>
                    submitFontColor: <string>
                    submitSize: <string>
                  submitButtonText: <string>
                  theme: legacy
                  cssClass: <string>
                fieldGroups:
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: set_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: lt
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: neq
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: default_group
                    richTextType: image
                    richText: <string>
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: str_ends_with
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_not_all
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: gte
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: gte
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: default_group
                    richTextType: image
                    richText: <string>
                formType: hubspot
                legalConsentOptions:
                  type: none
                name: <string>
                updatedAt: <dateTime>
                archivedAt: <dateTime>
      security:
        - apikeyAuth: []
      parameters:
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                archived: <boolean>
                configuration:
                  allowLinkToResetKnownValues: <boolean>
                  archivable: <boolean>
                  cloneable: <boolean>
                  createNewContactForNewEmail: <boolean>
                  editable: <boolean>
                  language: af
                  notifyContactOwner: <boolean>
                  notifyRecipients:
                    - <string>
                    - <string>
                  postSubmitAction:
                    type: thank_you
                    value: <string>
                  prePopulateKnownValues: <boolean>
                  recaptchaEnabled: <boolean>
                  lifecycleStages:
                    - objectTypeId: <string>
                      value: <string>
                    - objectTypeId: <string>
                      value: <string>
                createdAt: <dateTime>
                displayOptions:
                  renderRawHtml: <boolean>
                  style:
                    backgroundWidth: <string>
                    fontFamily: <string>
                    helpTextColor: <string>
                    helpTextSize: <string>
                    labelTextColor: <string>
                    labelTextSize: <string>
                    legalConsentTextColor: <string>
                    legalConsentTextSize: <string>
                    submitAlignment: right
                    submitColor: <string>
                    submitFontColor: <string>
                    submitSize: <string>
                  submitButtonText: <string>
                  theme: linear
                  cssClass: <string>
                fieldGroups:
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: doesnt_contain
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: not_between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_all
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_eq
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: text
                    richText: <string>
                  - fields:
                      - dependentFields:
                          - dependentCondition:
                              operator: between
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                      - dependentFields:
                          - dependentCondition:
                              operator: set_not_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                          - dependentCondition:
                              operator: set_any
                              rangeEnd: <string>
                              rangeStart: <string>
                              value: <string>
                              values:
                                - <string>
                                - <string>
                            dependentField:
                              value: >-
                                <Circular reference to
                                #/components/schemas/EmailField detected>
                        fieldType: email
                        hidden: <boolean>
                        label: <string>
                        name: <string>
                        objectTypeId: <string>
                        required: <boolean>
                        validation:
                          blockedEmailDomains:
                            - <string>
                            - <string>
                          useDefaultBlockList: <boolean>
                        defaultValue: <string>
                        description: <string>
                        placeholder: <string>
                    groupType: progressive
                    richTextType: image
                    richText: <string>
                formType: hubspot
                id: <string>
                legalConsentOptions:
                  type: none
                name: <string>
                updatedAt: <dateTime>
                archivedAt: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: '*/*'
          content:
            text/plain:
              schema:
                type: string
              example: |-
                {
                  "category": "<string>",
                  "correlationId": "<uuid>",
                  "message": "<string>",
                  "subCategory": "<string>",
                  "context": {
                    "ad_d": [
                      "<string>",
                      "<string>"
                    ],
                    "ut9": [
                      "<string>",
                      "<string>"
                    ]
                  },
                  "links": {
                    "ea_7": "<string>"
                  },
                  "errors": [
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "quisb3": [
                          "<string>",
                          "<string>"
                        ],
                        "Duis0": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    },
                    {
                      "message": "<string>",
                      "subCategory": "<string>",
                      "code": "<string>",
                      "in": "<string>",
                      "context": {
                        "nisi_fe2": [
                          "<string>",
                          "<string>"
                        ]
                      }
                    }
                  ]
                }
